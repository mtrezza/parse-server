{"version":3,"sources":["../../src/vendor/mongodbUrl.js"],"names":["punycode","require","exports","parse","urlParse","resolve","urlResolve","resolveObject","urlResolveObject","format","urlFormat","Url","protocol","slashes","auth","host","port","hostname","hash","search","query","pathname","path","href","protocolPattern","portPattern","simplePathPattern","unsafeProtocol","javascript","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","file","querystring","url","parseQueryString","slashesDenoteHost","u","prototype","TypeError","hasHash","start","end","rest","lastPos","i","inWs","split","length","code","charCodeAt","isWs","slice","simplePath","exec","proto","lowerProto","toLowerCase","test","hostEnd","atSign","nonHost","decodeURIComponent","parseHost","ipv6Hostname","result","validateHostname","undefined","toASCII","p","h","autoEscapeStr","questionIdx","hashIdx","firstIdx","s","self","newRest","obj","call","encodeAuth","indexOf","stringify","newPathname","replace","source","relative","rel","tkeys","Object","keys","tk","tkey","rkeys","rk","rkey","v","k","relPath","shift","unshift","join","isSourceAbs","charAt","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","concat","authInHost","last","hasTrailingSlash","up","spliceOne","substr","push","isAbsolute","list","index","n","hexTable","Array","toString","toUpperCase","str","out","c","c2"],"mappings":"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","sourcesContent":["// A slightly patched version of node's url module, with support for mongodb://\n// uris.\n//\n// See https://github.com/nodejs/node/blob/master/LICENSE for licensing\n// information\n\n'use strict';\n\nconst punycode = require('punycode');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nconst protocolPattern = /^([a-z0-9.+-]+:)/i;\nconst portPattern = /:[0-9]*$/;\n\n// Special case for a simple path URL\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/;\n\n// protocols that can allow \"unsafe\" and \"unwise\" chars.\nconst unsafeProtocol = {\n  javascript: true,\n  'javascript:': true,\n};\n// protocols that never have a hostname.\nconst hostlessProtocol = {\n  javascript: true,\n  'javascript:': true,\n};\n// protocols that always contain a // bit.\nconst slashedProtocol = {\n  http: true,\n  'http:': true,\n  https: true,\n  'https:': true,\n  ftp: true,\n  'ftp:': true,\n  gopher: true,\n  'gopher:': true,\n  file: true,\n  'file:': true,\n};\nconst querystring = require('querystring');\n\n/* istanbul ignore next: improve coverage */\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url instanceof Url) return url;\n\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\n/* istanbul ignore next: improve coverage */\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  if (typeof url !== 'string') {\n    throw new TypeError('Parameter \"url\" must be a string, not ' + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var hasHash = false;\n  var start = -1;\n  var end = -1;\n  var rest = '';\n  var lastPos = 0;\n  var i = 0;\n  for (var inWs = false, split = false; i < url.length; ++i) {\n    const code = url.charCodeAt(i);\n\n    // Find first and last non-whitespace characters for trimming\n    const isWs =\n      code === 32 /* */ ||\n      code === 9 /*\\t*/ ||\n      code === 13 /*\\r*/ ||\n      code === 10 /*\\n*/ ||\n      code === 12 /*\\f*/ ||\n      code === 160 /*\\u00A0*/ ||\n      code === 65279; /*\\uFEFF*/\n    if (start === -1) {\n      if (isWs) continue;\n      lastPos = start = i;\n    } else {\n      if (inWs) {\n        if (!isWs) {\n          end = -1;\n          inWs = false;\n        }\n      } else if (isWs) {\n        end = i;\n        inWs = true;\n      }\n    }\n\n    // Only convert backslashes while we haven't seen a split character\n    if (!split) {\n      switch (code) {\n        case 35: // '#'\n          hasHash = true;\n        // Fall through\n        case 63: // '?'\n          split = true;\n          break;\n        case 92: // '\\\\'\n          if (i - lastPos > 0) rest += url.slice(lastPos, i);\n          rest += '/';\n          lastPos = i + 1;\n          break;\n      }\n    } else if (!hasHash && code === 35 /*#*/) {\n      hasHash = true;\n    }\n  }\n\n  // Check if string was non-empty (including strings with only whitespace)\n  if (start !== -1) {\n    if (lastPos === start) {\n      // We didn't convert any backslashes\n\n      if (end === -1) {\n        if (start === 0) rest = url;\n        else rest = url.slice(start);\n      } else {\n        rest = url.slice(start, end);\n      }\n    } else if (end === -1 && lastPos < url.length) {\n      // We converted some backslashes and have only part of the entire string\n      rest += url.slice(lastPos);\n    } else if (end !== -1 && lastPos < end) {\n      // We converted some backslashes and have only part of the entire string\n      rest += url.slice(lastPos, end);\n    }\n  }\n\n  if (!slashesDenoteHost && !hasHash) {\n    // Try fast path regexp\n    const simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.slice(1));\n        } else {\n          this.query = this.search.slice(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.slice(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || /^\\/\\/[^@\\/]+@[^@\\/]+/.test(rest)) {\n    var slashes = rest.charCodeAt(0) === 47 /*/*/ && rest.charCodeAt(1) === 47; /*/*/\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.slice(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || (proto && !slashedProtocol[proto]))) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:b path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    var hostEnd = -1;\n    var atSign = -1;\n    var nonHost = -1;\n    for (i = 0; i < rest.length; ++i) {\n      switch (rest.charCodeAt(i)) {\n        case 9: // '\\t'\n        case 10: // '\\n'\n        case 13: // '\\r'\n        case 32: // ' '\n        case 34: // '\"'\n        case 37: // '%'\n        case 39: // '\\''\n        case 59: // ';'\n        case 60: // '<'\n        case 62: // '>'\n        case 92: // '\\\\'\n        case 94: // '^'\n        case 96: // '`'\n        case 123: // '{'\n        case 124: // '|'\n        case 125: // '}'\n          // Characters that are never ever allowed in a hostname from RFC 2396\n          if (nonHost === -1) nonHost = i;\n          break;\n        case 35: // '#'\n        case 47: // '/'\n        case 63: // '?'\n          // Find the first instance of any host-ending characters\n          if (nonHost === -1) nonHost = i;\n          hostEnd = i;\n          break;\n        case 64: // '@'\n          // At this point, either we have an explicit point where the\n          // auth portion cannot go past, or the last @ char is the decider.\n          atSign = i;\n          nonHost = -1;\n          break;\n      }\n      if (hostEnd !== -1) break;\n    }\n    start = 0;\n    if (atSign !== -1) {\n      this.auth = decodeURIComponent(rest.slice(0, atSign));\n      start = atSign + 1;\n    }\n    if (nonHost === -1) {\n      this.host = rest.slice(start);\n      rest = '';\n    } else {\n      this.host = rest.slice(start, nonHost);\n      rest = rest.slice(nonHost);\n    }\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    if (typeof this.hostname !== 'string') this.hostname = '';\n\n    var hostname = this.hostname;\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname =\n      hostname.charCodeAt(0) === 91 /*[*/ && hostname.charCodeAt(hostname.length - 1) === 93; /*]*/\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      const result = validateHostname(this, rest, hostname);\n      if (result !== undefined) rest = result;\n    }\n\n    // hostnames are always lower case.\n    this.hostname = this.hostname.toLowerCase();\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.slice(1, -1);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    const result = autoEscapeStr(rest);\n    if (result !== undefined) rest = result;\n  }\n\n  var questionIdx = -1;\n  var hashIdx = -1;\n  for (i = 0; i < rest.length; ++i) {\n    const code = rest.charCodeAt(i);\n    if (code === 35 /*#*/) {\n      this.hash = rest.slice(i);\n      hashIdx = i;\n      break;\n    } else if (code === 63 /*?*/ && questionIdx === -1) {\n      questionIdx = i;\n    }\n  }\n\n  if (questionIdx !== -1) {\n    if (hashIdx === -1) {\n      this.search = rest.slice(questionIdx);\n      this.query = rest.slice(questionIdx + 1);\n    } else {\n      this.search = rest.slice(questionIdx, hashIdx);\n      this.query = rest.slice(questionIdx + 1, hashIdx);\n    }\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n\n  var firstIdx =\n    questionIdx !== -1 && (hashIdx === -1 || questionIdx < hashIdx) ? questionIdx : hashIdx;\n  if (firstIdx === -1) {\n    if (rest.length > 0) this.pathname = rest;\n  } else if (firstIdx > 0) {\n    this.pathname = rest.slice(0, firstIdx);\n  }\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  // to support http.request\n  if (this.pathname || this.search) {\n    const p = this.pathname || '';\n    const s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n/* istanbul ignore next: improve coverage */\nfunction validateHostname(self, rest, hostname) {\n  for (var i = 0, lastPos; i <= hostname.length; ++i) {\n    var code;\n    if (i < hostname.length) code = hostname.charCodeAt(i);\n    if (code === 46 /*.*/ || i === hostname.length) {\n      if (i - lastPos > 0) {\n        if (i - lastPos > 63) {\n          self.hostname = hostname.slice(0, lastPos + 63);\n          return '/' + hostname.slice(lastPos + 63) + rest;\n        }\n      }\n      lastPos = i + 1;\n      continue;\n    } else if (\n      (code >= 48 /*0*/ && code <= 57) /*9*/ ||\n      (code >= 97 /*a*/ && code <= 122) /*z*/ ||\n      code === 45 /*-*/ ||\n      (code >= 65 /*A*/ && code <= 90) /*Z*/ ||\n      code === 43 /*+*/ ||\n      code === 95 /*_*/ ||\n      /* BEGIN MONGO URI PATCH */\n      code === 44 /*,*/ ||\n      code === 58 /*:*/ ||\n      /* END MONGO URI PATCH */\n      code > 127\n    ) {\n      continue;\n    }\n    // Invalid host character\n    self.hostname = hostname.slice(0, i);\n    if (i < hostname.length) return '/' + hostname.slice(i) + rest;\n    break;\n  }\n}\n\n/* istanbul ignore next: improve coverage */\nfunction autoEscapeStr(rest) {\n  var newRest = '';\n  var lastPos = 0;\n  for (var i = 0; i < rest.length; ++i) {\n    // Automatically escape all delimiters and unwise characters from RFC 2396\n    // Also escape single quotes in case of an XSS attack\n    switch (rest.charCodeAt(i)) {\n      case 9: // '\\t'\n        if (i - lastPos > 0) newRest += rest.slice(lastPos, i);\n        newRest += '%09';\n        lastPos = i + 1;\n        break;\n      case 10: // '\\n'\n        if (i - lastPos > 0) newRest += rest.slice(lastPos, i);\n        newRest += '%0A';\n        lastPos = i + 1;\n        break;\n      case 13: // '\\r'\n        if (i - lastPos > 0) newRest += rest.slice(lastPos, i);\n        newRest += '%0D';\n        lastPos = i + 1;\n        break;\n      case 32: // ' '\n        if (i - lastPos > 0) newRest += rest.slice(lastPos, i);\n        newRest += '%20';\n        lastPos = i + 1;\n        break;\n      case 34: // '\"'\n        if (i - lastPos > 0) newRest += rest.slice(lastPos, i);\n        newRest += '%22';\n        lastPos = i + 1;\n        break;\n      case 39: // '\\''\n        if (i - lastPos > 0) newRest += rest.slice(lastPos, i);\n        newRest += '%27';\n        lastPos = i + 1;\n        break;\n      case 60: // '<'\n        if (i - lastPos > 0) newRest += rest.slice(lastPos, i);\n        newRest += '%3C';\n        lastPos = i + 1;\n        break;\n      case 62: // '>'\n        if (i - lastPos > 0) newRest += rest.slice(lastPos, i);\n        newRest += '%3E';\n        lastPos = i + 1;\n        break;\n      case 92: // '\\\\'\n        if (i - lastPos > 0) newRest += rest.slice(lastPos, i);\n        newRest += '%5C';\n        lastPos = i + 1;\n        break;\n      case 94: // '^'\n        if (i - lastPos > 0) newRest += rest.slice(lastPos, i);\n        newRest += '%5E';\n        lastPos = i + 1;\n        break;\n      case 96: // '`'\n        if (i - lastPos > 0) newRest += rest.slice(lastPos, i);\n        newRest += '%60';\n        lastPos = i + 1;\n        break;\n      case 123: // '{'\n        if (i - lastPos > 0) newRest += rest.slice(lastPos, i);\n        newRest += '%7B';\n        lastPos = i + 1;\n        break;\n      case 124: // '|'\n        if (i - lastPos > 0) newRest += rest.slice(lastPos, i);\n        newRest += '%7C';\n        lastPos = i + 1;\n        break;\n      case 125: // '}'\n        if (i - lastPos > 0) newRest += rest.slice(lastPos, i);\n        newRest += '%7D';\n        lastPos = i + 1;\n        break;\n    }\n  }\n  if (lastPos === 0) return;\n  if (lastPos < rest.length) return newRest + rest.slice(lastPos);\n  else return newRest;\n}\n\n// format a parsed object into a url string\n/* istanbul ignore next: improve coverage */\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (typeof obj === 'string') obj = urlParse(obj);\n  else if (typeof obj !== 'object' || obj === null)\n    throw new TypeError(\n      'Parameter \"urlObj\" must be an object, not ' + obj === null ? 'null' : typeof obj\n    );\n  else if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n\n  return obj.format();\n}\n\n/* istanbul ignore next: improve coverage */\nUrl.prototype.format = function () {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeAuth(auth);\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '';\n  var pathname = this.pathname || '';\n  var hash = this.hash || '';\n  var host = false;\n  var query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query !== null && typeof this.query === 'object')\n    query = querystring.stringify(this.query);\n\n  var search = this.search || (query && '?' + query) || '';\n\n  if (protocol && protocol.charCodeAt(protocol.length - 1) !== 58 /*:*/) protocol += ':';\n\n  var newPathname = '';\n  var lastPos = 0;\n  for (var i = 0; i < pathname.length; ++i) {\n    switch (pathname.charCodeAt(i)) {\n      case 35: // '#'\n        if (i - lastPos > 0) newPathname += pathname.slice(lastPos, i);\n        newPathname += '%23';\n        lastPos = i + 1;\n        break;\n      case 63: // '?'\n        if (i - lastPos > 0) newPathname += pathname.slice(lastPos, i);\n        newPathname += '%3F';\n        lastPos = i + 1;\n        break;\n    }\n  }\n  if (lastPos > 0) {\n    if (lastPos !== pathname.length) pathname = newPathname + pathname.slice(lastPos);\n    else pathname = newPathname;\n  }\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes || ((!protocol || slashedProtocol[protocol]) && host !== false)) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charCodeAt(0) !== 47 /*/*/) pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  search = search.replace('#', '%23');\n\n  if (hash && hash.charCodeAt(0) !== 35 /*#*/) hash = '#' + hash;\n  if (search && search.charCodeAt(0) !== 63 /*?*/) search = '?' + search;\n\n  return protocol + host + pathname + search + hash;\n};\n\n/* istanbul ignore next: improve coverage */\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\n/* istanbul ignore next: improve coverage */\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\n/* istanbul ignore next: improve coverage */\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\n/* istanbul ignore next: improve coverage */\nUrl.prototype.resolveObject = function (relative) {\n  if (typeof relative === 'string') {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (\n      !relative.host &&\n      !/^file:?$/.test(relative.protocol) &&\n      !hostlessProtocol[relative.protocol]\n    ) {\n      const relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/';\n  var isRelAbs = relative.host || (relative.pathname && relative.pathname.charAt(0) === '/');\n  var mustEndAbs = isRelAbs || isSourceAbs || (result.host && relative.pathname);\n  var removeAllDots = mustEndAbs;\n  var srcPath = (result.pathname && result.pathname.split('/')) || [];\n  var relPath = (relative.pathname && relative.pathname.split('/')) || [];\n  var psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname =\n      relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (relative.search !== null && relative.search !== undefined) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occasionally the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      const authInHost =\n        result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (result.pathname !== null || result.search !== null) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash =\n    ((result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..')) ||\n    last === '';\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      spliceOne(srcPath, i);\n    } else if (last === '..') {\n      spliceOne(srcPath, i);\n      up++;\n    } else if (up) {\n      spliceOne(srcPath, i);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && srcPath.join('/').substr(-1) !== '/') {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    if (isAbsolute) {\n      result.hostname = result.host = '';\n    } else {\n      result.hostname = result.host = srcPath.length ? srcPath.shift() : '';\n    }\n    //occasionally the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    const authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (result.pathname !== null || result.search !== null) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\n/* istanbul ignore next: improve coverage */\nUrl.prototype.parseHost = function () {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.slice(1);\n    }\n    host = host.slice(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\n/* istanbul ignore next: improve coverage */\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) list[i] = list[k];\n  list.pop();\n}\n\nvar hexTable = new Array(256);\nfor (var i = 0; i < 256; ++i)\n  hexTable[i] = '%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase();\n/* istanbul ignore next: improve coverage */\nfunction encodeAuth(str) {\n  // faster encodeURIComponent alternative for encoding auth uri components\n  var out = '';\n  var lastPos = 0;\n  for (var i = 0; i < str.length; ++i) {\n    var c = str.charCodeAt(i);\n\n    // These characters do not need escaping:\n    // ! - . _ ~\n    // ' ( ) * :\n    // digits\n    // alpha (uppercase)\n    // alpha (lowercase)\n    if (\n      c === 0x21 ||\n      c === 0x2d ||\n      c === 0x2e ||\n      c === 0x5f ||\n      c === 0x7e ||\n      (c >= 0x27 && c <= 0x2a) ||\n      (c >= 0x30 && c <= 0x3a) ||\n      (c >= 0x41 && c <= 0x5a) ||\n      (c >= 0x61 && c <= 0x7a)\n    ) {\n      continue;\n    }\n\n    if (i - lastPos > 0) out += str.slice(lastPos, i);\n\n    lastPos = i + 1;\n\n    // Other ASCII characters\n    if (c < 0x80) {\n      out += hexTable[c];\n      continue;\n    }\n\n    // Multi-byte characters ...\n    if (c < 0x800) {\n      out += hexTable[0xc0 | (c >> 6)] + hexTable[0x80 | (c & 0x3f)];\n      continue;\n    }\n    if (c < 0xd800 || c >= 0xe000) {\n      out +=\n        hexTable[0xe0 | (c >> 12)] +\n        hexTable[0x80 | ((c >> 6) & 0x3f)] +\n        hexTable[0x80 | (c & 0x3f)];\n      continue;\n    }\n    // Surrogate pair\n    ++i;\n    var c2;\n    if (i < str.length) c2 = str.charCodeAt(i) & 0x3ff;\n    else c2 = 0;\n    c = 0x10000 + (((c & 0x3ff) << 10) | c2);\n    out +=\n      hexTable[0xf0 | (c >> 18)] +\n      hexTable[0x80 | ((c >> 12) & 0x3f)] +\n      hexTable[0x80 | ((c >> 6) & 0x3f)] +\n      hexTable[0x80 | (c & 0x3f)];\n  }\n  if (lastPos === 0) return str;\n  if (lastPos < str.length) return out + str.slice(lastPos);\n  return out;\n}\n"],"file":"mongodbUrl.js"}