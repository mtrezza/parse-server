{"version":3,"sources":["../src/Config.js"],"names":["removeTrailingSlash","str","endsWith","substr","length","Config","get","applicationId","mount","cacheInfo","AppCache","config","Object","keys","forEach","key","schemaCache","SchemaCache","cacheController","schemaCacheTTL","enableSingleSchemaCache","database","DatabaseController","databaseController","adapter","generateSessionExpiresAt","bind","generateEmailVerifyTokenExpiresAt","put","serverConfiguration","validate","appId","setupPasswordValidator","passwordPolicy","verifyUserEmails","userController","appName","publicServerURL","revokeSessionOnPasswordReset","expireInactiveSessions","sessionLength","maxLimit","emailVerifyTokenValidityDuration","accountLockout","masterKeyIps","masterKey","readOnlyMasterKey","allowHeaders","idempotencyOptions","emailVerifyTokenReuseIfValid","fileUpload","pages","Error","emailAdapter","validateEmailConfiguration","validateAccountLockoutPolicy","validatePasswordPolicy","validateFileUploadOptions","startsWith","validateSessionConfiguration","validateMasterKeyIps","validateMaxLimit","validateAllowHeaders","validateIdempotencyOptions","validatePagesOptions","prototype","toString","call","enableRouter","undefined","PagesOptions","default","enableLocalization","localizationJsonPath","localizationFallbackLocale","placeholders","forceRedirect","pagesPath","pagesEndpoint","customUrls","ttl","IdempotencyOptions","isNaN","paths","Array","duration","Number","isInteger","threshold","unlockOnPasswordReset","AccountLockoutOptions","maxPasswordAge","resetTokenValidityDuration","validatorPattern","RegExp","validatorCallback","doNotAllowUsername","maxPasswordHistory","resetTokenReuseIfValid","patternValidator","value","test","e","ReferenceError","enableForAnonymousUser","FileUploadOptions","enableForPublic","enableForAuthenticatedUser","ip","net","isIP","_mount","newValue","includes","isArray","header","trim","now","Date","getTime","generatePasswordResetTokenExpiresAt","invalidLinkURL","customPages","invalidLink","invalidVerificationLinkURL","invalidVerificationLink","linkSendSuccessURL","linkSendSuccess","linkSendFailURL","linkSendFail","verifyEmailSuccessURL","verifyEmailSuccess","choosePasswordURL","choosePassword","requestResetPasswordURL","passwordResetSuccessURL","passwordResetSuccess","parseFrameURL","verifyEmailURL","module","exports"],"mappings":"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","sourcesContent":["// A Config object provides information about how a specific app is\n// configured.\n// mount is the URL for the root of the API; includes http, domain, etc.\n\nimport AppCache from './cache';\nimport SchemaCache from './Controllers/SchemaCache';\nimport DatabaseController from './Controllers/DatabaseController';\nimport net from 'net';\nimport {\n  IdempotencyOptions,\n  FileUploadOptions,\n  AccountLockoutOptions,\n  PagesOptions,\n} from './Options/Definitions';\nimport { isBoolean, isString } from 'lodash';\n\nfunction removeTrailingSlash(str) {\n  if (!str) {\n    return str;\n  }\n  if (str.endsWith('/')) {\n    str = str.substr(0, str.length - 1);\n  }\n  return str;\n}\n\nexport class Config {\n  static get(applicationId: string, mount: string) {\n    const cacheInfo = AppCache.get(applicationId);\n    if (!cacheInfo) {\n      return;\n    }\n    const config = new Config();\n    config.applicationId = applicationId;\n    Object.keys(cacheInfo).forEach(key => {\n      if (key == 'databaseController') {\n        const schemaCache = new SchemaCache(\n          cacheInfo.cacheController,\n          cacheInfo.schemaCacheTTL,\n          cacheInfo.enableSingleSchemaCache\n        );\n        config.database = new DatabaseController(cacheInfo.databaseController.adapter, schemaCache);\n      } else {\n        config[key] = cacheInfo[key];\n      }\n    });\n    config.mount = removeTrailingSlash(mount);\n    config.generateSessionExpiresAt = config.generateSessionExpiresAt.bind(config);\n    config.generateEmailVerifyTokenExpiresAt = config.generateEmailVerifyTokenExpiresAt.bind(\n      config\n    );\n    return config;\n  }\n\n  static put(serverConfiguration) {\n    Config.validate(serverConfiguration);\n    AppCache.put(serverConfiguration.appId, serverConfiguration);\n    Config.setupPasswordValidator(serverConfiguration.passwordPolicy);\n    return serverConfiguration;\n  }\n\n  static validate({\n    verifyUserEmails,\n    userController,\n    appName,\n    publicServerURL,\n    revokeSessionOnPasswordReset,\n    expireInactiveSessions,\n    sessionLength,\n    maxLimit,\n    emailVerifyTokenValidityDuration,\n    accountLockout,\n    passwordPolicy,\n    masterKeyIps,\n    masterKey,\n    readOnlyMasterKey,\n    allowHeaders,\n    idempotencyOptions,\n    emailVerifyTokenReuseIfValid,\n    fileUpload,\n    pages,\n  }) {\n    if (masterKey === readOnlyMasterKey) {\n      throw new Error('masterKey and readOnlyMasterKey should be different');\n    }\n\n    const emailAdapter = userController.adapter;\n    if (verifyUserEmails) {\n      this.validateEmailConfiguration({\n        emailAdapter,\n        appName,\n        publicServerURL,\n        emailVerifyTokenValidityDuration,\n        emailVerifyTokenReuseIfValid,\n      });\n    }\n\n    this.validateAccountLockoutPolicy(accountLockout);\n    this.validatePasswordPolicy(passwordPolicy);\n    this.validateFileUploadOptions(fileUpload);\n\n    if (typeof revokeSessionOnPasswordReset !== 'boolean') {\n      throw 'revokeSessionOnPasswordReset must be a boolean value';\n    }\n\n    if (publicServerURL) {\n      if (!publicServerURL.startsWith('http://') && !publicServerURL.startsWith('https://')) {\n        throw 'publicServerURL should be a valid HTTPS URL starting with https://';\n      }\n    }\n    this.validateSessionConfiguration(sessionLength, expireInactiveSessions);\n    this.validateMasterKeyIps(masterKeyIps);\n    this.validateMaxLimit(maxLimit);\n    this.validateAllowHeaders(allowHeaders);\n    this.validateIdempotencyOptions(idempotencyOptions);\n    this.validatePagesOptions(pages);\n  }\n\n  static validatePagesOptions(pages) {\n    if (Object.prototype.toString.call(pages) !== '[object Object]') {\n      throw 'Parse Server option pages must be an object.';\n    }\n    if (pages.enableRouter === undefined) {\n      pages.enableRouter = PagesOptions.enableRouter.default;\n    } else if (!isBoolean(pages.enableRouter)) {\n      throw 'Parse Server option pages.enableRouter must be a boolean.';\n    }\n    if (pages.enableLocalization === undefined) {\n      pages.enableLocalization = PagesOptions.enableLocalization.default;\n    } else if (!isBoolean(pages.enableLocalization)) {\n      throw 'Parse Server option pages.enableLocalization must be a boolean.';\n    }\n    if (pages.localizationJsonPath === undefined) {\n      pages.localizationJsonPath = PagesOptions.localizationJsonPath.default;\n    } else if (!isString(pages.localizationJsonPath)) {\n      throw 'Parse Server option pages.localizationJsonPath must be a string.';\n    }\n    if (pages.localizationFallbackLocale === undefined) {\n      pages.localizationFallbackLocale = PagesOptions.localizationFallbackLocale.default;\n    } else if (!isString(pages.localizationFallbackLocale)) {\n      throw 'Parse Server option pages.localizationFallbackLocale must be a string.';\n    }\n    if (pages.placeholders === undefined) {\n      pages.placeholders = PagesOptions.placeholders.default;\n    } else if (\n      Object.prototype.toString.call(pages.placeholders) !== '[object Object]' &&\n      typeof pages.placeholders !== 'function'\n    ) {\n      throw 'Parse Server option pages.placeholders must be an object or a function.';\n    }\n    if (pages.forceRedirect === undefined) {\n      pages.forceRedirect = PagesOptions.forceRedirect.default;\n    } else if (!isBoolean(pages.forceRedirect)) {\n      throw 'Parse Server option pages.forceRedirect must be a boolean.';\n    }\n    if (pages.pagesPath === undefined) {\n      pages.pagesPath = PagesOptions.pagesPath.default;\n    } else if (!isString(pages.pagesPath)) {\n      throw 'Parse Server option pages.pagesPath must be a string.';\n    }\n    if (pages.pagesEndpoint === undefined) {\n      pages.pagesEndpoint = PagesOptions.pagesEndpoint.default;\n    } else if (!isString(pages.pagesEndpoint)) {\n      throw 'Parse Server option pages.pagesEndpoint must be a string.';\n    }\n    if (pages.customUrls === undefined) {\n      pages.customUrls = PagesOptions.customUrls.default;\n    } else if (Object.prototype.toString.call(pages.customUrls) !== '[object Object]') {\n      throw 'Parse Server option pages.customUrls must be an object.';\n    }\n  }\n\n  static validateIdempotencyOptions(idempotencyOptions) {\n    if (!idempotencyOptions) {\n      return;\n    }\n    if (idempotencyOptions.ttl === undefined) {\n      idempotencyOptions.ttl = IdempotencyOptions.ttl.default;\n    } else if (!isNaN(idempotencyOptions.ttl) && idempotencyOptions.ttl <= 0) {\n      throw 'idempotency TTL value must be greater than 0 seconds';\n    } else if (isNaN(idempotencyOptions.ttl)) {\n      throw 'idempotency TTL value must be a number';\n    }\n    if (!idempotencyOptions.paths) {\n      idempotencyOptions.paths = IdempotencyOptions.paths.default;\n    } else if (!(idempotencyOptions.paths instanceof Array)) {\n      throw 'idempotency paths must be of an array of strings';\n    }\n  }\n\n  static validateAccountLockoutPolicy(accountLockout) {\n    if (accountLockout) {\n      if (\n        typeof accountLockout.duration !== 'number' ||\n        accountLockout.duration <= 0 ||\n        accountLockout.duration > 99999\n      ) {\n        throw 'Account lockout duration should be greater than 0 and less than 100000';\n      }\n\n      if (\n        !Number.isInteger(accountLockout.threshold) ||\n        accountLockout.threshold < 1 ||\n        accountLockout.threshold > 999\n      ) {\n        throw 'Account lockout threshold should be an integer greater than 0 and less than 1000';\n      }\n\n      if (accountLockout.unlockOnPasswordReset === undefined) {\n        accountLockout.unlockOnPasswordReset = AccountLockoutOptions.unlockOnPasswordReset.default;\n      } else if (!isBoolean(accountLockout.unlockOnPasswordReset)) {\n        throw 'Parse Server option accountLockout.unlockOnPasswordReset must be a boolean.';\n      }\n    }\n  }\n\n  static validatePasswordPolicy(passwordPolicy) {\n    if (passwordPolicy) {\n      if (\n        passwordPolicy.maxPasswordAge !== undefined &&\n        (typeof passwordPolicy.maxPasswordAge !== 'number' || passwordPolicy.maxPasswordAge < 0)\n      ) {\n        throw 'passwordPolicy.maxPasswordAge must be a positive number';\n      }\n\n      if (\n        passwordPolicy.resetTokenValidityDuration !== undefined &&\n        (typeof passwordPolicy.resetTokenValidityDuration !== 'number' ||\n          passwordPolicy.resetTokenValidityDuration <= 0)\n      ) {\n        throw 'passwordPolicy.resetTokenValidityDuration must be a positive number';\n      }\n\n      if (passwordPolicy.validatorPattern) {\n        if (typeof passwordPolicy.validatorPattern === 'string') {\n          passwordPolicy.validatorPattern = new RegExp(passwordPolicy.validatorPattern);\n        } else if (!(passwordPolicy.validatorPattern instanceof RegExp)) {\n          throw 'passwordPolicy.validatorPattern must be a regex string or RegExp object.';\n        }\n      }\n\n      if (\n        passwordPolicy.validatorCallback &&\n        typeof passwordPolicy.validatorCallback !== 'function'\n      ) {\n        throw 'passwordPolicy.validatorCallback must be a function.';\n      }\n\n      if (\n        passwordPolicy.doNotAllowUsername &&\n        typeof passwordPolicy.doNotAllowUsername !== 'boolean'\n      ) {\n        throw 'passwordPolicy.doNotAllowUsername must be a boolean value.';\n      }\n\n      if (\n        passwordPolicy.maxPasswordHistory &&\n        (!Number.isInteger(passwordPolicy.maxPasswordHistory) ||\n          passwordPolicy.maxPasswordHistory <= 0 ||\n          passwordPolicy.maxPasswordHistory > 20)\n      ) {\n        throw 'passwordPolicy.maxPasswordHistory must be an integer ranging 0 - 20';\n      }\n\n      if (\n        passwordPolicy.resetTokenReuseIfValid &&\n        typeof passwordPolicy.resetTokenReuseIfValid !== 'boolean'\n      ) {\n        throw 'resetTokenReuseIfValid must be a boolean value';\n      }\n      if (passwordPolicy.resetTokenReuseIfValid && !passwordPolicy.resetTokenValidityDuration) {\n        throw 'You cannot use resetTokenReuseIfValid without resetTokenValidityDuration';\n      }\n    }\n  }\n\n  // if the passwordPolicy.validatorPattern is configured then setup a callback to process the pattern\n  static setupPasswordValidator(passwordPolicy) {\n    if (passwordPolicy && passwordPolicy.validatorPattern) {\n      passwordPolicy.patternValidator = value => {\n        return passwordPolicy.validatorPattern.test(value);\n      };\n    }\n  }\n\n  static validateEmailConfiguration({\n    emailAdapter,\n    appName,\n    publicServerURL,\n    emailVerifyTokenValidityDuration,\n    emailVerifyTokenReuseIfValid,\n  }) {\n    if (!emailAdapter) {\n      throw 'An emailAdapter is required for e-mail verification and password resets.';\n    }\n    if (typeof appName !== 'string') {\n      throw 'An app name is required for e-mail verification and password resets.';\n    }\n    if (typeof publicServerURL !== 'string') {\n      throw 'A public server url is required for e-mail verification and password resets.';\n    }\n    if (emailVerifyTokenValidityDuration) {\n      if (isNaN(emailVerifyTokenValidityDuration)) {\n        throw 'Email verify token validity duration must be a valid number.';\n      } else if (emailVerifyTokenValidityDuration <= 0) {\n        throw 'Email verify token validity duration must be a value greater than 0.';\n      }\n    }\n    if (emailVerifyTokenReuseIfValid && typeof emailVerifyTokenReuseIfValid !== 'boolean') {\n      throw 'emailVerifyTokenReuseIfValid must be a boolean value';\n    }\n    if (emailVerifyTokenReuseIfValid && !emailVerifyTokenValidityDuration) {\n      throw 'You cannot use emailVerifyTokenReuseIfValid without emailVerifyTokenValidityDuration';\n    }\n  }\n\n  static validateFileUploadOptions(fileUpload) {\n    try {\n      if (fileUpload == null || typeof fileUpload !== 'object' || fileUpload instanceof Array) {\n        throw 'fileUpload must be an object value.';\n      }\n    } catch (e) {\n      if (e instanceof ReferenceError) {\n        return;\n      }\n      throw e;\n    }\n    if (fileUpload.enableForAnonymousUser === undefined) {\n      fileUpload.enableForAnonymousUser = FileUploadOptions.enableForAnonymousUser.default;\n    } else if (typeof fileUpload.enableForAnonymousUser !== 'boolean') {\n      throw 'fileUpload.enableForAnonymousUser must be a boolean value.';\n    }\n    if (fileUpload.enableForPublic === undefined) {\n      fileUpload.enableForPublic = FileUploadOptions.enableForPublic.default;\n    } else if (typeof fileUpload.enableForPublic !== 'boolean') {\n      throw 'fileUpload.enableForPublic must be a boolean value.';\n    }\n    if (fileUpload.enableForAuthenticatedUser === undefined) {\n      fileUpload.enableForAuthenticatedUser = FileUploadOptions.enableForAuthenticatedUser.default;\n    } else if (typeof fileUpload.enableForAuthenticatedUser !== 'boolean') {\n      throw 'fileUpload.enableForAuthenticatedUser must be a boolean value.';\n    }\n  }\n\n  static validateMasterKeyIps(masterKeyIps) {\n    for (const ip of masterKeyIps) {\n      if (!net.isIP(ip)) {\n        throw `Invalid ip in masterKeyIps: ${ip}`;\n      }\n    }\n  }\n\n  get mount() {\n    var mount = this._mount;\n    if (this.publicServerURL) {\n      mount = this.publicServerURL;\n    }\n    return mount;\n  }\n\n  set mount(newValue) {\n    this._mount = newValue;\n  }\n\n  static validateSessionConfiguration(sessionLength, expireInactiveSessions) {\n    if (expireInactiveSessions) {\n      if (isNaN(sessionLength)) {\n        throw 'Session length must be a valid number.';\n      } else if (sessionLength <= 0) {\n        throw 'Session length must be a value greater than 0.';\n      }\n    }\n  }\n\n  static validateMaxLimit(maxLimit) {\n    if (maxLimit <= 0) {\n      throw 'Max limit must be a value greater than 0.';\n    }\n  }\n\n  static validateAllowHeaders(allowHeaders) {\n    if (![null, undefined].includes(allowHeaders)) {\n      if (Array.isArray(allowHeaders)) {\n        allowHeaders.forEach(header => {\n          if (typeof header !== 'string') {\n            throw 'Allow headers must only contain strings';\n          } else if (!header.trim().length) {\n            throw 'Allow headers must not contain empty strings';\n          }\n        });\n      } else {\n        throw 'Allow headers must be an array';\n      }\n    }\n  }\n\n  generateEmailVerifyTokenExpiresAt() {\n    if (!this.verifyUserEmails || !this.emailVerifyTokenValidityDuration) {\n      return undefined;\n    }\n    var now = new Date();\n    return new Date(now.getTime() + this.emailVerifyTokenValidityDuration * 1000);\n  }\n\n  generatePasswordResetTokenExpiresAt() {\n    if (!this.passwordPolicy || !this.passwordPolicy.resetTokenValidityDuration) {\n      return undefined;\n    }\n    const now = new Date();\n    return new Date(now.getTime() + this.passwordPolicy.resetTokenValidityDuration * 1000);\n  }\n\n  generateSessionExpiresAt() {\n    if (!this.expireInactiveSessions) {\n      return undefined;\n    }\n    var now = new Date();\n    return new Date(now.getTime() + this.sessionLength * 1000);\n  }\n\n  get invalidLinkURL() {\n    return this.customPages.invalidLink || `${this.publicServerURL}/apps/invalid_link.html`;\n  }\n\n  get invalidVerificationLinkURL() {\n    return (\n      this.customPages.invalidVerificationLink ||\n      `${this.publicServerURL}/apps/invalid_verification_link.html`\n    );\n  }\n\n  get linkSendSuccessURL() {\n    return (\n      this.customPages.linkSendSuccess || `${this.publicServerURL}/apps/link_send_success.html`\n    );\n  }\n\n  get linkSendFailURL() {\n    return this.customPages.linkSendFail || `${this.publicServerURL}/apps/link_send_fail.html`;\n  }\n\n  get verifyEmailSuccessURL() {\n    return (\n      this.customPages.verifyEmailSuccess ||\n      `${this.publicServerURL}/apps/verify_email_success.html`\n    );\n  }\n\n  get choosePasswordURL() {\n    return this.customPages.choosePassword || `${this.publicServerURL}/apps/choose_password`;\n  }\n\n  get requestResetPasswordURL() {\n    return `${this.publicServerURL}/apps/${this.applicationId}/request_password_reset`;\n  }\n\n  get passwordResetSuccessURL() {\n    return (\n      this.customPages.passwordResetSuccess ||\n      `${this.publicServerURL}/apps/password_reset_success.html`\n    );\n  }\n\n  get parseFrameURL() {\n    return this.customPages.parseFrameURL;\n  }\n\n  get verifyEmailURL() {\n    return `${this.publicServerURL}/apps/${this.applicationId}/verify_email`;\n  }\n}\n\nexport default Config;\nmodule.exports = Config;\n"],"file":"Config.js"}