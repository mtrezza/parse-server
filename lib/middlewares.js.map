{"version":3,"sources":["../src/middlewares.js"],"names":["DEFAULT_ALLOWED_HEADERS","getMountForRequest","req","mountPathLength","originalUrl","length","url","mountPath","slice","protocol","get","handleParseHeaders","res","next","mount","info","appId","sessionToken","masterKey","installationId","clientKey","javascriptKey","dotNetKey","restAPIKey","clientVersion","context","basicAuth","httpAuth","basicAuthAppId","AppCache","body","_noBody","fileViaJSON","Buffer","JSON","parse","e","invalidRequest","_RevocableSession","_ApplicationId","_JavaScriptKey","_ClientVersion","_InstallationId","_SessionToken","_MasterKey","_context","Object","_ContentType","headers","toString","clientSDK","ClientSDK","fromString","fileData","base64","from","clientIp","getClientIp","app","config","Config","ip","masterKeyIps","indexOf","isMaster","auth","Auth","isReadOnlyMaster","readOnlyMasterKey","isReadOnly","keys","oneKeyConfigured","some","key","undefined","oneKeyMatches","userFromJWT","user","Promise","resolve","then","getAuthForLegacySessionToken","getAuthForSessionToken","catch","error","Parse","Error","loggerController","UNKNOWN_ERROR","split","connection","remoteAddress","socket","authorization","header","authPrefix","match","toLowerCase","encodedAuth","substring","credentials","decodeBase64","jsKeyPrefix","matchKey","str","allowCrossDomain","allowHeaders","join","allowOrigin","method","sendStatus","allowMethodOverride","_method","originalMethod","handleParseErrors","err","log","defaultLogger","enableExpressErrorHandler","httpStatus","code","INTERNAL_SERVER_ERROR","OBJECT_NOT_FOUND","status","json","message","process","env","TESTING","stack","enforceMasterKeyAccess","end","promiseEnforceMasterKeyAccess","request","promiseEnsureIdempotency","database","adapter","MongoStorageAdapter","requestId","paths","ttl","idempotencyOptions","reqPath","path","replace","regex","RegExp","charAt","expiryDate","Date","setSeconds","getSeconds","rest","create","master","reqId","expire","_encode","DUPLICATE_VALUE","DUPLICATE_REQUEST"],"mappings":"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","sourcesContent":["import AppCache from './cache';\nimport Parse from 'parse/node';\nimport auth from './Auth';\nimport Config from './Config';\nimport ClientSDK from './ClientSDK';\nimport defaultLogger from './logger';\nimport rest from './rest';\nimport MongoStorageAdapter from './Adapters/Storage/Mongo/MongoStorageAdapter';\n\nexport const DEFAULT_ALLOWED_HEADERS =\n  'X-Parse-Master-Key, X-Parse-REST-API-Key, X-Parse-Javascript-Key, X-Parse-Application-Id, X-Parse-Client-Version, X-Parse-Session-Token, X-Requested-With, X-Parse-Revocable-Session, X-Parse-Request-Id, Content-Type, Pragma, Cache-Control';\n\nconst getMountForRequest = function (req) {\n  const mountPathLength = req.originalUrl.length - req.url.length;\n  const mountPath = req.originalUrl.slice(0, mountPathLength);\n  return req.protocol + '://' + req.get('host') + mountPath;\n};\n\n// Checks that the request is authorized for this app and checks user\n// auth too.\n// The bodyparser should run before this middleware.\n// Adds info to the request:\n// req.config - the Config for this app\n// req.auth - the Auth for this request\nexport function handleParseHeaders(req, res, next) {\n  var mount = getMountForRequest(req);\n\n  var info = {\n    appId: req.get('X-Parse-Application-Id'),\n    sessionToken: req.get('X-Parse-Session-Token'),\n    masterKey: req.get('X-Parse-Master-Key'),\n    installationId: req.get('X-Parse-Installation-Id'),\n    clientKey: req.get('X-Parse-Client-Key'),\n    javascriptKey: req.get('X-Parse-Javascript-Key'),\n    dotNetKey: req.get('X-Parse-Windows-Key'),\n    restAPIKey: req.get('X-Parse-REST-API-Key'),\n    clientVersion: req.get('X-Parse-Client-Version'),\n    context: {},\n  };\n\n  var basicAuth = httpAuth(req);\n\n  if (basicAuth) {\n    var basicAuthAppId = basicAuth.appId;\n    if (AppCache.get(basicAuthAppId)) {\n      info.appId = basicAuthAppId;\n      info.masterKey = basicAuth.masterKey || info.masterKey;\n      info.javascriptKey = basicAuth.javascriptKey || info.javascriptKey;\n    }\n  }\n\n  if (req.body) {\n    // Unity SDK sends a _noBody key which needs to be removed.\n    // Unclear at this point if action needs to be taken.\n    delete req.body._noBody;\n  }\n\n  var fileViaJSON = false;\n\n  if (!info.appId || !AppCache.get(info.appId)) {\n    // See if we can find the app id on the body.\n    if (req.body instanceof Buffer) {\n      // The only chance to find the app id is if this is a file\n      // upload that actually is a JSON body. So try to parse it.\n      // https://github.com/parse-community/parse-server/issues/6589\n      // It is also possible that the client is trying to upload a file but forgot\n      // to provide x-parse-app-id in header and parse a binary file will fail\n      try {\n        req.body = JSON.parse(req.body);\n      } catch (e) {\n        return invalidRequest(req, res);\n      }\n      fileViaJSON = true;\n    }\n\n    if (req.body) {\n      delete req.body._RevocableSession;\n    }\n\n    if (\n      req.body &&\n      req.body._ApplicationId &&\n      AppCache.get(req.body._ApplicationId) &&\n      (!info.masterKey || AppCache.get(req.body._ApplicationId).masterKey === info.masterKey)\n    ) {\n      info.appId = req.body._ApplicationId;\n      info.javascriptKey = req.body._JavaScriptKey || '';\n      delete req.body._ApplicationId;\n      delete req.body._JavaScriptKey;\n      // TODO: test that the REST API formats generated by the other\n      // SDKs are handled ok\n      if (req.body._ClientVersion) {\n        info.clientVersion = req.body._ClientVersion;\n        delete req.body._ClientVersion;\n      }\n      if (req.body._InstallationId) {\n        info.installationId = req.body._InstallationId;\n        delete req.body._InstallationId;\n      }\n      if (req.body._SessionToken) {\n        info.sessionToken = req.body._SessionToken;\n        delete req.body._SessionToken;\n      }\n      if (req.body._MasterKey) {\n        info.masterKey = req.body._MasterKey;\n        delete req.body._MasterKey;\n      }\n      if (req.body._context && req.body._context instanceof Object) {\n        info.context = req.body._context;\n        delete req.body._context;\n      }\n      if (req.body._ContentType) {\n        req.headers['content-type'] = req.body._ContentType;\n        delete req.body._ContentType;\n      }\n    } else {\n      return invalidRequest(req, res);\n    }\n  }\n\n  if (info.sessionToken && typeof info.sessionToken !== 'string') {\n    info.sessionToken = info.sessionToken.toString();\n  }\n\n  if (info.clientVersion) {\n    info.clientSDK = ClientSDK.fromString(info.clientVersion);\n  }\n\n  if (fileViaJSON) {\n    req.fileData = req.body.fileData;\n    // We need to repopulate req.body with a buffer\n    var base64 = req.body.base64;\n    req.body = Buffer.from(base64, 'base64');\n  }\n\n  const clientIp = getClientIp(req);\n\n  info.app = AppCache.get(info.appId);\n  req.config = Config.get(info.appId, mount);\n  req.config.headers = req.headers || {};\n  req.config.ip = clientIp;\n  req.info = info;\n\n  if (\n    info.masterKey &&\n    req.config.masterKeyIps &&\n    req.config.masterKeyIps.length !== 0 &&\n    req.config.masterKeyIps.indexOf(clientIp) === -1\n  ) {\n    return invalidRequest(req, res);\n  }\n\n  var isMaster = info.masterKey === req.config.masterKey;\n\n  if (isMaster) {\n    req.auth = new auth.Auth({\n      config: req.config,\n      installationId: info.installationId,\n      isMaster: true,\n    });\n    next();\n    return;\n  }\n\n  var isReadOnlyMaster = info.masterKey === req.config.readOnlyMasterKey;\n  if (\n    typeof req.config.readOnlyMasterKey != 'undefined' &&\n    req.config.readOnlyMasterKey &&\n    isReadOnlyMaster\n  ) {\n    req.auth = new auth.Auth({\n      config: req.config,\n      installationId: info.installationId,\n      isMaster: true,\n      isReadOnly: true,\n    });\n    next();\n    return;\n  }\n\n  // Client keys are not required in parse-server, but if any have been configured in the server, validate them\n  //  to preserve original behavior.\n  const keys = ['clientKey', 'javascriptKey', 'dotNetKey', 'restAPIKey'];\n  const oneKeyConfigured = keys.some(function (key) {\n    return req.config[key] !== undefined;\n  });\n  const oneKeyMatches = keys.some(function (key) {\n    return req.config[key] !== undefined && info[key] === req.config[key];\n  });\n\n  if (oneKeyConfigured && !oneKeyMatches) {\n    return invalidRequest(req, res);\n  }\n\n  if (req.url == '/login') {\n    delete info.sessionToken;\n  }\n\n  if (req.userFromJWT) {\n    req.auth = new auth.Auth({\n      config: req.config,\n      installationId: info.installationId,\n      isMaster: false,\n      user: req.userFromJWT,\n    });\n    next();\n    return;\n  }\n\n  if (!info.sessionToken) {\n    req.auth = new auth.Auth({\n      config: req.config,\n      installationId: info.installationId,\n      isMaster: false,\n    });\n    next();\n    return;\n  }\n\n  return Promise.resolve()\n    .then(() => {\n      // handle the upgradeToRevocableSession path on it's own\n      if (\n        info.sessionToken &&\n        req.url === '/upgradeToRevocableSession' &&\n        info.sessionToken.indexOf('r:') != 0\n      ) {\n        return auth.getAuthForLegacySessionToken({\n          config: req.config,\n          installationId: info.installationId,\n          sessionToken: info.sessionToken,\n        });\n      } else {\n        return auth.getAuthForSessionToken({\n          config: req.config,\n          installationId: info.installationId,\n          sessionToken: info.sessionToken,\n        });\n      }\n    })\n    .then(auth => {\n      if (auth) {\n        req.auth = auth;\n        next();\n      }\n    })\n    .catch(error => {\n      if (error instanceof Parse.Error) {\n        next(error);\n        return;\n      } else {\n        // TODO: Determine the correct error scenario.\n        req.config.loggerController.error('error getting auth for sessionToken', error);\n        throw new Parse.Error(Parse.Error.UNKNOWN_ERROR, error);\n      }\n    });\n}\n\nfunction getClientIp(req) {\n  if (req.headers['x-forwarded-for']) {\n    // try to get from x-forwared-for if it set (behind reverse proxy)\n    return req.headers['x-forwarded-for'].split(',')[0];\n  } else if (req.connection && req.connection.remoteAddress) {\n    // no proxy, try getting from connection.remoteAddress\n    return req.connection.remoteAddress;\n  } else if (req.socket) {\n    // try to get it from req.socket\n    return req.socket.remoteAddress;\n  } else if (req.connection && req.connection.socket) {\n    // try to get it form the connection.socket\n    return req.connection.socket.remoteAddress;\n  } else {\n    // if non above, fallback.\n    return req.ip;\n  }\n}\n\nfunction httpAuth(req) {\n  if (!(req.req || req).headers.authorization) return;\n\n  var header = (req.req || req).headers.authorization;\n  var appId, masterKey, javascriptKey;\n\n  // parse header\n  var authPrefix = 'basic ';\n\n  var match = header.toLowerCase().indexOf(authPrefix);\n\n  if (match == 0) {\n    var encodedAuth = header.substring(authPrefix.length, header.length);\n    var credentials = decodeBase64(encodedAuth).split(':');\n\n    if (credentials.length == 2) {\n      appId = credentials[0];\n      var key = credentials[1];\n\n      var jsKeyPrefix = 'javascript-key=';\n\n      var matchKey = key.indexOf(jsKeyPrefix);\n      if (matchKey == 0) {\n        javascriptKey = key.substring(jsKeyPrefix.length, key.length);\n      } else {\n        masterKey = key;\n      }\n    }\n  }\n\n  return { appId: appId, masterKey: masterKey, javascriptKey: javascriptKey };\n}\n\nfunction decodeBase64(str) {\n  return Buffer.from(str, 'base64').toString();\n}\n\nexport function allowCrossDomain(appId) {\n  return (req, res, next) => {\n    const config = Config.get(appId, getMountForRequest(req));\n    let allowHeaders = DEFAULT_ALLOWED_HEADERS;\n    if (config && config.allowHeaders) {\n      allowHeaders += `, ${config.allowHeaders.join(', ')}`;\n    }\n    const allowOrigin = (config && config.allowOrigin) || '*';\n    res.header('Access-Control-Allow-Origin', allowOrigin);\n    res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');\n    res.header('Access-Control-Allow-Headers', allowHeaders);\n    res.header('Access-Control-Expose-Headers', 'X-Parse-Job-Status-Id, X-Parse-Push-Status-Id');\n    // intercept OPTIONS method\n    if ('OPTIONS' == req.method) {\n      res.sendStatus(200);\n    } else {\n      next();\n    }\n  };\n}\n\nexport function allowMethodOverride(req, res, next) {\n  if (req.method === 'POST' && req.body._method) {\n    req.originalMethod = req.method;\n    req.method = req.body._method;\n    delete req.body._method;\n  }\n  next();\n}\n\nexport function handleParseErrors(err, req, res, next) {\n  const log = (req.config && req.config.loggerController) || defaultLogger;\n  if (err instanceof Parse.Error) {\n    if (req.config && req.config.enableExpressErrorHandler) {\n      return next(err);\n    }\n    let httpStatus;\n    // TODO: fill out this mapping\n    switch (err.code) {\n      case Parse.Error.INTERNAL_SERVER_ERROR:\n        httpStatus = 500;\n        break;\n      case Parse.Error.OBJECT_NOT_FOUND:\n        httpStatus = 404;\n        break;\n      default:\n        httpStatus = 400;\n    }\n    res.status(httpStatus);\n    res.json({ code: err.code, error: err.message });\n    log.error('Parse error: ', err);\n  } else if (err.status && err.message) {\n    res.status(err.status);\n    res.json({ error: err.message });\n    if (!(process && process.env.TESTING)) {\n      next(err);\n    }\n  } else {\n    log.error('Uncaught internal server error.', err, err.stack);\n    res.status(500);\n    res.json({\n      code: Parse.Error.INTERNAL_SERVER_ERROR,\n      message: 'Internal server error.',\n    });\n    if (!(process && process.env.TESTING)) {\n      next(err);\n    }\n  }\n}\n\nexport function enforceMasterKeyAccess(req, res, next) {\n  if (!req.auth.isMaster) {\n    res.status(403);\n    res.end('{\"error\":\"unauthorized: master key is required\"}');\n    return;\n  }\n  next();\n}\n\nexport function promiseEnforceMasterKeyAccess(request) {\n  if (!request.auth.isMaster) {\n    const error = new Error();\n    error.status = 403;\n    error.message = 'unauthorized: master key is required';\n    throw error;\n  }\n  return Promise.resolve();\n}\n\n/**\n * Deduplicates a request to ensure idempotency. Duplicates are determined by the request ID\n * in the request header. If a request has no request ID, it is executed anyway.\n * @param {*} req The request to evaluate.\n * @returns Promise<{}>\n */\nexport function promiseEnsureIdempotency(req) {\n  // Enable feature only for MongoDB\n  if (!(req.config.database.adapter instanceof MongoStorageAdapter)) {\n    return Promise.resolve();\n  }\n  // Get parameters\n  const config = req.config;\n  const requestId = ((req || {}).headers || {})['x-parse-request-id'];\n  const { paths, ttl } = config.idempotencyOptions;\n  if (!requestId || !config.idempotencyOptions) {\n    return Promise.resolve();\n  }\n  // Request path may contain trailing slashes, depending on the original request, so remove\n  // leading and trailing slashes to make it easier to specify paths in the configuration\n  const reqPath = req.path.replace(/^\\/|\\/$/, '');\n  // Determine whether idempotency is enabled for current request path\n  let match = false;\n  for (const path of paths) {\n    // Assume one wants a path to always match from the beginning to prevent any mistakes\n    const regex = new RegExp(path.charAt(0) === '^' ? path : '^' + path);\n    if (reqPath.match(regex)) {\n      match = true;\n      break;\n    }\n  }\n  if (!match) {\n    return Promise.resolve();\n  }\n  // Try to store request\n  const expiryDate = new Date(new Date().setSeconds(new Date().getSeconds() + ttl));\n  return rest\n    .create(config, auth.master(config), '_Idempotency', {\n      reqId: requestId,\n      expire: Parse._encode(expiryDate),\n    })\n    .catch(e => {\n      if (e.code == Parse.Error.DUPLICATE_VALUE) {\n        throw new Parse.Error(Parse.Error.DUPLICATE_REQUEST, 'Duplicate request');\n      }\n      throw e;\n    });\n}\n\nfunction invalidRequest(req, res) {\n  res.status(403);\n  res.end('{\"error\":\"unauthorized\"}');\n}\n"],"file":"middlewares.js"}