{"version":3,"sources":["../../../src/Adapters/Auth/linkedin.js"],"names":["Parse","require","httpsRequest","validateAuthData","authData","request","access_token","is_mobile_sdk","then","data","id","Error","OBJECT_NOT_FOUND","validateAppId","Promise","resolve","path","headers","Authorization","get","host","module","exports"],"mappings":";;AAAA;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBD,KAAlC;;AACA,MAAME,YAAY,GAAGD,OAAO,CAAC,gBAAD,CAA5B,C,CAEA;;;AACA,SAASE,gBAAT,CAA0BC,QAA1B,EAAoC;AAClC,SAAOC,OAAO,CAAC,IAAD,EAAOD,QAAQ,CAACE,YAAhB,EAA8BF,QAAQ,CAACG,aAAvC,CAAP,CAA6DC,IAA7D,CAAkEC,IAAI,IAAI;AAC/E,QAAIA,IAAI,IAAIA,IAAI,CAACC,EAAL,IAAWN,QAAQ,CAACM,EAAhC,EAAoC;AAClC;AACD;;AACD,UAAM,IAAIV,KAAK,CAACW,KAAV,CAAgBX,KAAK,CAACW,KAAN,CAAYC,gBAA5B,EAA8C,yCAA9C,CAAN;AACD,GALM,CAAP;AAMD,C,CAED;;;AACA,SAASC,aAAT,GAAyB;AACvB,SAAOC,OAAO,CAACC,OAAR,EAAP;AACD,C,CAED;;;AACA,SAASV,OAAT,CAAiBW,IAAjB,EAAuBV,YAAvB,EAAqCC,aAArC,EAAoD;AAClD,MAAIU,OAAO,GAAG;AACZC,IAAAA,aAAa,EAAE,YAAYZ,YADf;AAEZ,mBAAe;AAFH,GAAd;;AAKA,MAAIC,aAAJ,EAAmB;AACjBU,IAAAA,OAAO,CAAC,UAAD,CAAP,GAAsB,MAAtB;AACD;;AACD,SAAOf,YAAY,CAACiB,GAAb,CAAiB;AACtBC,IAAAA,IAAI,EAAE,kBADgB;AAEtBJ,IAAAA,IAAI,EAAE,SAASA,IAFO;AAGtBC,IAAAA,OAAO,EAAEA;AAHa,GAAjB,CAAP;AAKD;;AAEDI,MAAM,CAACC,OAAP,GAAiB;AACfT,EAAAA,aAAa,EAAEA,aADA;AAEfV,EAAAA,gBAAgB,EAAEA;AAFH,CAAjB","sourcesContent":["// Helper functions for accessing the linkedin API.\nvar Parse = require('parse/node').Parse;\nconst httpsRequest = require('./httpsRequest');\n\n// Returns a promise that fulfills iff this user id is valid.\nfunction validateAuthData(authData) {\n  return request('me', authData.access_token, authData.is_mobile_sdk).then(data => {\n    if (data && data.id == authData.id) {\n      return;\n    }\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Linkedin auth is invalid for this user.');\n  });\n}\n\n// Returns a promise that fulfills iff this app id is valid.\nfunction validateAppId() {\n  return Promise.resolve();\n}\n\n// A promisey wrapper for api requests\nfunction request(path, access_token, is_mobile_sdk) {\n  var headers = {\n    Authorization: 'Bearer ' + access_token,\n    'x-li-format': 'json',\n  };\n\n  if (is_mobile_sdk) {\n    headers['x-li-src'] = 'msdk';\n  }\n  return httpsRequest.get({\n    host: 'api.linkedin.com',\n    path: '/v2/' + path,\n    headers: headers,\n  });\n}\n\nmodule.exports = {\n  validateAppId: validateAppId,\n  validateAuthData: validateAuthData,\n};\n"],"file":"linkedin.js"}