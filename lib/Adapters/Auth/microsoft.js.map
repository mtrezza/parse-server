{"version":3,"sources":["../../../src/Adapters/Auth/microsoft.js"],"names":["Parse","require","httpsRequest","validateAuthData","authData","request","access_token","then","response","id","Error","OBJECT_NOT_FOUND","validateAppId","Promise","resolve","path","get","host","headers","Authorization","module","exports"],"mappings":";;AAAA;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBD,KAAlC;;AACA,MAAME,YAAY,GAAGD,OAAO,CAAC,gBAAD,CAA5B,C,CAEA;;;AACA,SAASE,gBAAT,CAA0BC,QAA1B,EAAoC;AAClC,SAAOC,OAAO,CAAC,IAAD,EAAOD,QAAQ,CAACE,YAAhB,CAAP,CAAqCC,IAArC,CAA0CC,QAAQ,IAAI;AAC3D,QAAIA,QAAQ,IAAIA,QAAQ,CAACC,EAArB,IAA2BD,QAAQ,CAACC,EAAT,IAAeL,QAAQ,CAACK,EAAvD,EAA2D;AACzD;AACD;;AACD,UAAM,IAAIT,KAAK,CAACU,KAAV,CACJV,KAAK,CAACU,KAAN,CAAYC,gBADR,EAEJ,gDAFI,CAAN;AAID,GARM,CAAP;AASD,C,CAED;;;AACA,SAASC,aAAT,GAAyB;AACvB,SAAOC,OAAO,CAACC,OAAR,EAAP;AACD,C,CAED;;;AACA,SAAST,OAAT,CAAiBU,IAAjB,EAAuBT,YAAvB,EAAqC;AACnC,SAAOJ,YAAY,CAACc,GAAb,CAAiB;AACtBC,IAAAA,IAAI,EAAE,qBADgB;AAEtBF,IAAAA,IAAI,EAAE,WAAWA,IAFK;AAGtBG,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYb;AADpB;AAHa,GAAjB,CAAP;AAOD;;AAEDc,MAAM,CAACC,OAAP,GAAiB;AACfT,EAAAA,aAAa,EAAEA,aADA;AAEfT,EAAAA,gBAAgB,EAAEA;AAFH,CAAjB","sourcesContent":["// Helper functions for accessing the microsoft graph API.\nvar Parse = require('parse/node').Parse;\nconst httpsRequest = require('./httpsRequest');\n\n// Returns a promise that fulfills if this user mail is valid.\nfunction validateAuthData(authData) {\n  return request('me', authData.access_token).then(response => {\n    if (response && response.id && response.id == authData.id) {\n      return;\n    }\n    throw new Parse.Error(\n      Parse.Error.OBJECT_NOT_FOUND,\n      'Microsoft Graph auth is invalid for this user.'\n    );\n  });\n}\n\n// Returns a promise that fulfills if this app id is valid.\nfunction validateAppId() {\n  return Promise.resolve();\n}\n\n// A promisey wrapper for api requests\nfunction request(path, access_token) {\n  return httpsRequest.get({\n    host: 'graph.microsoft.com',\n    path: '/v1.0/' + path,\n    headers: {\n      Authorization: 'Bearer ' + access_token,\n    },\n  });\n}\n\nmodule.exports = {\n  validateAppId: validateAppId,\n  validateAuthData: validateAuthData,\n};\n"],"file":"microsoft.js"}