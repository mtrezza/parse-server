{"version":3,"sources":["../../../src/Adapters/Auth/httpsRequest.js"],"names":["https","require","makeCallback","resolve","reject","noJSON","res","data","on","chunk","JSON","parse","e","get","options","Promise","request","postData","req","write","end","module","exports"],"mappings":";;AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,SAASC,YAAT,CAAsBC,OAAtB,EAA+BC,MAA/B,EAAuCC,MAAvC,EAA+C;AAC7C,SAAO,UAAUC,GAAV,EAAe;AACpB,QAAIC,IAAI,GAAG,EAAX;AACAD,IAAAA,GAAG,CAACE,EAAJ,CAAO,MAAP,EAAeC,KAAK,IAAI;AACtBF,MAAAA,IAAI,IAAIE,KAAR;AACD,KAFD;AAGAH,IAAAA,GAAG,CAACE,EAAJ,CAAO,KAAP,EAAc,MAAM;AAClB,UAAIH,MAAJ,EAAY;AACV,eAAOF,OAAO,CAACI,IAAD,CAAd;AACD;;AACD,UAAI;AACFA,QAAAA,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP;AACD,OAFD,CAEE,OAAOK,CAAP,EAAU;AACV,eAAOR,MAAM,CAACQ,CAAD,CAAb;AACD;;AACDT,MAAAA,OAAO,CAACI,IAAD,CAAP;AACD,KAVD;AAWAD,IAAAA,GAAG,CAACE,EAAJ,CAAO,OAAP,EAAgBJ,MAAhB;AACD,GAjBD;AAkBD;;AAED,SAASS,GAAT,CAAaC,OAAb,EAAsBT,MAAM,GAAG,KAA/B,EAAsC;AACpC,SAAO,IAAIU,OAAJ,CAAY,CAACZ,OAAD,EAAUC,MAAV,KAAqB;AACtCJ,IAAAA,KAAK,CAACa,GAAN,CAAUC,OAAV,EAAmBZ,YAAY,CAACC,OAAD,EAAUC,MAAV,EAAkBC,MAAlB,CAA/B,EAA0DG,EAA1D,CAA6D,OAA7D,EAAsEJ,MAAtE;AACD,GAFM,CAAP;AAGD;;AAED,SAASY,OAAT,CAAiBF,OAAjB,EAA0BG,QAA1B,EAAoC;AAClC,SAAO,IAAIF,OAAJ,CAAY,CAACZ,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAMc,GAAG,GAAGlB,KAAK,CAACgB,OAAN,CAAcF,OAAd,EAAuBZ,YAAY,CAACC,OAAD,EAAUC,MAAV,CAAnC,CAAZ;AACAc,IAAAA,GAAG,CAACV,EAAJ,CAAO,OAAP,EAAgBJ,MAAhB;AACAc,IAAAA,GAAG,CAACC,KAAJ,CAAUF,QAAV;AACAC,IAAAA,GAAG,CAACE,GAAJ;AACD,GALM,CAAP;AAMD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AAAET,EAAAA,GAAF;AAAOG,EAAAA;AAAP,CAAjB","sourcesContent":["const https = require('https');\n\nfunction makeCallback(resolve, reject, noJSON) {\n  return function (res) {\n    let data = '';\n    res.on('data', chunk => {\n      data += chunk;\n    });\n    res.on('end', () => {\n      if (noJSON) {\n        return resolve(data);\n      }\n      try {\n        data = JSON.parse(data);\n      } catch (e) {\n        return reject(e);\n      }\n      resolve(data);\n    });\n    res.on('error', reject);\n  };\n}\n\nfunction get(options, noJSON = false) {\n  return new Promise((resolve, reject) => {\n    https.get(options, makeCallback(resolve, reject, noJSON)).on('error', reject);\n  });\n}\n\nfunction request(options, postData) {\n  return new Promise((resolve, reject) => {\n    const req = https.request(options, makeCallback(resolve, reject));\n    req.on('error', reject);\n    req.write(postData);\n    req.end();\n  });\n}\n\nmodule.exports = { get, request };\n"],"file":"httpsRequest.js"}