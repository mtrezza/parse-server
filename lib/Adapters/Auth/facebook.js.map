{"version":3,"sources":["../../../src/Adapters/Auth/facebook.js"],"names":["httpsRequest","require","Parse","crypto","getAppSecretPath","authData","options","appSecret","appsecret_proof","createHmac","update","access_token","digest","validateAuthData","graphRequest","then","data","id","process","env","TESTING","Error","OBJECT_NOT_FOUND","validateAppId","appIds","Promise","resolve","length","indexOf","path","get","module","exports"],"mappings":";;AAAA;AACA,MAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA5B;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBC,KAAlC;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AAEA,SAASG,gBAAT,CAA0BC,QAA1B,EAAoCC,OAAO,GAAG,EAA9C,EAAkD;AAChD,QAAMC,SAAS,GAAGD,OAAO,CAACC,SAA1B;;AACA,MAAI,CAACA,SAAL,EAAgB;AACd,WAAO,EAAP;AACD;;AACD,QAAMC,eAAe,GAAGL,MAAM,CAC3BM,UADqB,CACV,QADU,EACAF,SADA,EAErBG,MAFqB,CAEdL,QAAQ,CAACM,YAFK,EAGrBC,MAHqB,CAGd,KAHc,CAAxB;AAKA,SAAQ,oBAAmBJ,eAAgB,EAA3C;AACD,C,CAED;;;AACA,SAASK,gBAAT,CAA0BR,QAA1B,EAAoCC,OAApC,EAA6C;AAC3C,SAAOQ,YAAY,CACjB,+BAA+BT,QAAQ,CAACM,YAAxC,GAAuDP,gBAAgB,CAACC,QAAD,EAAWC,OAAX,CADtD,CAAZ,CAELS,IAFK,CAEAC,IAAI,IAAI;AACb,QAAKA,IAAI,IAAIA,IAAI,CAACC,EAAL,IAAWZ,QAAQ,CAACY,EAA7B,IAAqCC,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuBf,QAAQ,CAACY,EAAT,KAAgB,MAAhF,EAAyF;AACvF;AACD;;AACD,UAAM,IAAIf,KAAK,CAACmB,KAAV,CAAgBnB,KAAK,CAACmB,KAAN,CAAYC,gBAA5B,EAA8C,yCAA9C,CAAN;AACD,GAPM,CAAP;AAQD,C,CAED;;;AACA,SAASC,aAAT,CAAuBC,MAAvB,EAA+BnB,QAA/B,EAAyCC,OAAzC,EAAkD;AAChD,MAAIK,YAAY,GAAGN,QAAQ,CAACM,YAA5B;;AACA,MAAIO,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuBT,YAAY,KAAK,MAA5C,EAAoD;AAClD,WAAOc,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,MAAI,CAACF,MAAM,CAACG,MAAZ,EAAoB;AAClB,UAAM,IAAIzB,KAAK,CAACmB,KAAV,CAAgBnB,KAAK,CAACmB,KAAN,CAAYC,gBAA5B,EAA8C,kCAA9C,CAAN;AACD;;AACD,SAAOR,YAAY,CACjB,sBAAsBH,YAAtB,GAAqCP,gBAAgB,CAACC,QAAD,EAAWC,OAAX,CADpC,CAAZ,CAELS,IAFK,CAEAC,IAAI,IAAI;AACb,QAAIA,IAAI,IAAIQ,MAAM,CAACI,OAAP,CAAeZ,IAAI,CAACC,EAApB,KAA2B,CAAC,CAAxC,EAA2C;AACzC;AACD;;AACD,UAAM,IAAIf,KAAK,CAACmB,KAAV,CAAgBnB,KAAK,CAACmB,KAAN,CAAYC,gBAA5B,EAA8C,yCAA9C,CAAN;AACD,GAPM,CAAP;AAQD,C,CAED;;;AACA,SAASR,YAAT,CAAsBe,IAAtB,EAA4B;AAC1B,SAAO7B,YAAY,CAAC8B,GAAb,CAAiB,gCAAgCD,IAAjD,CAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AACfT,EAAAA,aAAa,EAAEA,aADA;AAEfV,EAAAA,gBAAgB,EAAEA;AAFH,CAAjB","sourcesContent":["// Helper functions for accessing the Facebook Graph API.\nconst httpsRequest = require('./httpsRequest');\nvar Parse = require('parse/node').Parse;\nconst crypto = require('crypto');\n\nfunction getAppSecretPath(authData, options = {}) {\n  const appSecret = options.appSecret;\n  if (!appSecret) {\n    return '';\n  }\n  const appsecret_proof = crypto\n    .createHmac('sha256', appSecret)\n    .update(authData.access_token)\n    .digest('hex');\n\n  return `&appsecret_proof=${appsecret_proof}`;\n}\n\n// Returns a promise that fulfills iff this user id is valid.\nfunction validateAuthData(authData, options) {\n  return graphRequest(\n    'me?fields=id&access_token=' + authData.access_token + getAppSecretPath(authData, options)\n  ).then(data => {\n    if ((data && data.id == authData.id) || (process.env.TESTING && authData.id === 'test')) {\n      return;\n    }\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Facebook auth is invalid for this user.');\n  });\n}\n\n// Returns a promise that fulfills iff this app id is valid.\nfunction validateAppId(appIds, authData, options) {\n  var access_token = authData.access_token;\n  if (process.env.TESTING && access_token === 'test') {\n    return Promise.resolve();\n  }\n  if (!appIds.length) {\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Facebook auth is not configured.');\n  }\n  return graphRequest(\n    'app?access_token=' + access_token + getAppSecretPath(authData, options)\n  ).then(data => {\n    if (data && appIds.indexOf(data.id) != -1) {\n      return;\n    }\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Facebook auth is invalid for this user.');\n  });\n}\n\n// A promisey wrapper for FB graph requests.\nfunction graphRequest(path) {\n  return httpsRequest.get('https://graph.facebook.com/' + path);\n}\n\nmodule.exports = {\n  validateAppId: validateAppId,\n  validateAuthData: validateAuthData,\n};\n"],"file":"facebook.js"}