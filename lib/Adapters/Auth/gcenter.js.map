{"version":3,"sources":["../../../src/Adapters/Auth/gcenter.js"],"names":["Parse","require","crypto","https","url","cache","verifyPublicKeyUrl","publicKeyUrl","parsedUrl","parse","protocol","hostnameParts","hostname","split","length","domainParts","slice","domain","join","convertX509CertToPEM","X509Cert","pemPreFix","pemPostFix","base64","certBody","match","RegExp","getAppleCertificate","Error","OBJECT_NOT_FOUND","Promise","resolve","reject","get","res","data","on","chunk","toString","cert","headers","expire","setTimeout","parseInt","convertTimestampToBigEndian","timestamp","buffer","Buffer","alloc","high","low","writeUInt32BE","verifySignature","publicKey","authData","verifier","createVerify","update","playerId","bundleId","salt","verify","signature","validateAuthData","id","validateAppId","module","exports"],"mappings":"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","sourcesContent":["/* Apple Game Center Auth\nhttps://developer.apple.com/documentation/gamekit/gklocalplayer/1515407-generateidentityverificationsign#discussion\n\nconst authData = {\n  publicKeyUrl: 'https://valid.apple.com/public/timeout.cer',\n  timestamp: 1460981421303,\n  signature: 'PoDwf39DCN464B49jJCU0d9Y0J',\n  salt: 'saltST==',\n  bundleId: 'com.valid.app'\n  id: 'playerId',\n};\n*/\n\nconst { Parse } = require('parse/node');\nconst crypto = require('crypto');\nconst https = require('https');\nconst url = require('url');\n\nconst cache = {}; // (publicKey -> cert) cache\n\nfunction verifyPublicKeyUrl(publicKeyUrl) {\n  const parsedUrl = url.parse(publicKeyUrl);\n  if (parsedUrl.protocol !== 'https:') {\n    return false;\n  }\n  const hostnameParts = parsedUrl.hostname.split('.');\n  const length = hostnameParts.length;\n  const domainParts = hostnameParts.slice(length - 2, length);\n  const domain = domainParts.join('.');\n  return domain === 'apple.com';\n}\n\nfunction convertX509CertToPEM(X509Cert) {\n  const pemPreFix = '-----BEGIN CERTIFICATE-----\\n';\n  const pemPostFix = '-----END CERTIFICATE-----';\n\n  const base64 = X509Cert;\n  const certBody = base64.match(new RegExp('.{0,64}', 'g')).join('\\n');\n\n  return pemPreFix + certBody + pemPostFix;\n}\n\nfunction getAppleCertificate(publicKeyUrl) {\n  if (!verifyPublicKeyUrl(publicKeyUrl)) {\n    throw new Parse.Error(\n      Parse.Error.OBJECT_NOT_FOUND,\n      `Apple Game Center - invalid publicKeyUrl: ${publicKeyUrl}`\n    );\n  }\n  if (cache[publicKeyUrl]) {\n    return cache[publicKeyUrl];\n  }\n  return new Promise((resolve, reject) => {\n    https\n      .get(publicKeyUrl, res => {\n        let data = '';\n        res.on('data', chunk => {\n          data += chunk.toString('base64');\n        });\n        res.on('end', () => {\n          const cert = convertX509CertToPEM(data);\n          if (res.headers['cache-control']) {\n            var expire = res.headers['cache-control'].match(/max-age=([0-9]+)/);\n            if (expire) {\n              cache[publicKeyUrl] = cert;\n              // we'll expire the cache entry later, as per max-age\n              setTimeout(() => {\n                delete cache[publicKeyUrl];\n              }, parseInt(expire[1], 10) * 1000);\n            }\n          }\n          resolve(cert);\n        });\n      })\n      .on('error', reject);\n  });\n}\n\nfunction convertTimestampToBigEndian(timestamp) {\n  const buffer = Buffer.alloc(8);\n\n  const high = ~~(timestamp / 0xffffffff);\n  const low = timestamp % (0xffffffff + 0x1);\n\n  buffer.writeUInt32BE(parseInt(high, 10), 0);\n  buffer.writeUInt32BE(parseInt(low, 10), 4);\n\n  return buffer;\n}\n\nfunction verifySignature(publicKey, authData) {\n  const verifier = crypto.createVerify('sha256');\n  verifier.update(authData.playerId, 'utf8');\n  verifier.update(authData.bundleId, 'utf8');\n  verifier.update(convertTimestampToBigEndian(authData.timestamp));\n  verifier.update(authData.salt, 'base64');\n\n  if (!verifier.verify(publicKey, authData.signature, 'base64')) {\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Apple Game Center - invalid signature');\n  }\n}\n\n// Returns a promise that fulfills if this user id is valid.\nasync function validateAuthData(authData) {\n  if (!authData.id) {\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Apple Game Center - authData id missing');\n  }\n  authData.playerId = authData.id;\n  const publicKey = await getAppleCertificate(authData.publicKeyUrl);\n  return verifySignature(publicKey, authData);\n}\n\n// Returns a promise that fulfills if this app id is valid.\nfunction validateAppId() {\n  return Promise.resolve();\n}\n\nmodule.exports = {\n  validateAppId,\n  validateAuthData,\n};\n"],"file":"gcenter.js"}