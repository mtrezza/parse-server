{"version":3,"sources":["../../../src/Adapters/Auth/OAuth1Client.js"],"names":["https","require","crypto","Parse","OAuth","options","Error","INTERNAL_SERVER_ERROR","consumer_key","consumer_secret","auth_token","auth_token_secret","host","oauth_params","prototype","send","method","path","params","body","request","buildRequest","Promise","resolve","reject","httpRequest","res","data","on","chunk","JSON","parse","write","end","indexOf","Object","keys","length","buildParameterString","toUpperCase","oauth_consumer_key","signRequest","get","post","encode","str","toString","encodeURIComponent","replace","signatureMethod","version","nonce","text","possible","i","charAt","Math","floor","random","obj","sort","map","key","join","buildSignatureString","url","parameters","signature","createHmac","update","digest","oauth_parameters","oauth_nonce","oauth_timestamp","Date","getTime","oauth_signature_method","oauth_version","signatureParams","parametersToMerge","k","parameterString","signatureString","signatureKey","oauth_signature","headers","authHeader","value","Authorization","module","exports"],"mappings":"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","sourcesContent":["var https = require('https'),\n  crypto = require('crypto');\nvar Parse = require('parse/node').Parse;\n\nvar OAuth = function (options) {\n  if (!options) {\n    throw new Parse.Error(Parse.Error.INTERNAL_SERVER_ERROR, 'No options passed to OAuth');\n  }\n  this.consumer_key = options.consumer_key;\n  this.consumer_secret = options.consumer_secret;\n  this.auth_token = options.auth_token;\n  this.auth_token_secret = options.auth_token_secret;\n  this.host = options.host;\n  this.oauth_params = options.oauth_params || {};\n};\n\nOAuth.prototype.send = function (method, path, params, body) {\n  var request = this.buildRequest(method, path, params, body);\n  // Encode the body properly, the current Parse Implementation don't do it properly\n  return new Promise(function (resolve, reject) {\n    var httpRequest = https\n      .request(request, function (res) {\n        var data = '';\n        res.on('data', function (chunk) {\n          data += chunk;\n        });\n        res.on('end', function () {\n          data = JSON.parse(data);\n          resolve(data);\n        });\n      })\n      .on('error', function () {\n        reject('Failed to make an OAuth request');\n      });\n    if (request.body) {\n      httpRequest.write(request.body);\n    }\n    httpRequest.end();\n  });\n};\n\nOAuth.prototype.buildRequest = function (method, path, params, body) {\n  if (path.indexOf('/') != 0) {\n    path = '/' + path;\n  }\n  if (params && Object.keys(params).length > 0) {\n    path += '?' + OAuth.buildParameterString(params);\n  }\n\n  var request = {\n    host: this.host,\n    path: path,\n    method: method.toUpperCase(),\n  };\n\n  var oauth_params = this.oauth_params || {};\n  oauth_params.oauth_consumer_key = this.consumer_key;\n  if (this.auth_token) {\n    oauth_params['oauth_token'] = this.auth_token;\n  }\n\n  request = OAuth.signRequest(request, oauth_params, this.consumer_secret, this.auth_token_secret);\n\n  if (body && Object.keys(body).length > 0) {\n    request.body = OAuth.buildParameterString(body);\n  }\n  return request;\n};\n\nOAuth.prototype.get = function (path, params) {\n  return this.send('GET', path, params);\n};\n\nOAuth.prototype.post = function (path, params, body) {\n  return this.send('POST', path, params, body);\n};\n\n/*\n\tProper string %escape encoding\n*/\nOAuth.encode = function (str) {\n  //       discuss at: http://phpjs.org/functions/rawurlencode/\n  //      original by: Brett Zamir (http://brett-zamir.me)\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Michael Grier\n  //         input by: Ratheous\n  //      bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Joris\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //             note: This reflects PHP 5.3/6.0+ behavior\n  //             note: Please be aware that this function expects to encode into UTF-8 encoded strings, as found on\n  //             note: pages served as UTF-8\n  //        example 1: rawurlencode('Kevin van Zonneveld!');\n  //        returns 1: 'Kevin%20van%20Zonneveld%21'\n  //        example 2: rawurlencode('http://kevin.vanzonneveld.net/');\n  //        returns 2: 'http%3A%2F%2Fkevin.vanzonneveld.net%2F'\n  //        example 3: rawurlencode('http://www.google.nl/search?q=php.js&ie=utf-8&oe=utf-8&aq=t&rls=com.ubuntu:en-US:unofficial&client=firefox-a');\n  //        returns 3: 'http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3Dphp.js%26ie%3Dutf-8%26oe%3Dutf-8%26aq%3Dt%26rls%3Dcom.ubuntu%3Aen-US%3Aunofficial%26client%3Dfirefox-a'\n\n  str = (str + '').toString();\n\n  // Tilde should be allowed unescaped in future versions of PHP (as reflected below), but if you want to reflect current\n  // PHP behavior, you would need to add \".replace(/~/g, '%7E');\" to the following.\n  return encodeURIComponent(str)\n    .replace(/!/g, '%21')\n    .replace(/'/g, '%27')\n    .replace(/\\(/g, '%28')\n    .replace(/\\)/g, '%29')\n    .replace(/\\*/g, '%2A');\n};\n\nOAuth.signatureMethod = 'HMAC-SHA1';\nOAuth.version = '1.0';\n\n/*\n\tGenerate a nonce\n*/\nOAuth.nonce = function () {\n  var text = '';\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (var i = 0; i < 30; i++) text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n  return text;\n};\n\nOAuth.buildParameterString = function (obj) {\n  // Sort keys and encode values\n  if (obj) {\n    var keys = Object.keys(obj).sort();\n\n    // Map key=value, join them by &\n    return keys\n      .map(function (key) {\n        return key + '=' + OAuth.encode(obj[key]);\n      })\n      .join('&');\n  }\n\n  return '';\n};\n\n/*\n\tBuild the signature string from the object\n*/\n\nOAuth.buildSignatureString = function (method, url, parameters) {\n  return [method.toUpperCase(), OAuth.encode(url), OAuth.encode(parameters)].join('&');\n};\n\n/*\n\tRetuns encoded HMAC-SHA1 from key and text\n*/\nOAuth.signature = function (text, key) {\n  crypto = require('crypto');\n  return OAuth.encode(crypto.createHmac('sha1', key).update(text).digest('base64'));\n};\n\nOAuth.signRequest = function (request, oauth_parameters, consumer_secret, auth_token_secret) {\n  oauth_parameters = oauth_parameters || {};\n\n  // Set default values\n  if (!oauth_parameters.oauth_nonce) {\n    oauth_parameters.oauth_nonce = OAuth.nonce();\n  }\n  if (!oauth_parameters.oauth_timestamp) {\n    oauth_parameters.oauth_timestamp = Math.floor(new Date().getTime() / 1000);\n  }\n  if (!oauth_parameters.oauth_signature_method) {\n    oauth_parameters.oauth_signature_method = OAuth.signatureMethod;\n  }\n  if (!oauth_parameters.oauth_version) {\n    oauth_parameters.oauth_version = OAuth.version;\n  }\n\n  if (!auth_token_secret) {\n    auth_token_secret = '';\n  }\n  // Force GET method if unset\n  if (!request.method) {\n    request.method = 'GET';\n  }\n\n  // Collect  all the parameters in one signatureParameters object\n  var signatureParams = {};\n  var parametersToMerge = [request.params, request.body, oauth_parameters];\n  for (var i in parametersToMerge) {\n    var parameters = parametersToMerge[i];\n    for (var k in parameters) {\n      signatureParams[k] = parameters[k];\n    }\n  }\n\n  // Create a string based on the parameters\n  var parameterString = OAuth.buildParameterString(signatureParams);\n\n  // Build the signature string\n  var url = 'https://' + request.host + '' + request.path;\n\n  var signatureString = OAuth.buildSignatureString(request.method, url, parameterString);\n  // Hash the signature string\n  var signatureKey = [OAuth.encode(consumer_secret), OAuth.encode(auth_token_secret)].join('&');\n\n  var signature = OAuth.signature(signatureString, signatureKey);\n\n  // Set the signature in the params\n  oauth_parameters.oauth_signature = signature;\n  if (!request.headers) {\n    request.headers = {};\n  }\n\n  // Set the authorization header\n  var authHeader = Object.keys(oauth_parameters)\n    .sort()\n    .map(function (key) {\n      var value = oauth_parameters[key];\n      return key + '=\"' + value + '\"';\n    })\n    .join(', ');\n\n  request.headers.Authorization = 'OAuth ' + authHeader;\n\n  // Set the content type header\n  request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n  return request;\n};\n\nmodule.exports = OAuth;\n"],"file":"OAuth1Client.js"}