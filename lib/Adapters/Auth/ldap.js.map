{"version":3,"sources":["../../../src/Adapters/Auth/ldap.js"],"names":["ldapjs","require","Parse","validateAuthData","authData","options","optionsAreValid","Promise","_","reject","Error","INTERNAL_SERVER_ERROR","clientOptions","url","startsWith","tlsOptions","client","createClient","userCn","dn","replace","id","suffix","resolve","bind","password","ldapError","error","code","OBJECT_NOT_FOUND","destroy","groupCn","groupFilter","searchForGroup","unbind","filter","opts","scope","found","search","searchError","res","on","entry","object","cn","validateAppId","module","exports"],"mappings":"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","sourcesContent":["const ldapjs = require('ldapjs');\nconst Parse = require('parse/node').Parse;\n\nfunction validateAuthData(authData, options) {\n  if (!optionsAreValid(options)) {\n    return new Promise((_, reject) => {\n      reject(new Parse.Error(Parse.Error.INTERNAL_SERVER_ERROR, 'LDAP auth configuration missing'));\n    });\n  }\n  const clientOptions = options.url.startsWith('ldaps://')\n    ? { url: options.url, tlsOptions: options.tlsOptions }\n    : { url: options.url };\n\n  const client = ldapjs.createClient(clientOptions);\n  const userCn =\n    typeof options.dn === 'string'\n      ? options.dn.replace('{{id}}', authData.id)\n      : `uid=${authData.id},${options.suffix}`;\n\n  return new Promise((resolve, reject) => {\n    client.bind(userCn, authData.password, ldapError => {\n      delete authData.password;\n      if (ldapError) {\n        let error;\n        switch (ldapError.code) {\n          case 49:\n            error = new Parse.Error(\n              Parse.Error.OBJECT_NOT_FOUND,\n              'LDAP: Wrong username or password'\n            );\n            break;\n          case 'DEPTH_ZERO_SELF_SIGNED_CERT':\n            error = new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'LDAPS: Certificate mismatch');\n            break;\n          default:\n            error = new Parse.Error(\n              Parse.Error.OBJECT_NOT_FOUND,\n              'LDAP: Somthing went wrong (' + ldapError.code + ')'\n            );\n        }\n        reject(error);\n        client.destroy(ldapError);\n        return;\n      }\n\n      if (typeof options.groupCn === 'string' && typeof options.groupFilter === 'string') {\n        searchForGroup(client, options, authData.id, resolve, reject);\n      } else {\n        client.unbind();\n        client.destroy();\n        resolve();\n      }\n    });\n  });\n}\n\nfunction optionsAreValid(options) {\n  return (\n    typeof options === 'object' &&\n    typeof options.suffix === 'string' &&\n    typeof options.url === 'string' &&\n    (options.url.startsWith('ldap://') ||\n      (options.url.startsWith('ldaps://') && typeof options.tlsOptions === 'object'))\n  );\n}\n\nfunction searchForGroup(client, options, id, resolve, reject) {\n  const filter = options.groupFilter.replace(/{{id}}/gi, id);\n  const opts = {\n    scope: 'sub',\n    filter: filter,\n  };\n  let found = false;\n  client.search(options.suffix, opts, (searchError, res) => {\n    if (searchError) {\n      client.unbind();\n      client.destroy();\n      return reject(new Parse.Error(Parse.Error.INTERNAL_SERVER_ERROR, 'LDAP group search failed'));\n    }\n    res.on('searchEntry', entry => {\n      if (entry.object.cn === options.groupCn) {\n        found = true;\n        client.unbind();\n        client.destroy();\n        return resolve();\n      }\n    });\n    res.on('end', () => {\n      if (!found) {\n        client.unbind();\n        client.destroy();\n        return reject(\n          new Parse.Error(Parse.Error.INTERNAL_SERVER_ERROR, 'LDAP: User not in group')\n        );\n      }\n    });\n    res.on('error', () => {\n      return reject(new Parse.Error(Parse.Error.INTERNAL_SERVER_ERROR, 'LDAP group search failed'));\n    });\n  });\n}\n\nfunction validateAppId() {\n  return Promise.resolve();\n}\n\nmodule.exports = {\n  validateAppId,\n  validateAuthData,\n};\n"],"file":"ldap.js"}