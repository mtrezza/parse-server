{"version":3,"sources":["../../../src/Adapters/PubSub/PubSubAdapter.js"],"names":["PubSubAdapter","createPublisher","createSubscriber"],"mappings":";;;;;;;AAAA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACO,MAAMA,aAAN,CAAoB;AACzB;AACF;AACA;AACE,SAAOC,eAAP,GAAyB,CAAE;AAC3B;AACF;AACA;;;AACE,SAAOC,gBAAP,GAA0B,CAAE;;AARH;AAW3B;AACA;AACA;AACA;;;;eA2BeF,a","sourcesContent":["/*eslint no-unused-vars: \"off\"*/\n/**\n * @module Adapters\n */\n/**\n * @interface PubSubAdapter\n */\nexport class PubSubAdapter {\n  /**\n   * @returns {PubSubAdapter.Publisher}\n   */\n  static createPublisher() {}\n  /**\n   * @returns {PubSubAdapter.Subscriber}\n   */\n  static createSubscriber() {}\n}\n\n/**\n * @interface Publisher\n * @memberof PubSubAdapter\n */\ninterface Publisher {\n  /**\n   * @param {String} channel the channel in which to publish\n   * @param {String} message the message to publish\n   */\n  publish(channel: string, message: string): void;\n}\n\n/**\n * @interface Subscriber\n * @memberof PubSubAdapter\n */\ninterface Subscriber {\n  /**\n   * called when a new subscription the channel is required\n   * @param {String} channel the channel to subscribe\n   */\n  subscribe(channel: string): void;\n\n  /**\n   * called when the subscription from the channel should be stopped\n   * @param {String} channel\n   */\n  unsubscribe(channel: string): void;\n}\n\nexport default PubSubAdapter;\n"],"file":"PubSubAdapter.js"}