{"version":3,"sources":["../../../../src/Adapters/Storage/Postgres/PostgresClient.js"],"names":["parser","require","createClient","uri","databaseOptions","dbOptions","getDatabaseOptionsFromURI","key","initOptions","noWarnings","process","env","TESTING","pgp","client","pgOptions","pg","defaults"],"mappings":";;;;;;;AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,wBAAD,CAAtB;;AAEO,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,eAA3B,EAA4C;AACjD,MAAIC,SAAS,GAAG,EAAhB;AACAD,EAAAA,eAAe,GAAGA,eAAe,IAAI,EAArC;;AAEA,MAAID,GAAJ,EAAS;AACPE,IAAAA,SAAS,GAAGL,MAAM,CAACM,yBAAP,CAAiCH,GAAjC,CAAZ;AACD;;AAED,OAAK,MAAMI,GAAX,IAAkBH,eAAlB,EAAmC;AACjCC,IAAAA,SAAS,CAACE,GAAD,CAAT,GAAiBH,eAAe,CAACG,GAAD,CAAhC;AACD;;AAED,QAAMC,WAAW,GAAGH,SAAS,CAACG,WAAV,IAAyB,EAA7C;AACAA,EAAAA,WAAW,CAACC,UAAZ,GAAyBC,OAAO,IAAIA,OAAO,CAACC,GAAR,CAAYC,OAAhD;;AAEA,QAAMC,GAAG,GAAGZ,OAAO,CAAC,YAAD,CAAP,CAAsBO,WAAtB,CAAZ;;AACA,QAAMM,MAAM,GAAGD,GAAG,CAACR,SAAD,CAAlB;;AAEA,MAAIA,SAAS,CAACU,SAAd,EAAyB;AACvB,SAAK,MAAMR,GAAX,IAAkBF,SAAS,CAACU,SAA5B,EAAuC;AACrCF,MAAAA,GAAG,CAACG,EAAJ,CAAOC,QAAP,CAAgBV,GAAhB,IAAuBF,SAAS,CAACU,SAAV,CAAoBR,GAApB,CAAvB;AACD;AACF;;AAED,SAAO;AAAEO,IAAAA,MAAF;AAAUD,IAAAA;AAAV,GAAP;AACD","sourcesContent":["const parser = require('./PostgresConfigParser');\n\nexport function createClient(uri, databaseOptions) {\n  let dbOptions = {};\n  databaseOptions = databaseOptions || {};\n\n  if (uri) {\n    dbOptions = parser.getDatabaseOptionsFromURI(uri);\n  }\n\n  for (const key in databaseOptions) {\n    dbOptions[key] = databaseOptions[key];\n  }\n\n  const initOptions = dbOptions.initOptions || {};\n  initOptions.noWarnings = process && process.env.TESTING;\n\n  const pgp = require('pg-promise')(initOptions);\n  const client = pgp(dbOptions);\n\n  if (dbOptions.pgOptions) {\n    for (const key in dbOptions.pgOptions) {\n      pgp.pg.defaults[key] = dbOptions.pgOptions[key];\n    }\n  }\n\n  return { client, pgp };\n}\n"],"file":"PostgresClient.js"}