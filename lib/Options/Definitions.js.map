{"version":3,"sources":["../../src/Options/Definitions.js"],"names":["parsers","require","module","exports","ParseServerOptions","accountLockout","env","help","action","objectParser","allowClientClassCreation","booleanParser","default","allowCustomObjectId","allowHeaders","arrayParser","allowOrigin","analyticsAdapter","moduleOrObjectParser","appId","required","appName","auth","cacheAdapter","cacheMaxSize","numberParser","cacheTTL","clientKey","cloud","cluster","numberOrBooleanParser","collectionPrefix","customPages","databaseAdapter","databaseOptions","databaseURI","directAccess","dotNetKey","emailAdapter","emailVerifyTokenReuseIfValid","emailVerifyTokenValidityDuration","enableAnonymousUsers","enableExpressErrorHandler","enableSingleSchemaCache","encryptionKey","expireInactiveSessions","fileKey","filesAdapter","fileUpload","graphQLPath","graphQLSchema","host","idempotencyOptions","javascriptKey","jsonLogs","liveQuery","liveQueryServerOptions","loggerAdapter","logLevel","logsFolder","masterKey","masterKeyIps","maxLimit","maxLogFiles","maxUploadSize","middleware","mountGraphQL","mountPath","mountPlayground","objectIdSize","pages","passwordPolicy","playgroundPath","port","preserveFileName","preventLoginWithUnverifiedEmail","protectedFields","_User","publicServerURL","push","readOnlyMasterKey","restAPIKey","revokeSessionOnPasswordReset","scheduledPush","schemaCacheTTL","serverCloseComplete","serverStartComplete","serverURL","sessionLength","silent","startLiveQueryServer","userSensitiveFields","verbose","verifyUserEmails","webhookKey","PagesOptions","customUrls","enableLocalization","enableRouter","forceRedirect","localizationFallbackLocale","localizationJsonPath","pagesEndpoint","pagesPath","placeholders","PagesCustomUrlsOptions","emailVerificationLinkExpired","emailVerificationLinkInvalid","emailVerificationSendFail","emailVerificationSendSuccess","emailVerificationSuccess","passwordReset","passwordResetLinkInvalid","passwordResetSuccess","CustomPagesOptions","choosePassword","expiredVerificationLink","invalidLink","invalidPasswordResetLink","invalidVerificationLink","linkSendFail","linkSendSuccess","parseFrameURL","verifyEmailSuccess","LiveQueryOptions","classNames","pubSubAdapter","redisOptions","redisURL","wssAdapter","LiveQueryServerOptions","cacheTimeout","keyPairs","websocketTimeout","IdempotencyOptions","paths","ttl","AccountLockoutOptions","duration","threshold","unlockOnPasswordReset","PasswordPolicyOptions","doNotAllowUsername","maxPasswordAge","maxPasswordHistory","resetTokenReuseIfValid","resetTokenValidityDuration","validatorCallback","validatorPattern","FileUploadOptions","enableForAnonymousUser","enableForAuthenticatedUser","enableForPublic"],"mappings":"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","sourcesContent":["/*\n**** GENERATED CODE ****\nThis code has been generated by resources/buildConfigDefinitions.js\nDo not edit manually, but update Options/index.js\n*/\nvar parsers = require('./parsers');\n\nmodule.exports.ParseServerOptions = {\n  accountLockout: {\n    env: 'PARSE_SERVER_ACCOUNT_LOCKOUT',\n    help: 'account lockout policy for failed login attempts',\n    action: parsers.objectParser,\n  },\n  allowClientClassCreation: {\n    env: 'PARSE_SERVER_ALLOW_CLIENT_CLASS_CREATION',\n    help: 'Enable (or disable) client class creation, defaults to true',\n    action: parsers.booleanParser,\n    default: true,\n  },\n  allowCustomObjectId: {\n    env: 'PARSE_SERVER_ALLOW_CUSTOM_OBJECT_ID',\n    help: 'Enable (or disable) custom objectId',\n    action: parsers.booleanParser,\n    default: false,\n  },\n  allowHeaders: {\n    env: 'PARSE_SERVER_ALLOW_HEADERS',\n    help: 'Add headers to Access-Control-Allow-Headers',\n    action: parsers.arrayParser,\n  },\n  allowOrigin: {\n    env: 'PARSE_SERVER_ALLOW_ORIGIN',\n    help: 'Sets the origin to Access-Control-Allow-Origin',\n  },\n  analyticsAdapter: {\n    env: 'PARSE_SERVER_ANALYTICS_ADAPTER',\n    help: 'Adapter module for the analytics',\n    action: parsers.moduleOrObjectParser,\n  },\n  appId: {\n    env: 'PARSE_SERVER_APPLICATION_ID',\n    help: 'Your Parse Application ID',\n    required: true,\n  },\n  appName: {\n    env: 'PARSE_SERVER_APP_NAME',\n    help: 'Sets the app name',\n  },\n  auth: {\n    env: 'PARSE_SERVER_AUTH_PROVIDERS',\n    help:\n      'Configuration for your authentication providers, as stringified JSON. See http://docs.parseplatform.org/parse-server/guide/#oauth-and-3rd-party-authentication',\n    action: parsers.objectParser,\n  },\n  cacheAdapter: {\n    env: 'PARSE_SERVER_CACHE_ADAPTER',\n    help: 'Adapter module for the cache',\n    action: parsers.moduleOrObjectParser,\n  },\n  cacheMaxSize: {\n    env: 'PARSE_SERVER_CACHE_MAX_SIZE',\n    help: 'Sets the maximum size for the in memory cache, defaults to 10000',\n    action: parsers.numberParser('cacheMaxSize'),\n    default: 10000,\n  },\n  cacheTTL: {\n    env: 'PARSE_SERVER_CACHE_TTL',\n    help: 'Sets the TTL for the in memory cache (in ms), defaults to 5000 (5 seconds)',\n    action: parsers.numberParser('cacheTTL'),\n    default: 5000,\n  },\n  clientKey: {\n    env: 'PARSE_SERVER_CLIENT_KEY',\n    help: 'Key for iOS, MacOS, tvOS clients',\n  },\n  cloud: {\n    env: 'PARSE_SERVER_CLOUD',\n    help: 'Full path to your cloud code main.js',\n  },\n  cluster: {\n    env: 'PARSE_SERVER_CLUSTER',\n    help: 'Run with cluster, optionally set the number of processes default to os.cpus().length',\n    action: parsers.numberOrBooleanParser,\n  },\n  collectionPrefix: {\n    env: 'PARSE_SERVER_COLLECTION_PREFIX',\n    help: 'A collection prefix for the classes',\n    default: '',\n  },\n  customPages: {\n    env: 'PARSE_SERVER_CUSTOM_PAGES',\n    help: 'custom pages for password validation and reset',\n    action: parsers.objectParser,\n    default: {},\n  },\n  databaseAdapter: {\n    env: 'PARSE_SERVER_DATABASE_ADAPTER',\n    help: 'Adapter module for the database',\n    action: parsers.moduleOrObjectParser,\n  },\n  databaseOptions: {\n    env: 'PARSE_SERVER_DATABASE_OPTIONS',\n    help: 'Options to pass to the mongodb client',\n    action: parsers.objectParser,\n  },\n  databaseURI: {\n    env: 'PARSE_SERVER_DATABASE_URI',\n    help: 'The full URI to your database. Supported databases are mongodb or postgres.',\n    required: true,\n    default: 'mongodb://localhost:27017/parse',\n  },\n  directAccess: {\n    env: 'PARSE_SERVER_ENABLE_EXPERIMENTAL_DIRECT_ACCESS',\n    help:\n      'Replace HTTP Interface when using JS SDK in current node runtime, defaults to false. Caution, this is an experimental feature that may not be appropriate for production.',\n    action: parsers.booleanParser,\n    default: false,\n  },\n  dotNetKey: {\n    env: 'PARSE_SERVER_DOT_NET_KEY',\n    help: 'Key for Unity and .Net SDK',\n  },\n  emailAdapter: {\n    env: 'PARSE_SERVER_EMAIL_ADAPTER',\n    help: 'Adapter module for email sending',\n    action: parsers.moduleOrObjectParser,\n  },\n  emailVerifyTokenReuseIfValid: {\n    env: 'PARSE_SERVER_EMAIL_VERIFY_TOKEN_REUSE_IF_VALID',\n    help:\n      'an existing email verify token should be reused when resend verification email is requested',\n    action: parsers.booleanParser,\n    default: false,\n  },\n  emailVerifyTokenValidityDuration: {\n    env: 'PARSE_SERVER_EMAIL_VERIFY_TOKEN_VALIDITY_DURATION',\n    help: 'Email verification token validity duration, in seconds',\n    action: parsers.numberParser('emailVerifyTokenValidityDuration'),\n  },\n  enableAnonymousUsers: {\n    env: 'PARSE_SERVER_ENABLE_ANON_USERS',\n    help: 'Enable (or disable) anonymous users, defaults to true',\n    action: parsers.booleanParser,\n    default: true,\n  },\n  enableExpressErrorHandler: {\n    env: 'PARSE_SERVER_ENABLE_EXPRESS_ERROR_HANDLER',\n    help: 'Enables the default express error handler for all errors',\n    action: parsers.booleanParser,\n    default: false,\n  },\n  enableSingleSchemaCache: {\n    env: 'PARSE_SERVER_ENABLE_SINGLE_SCHEMA_CACHE',\n    help:\n      'Use a single schema cache shared across requests. Reduces number of queries made to _SCHEMA, defaults to false, i.e. unique schema cache per request.',\n    action: parsers.booleanParser,\n    default: false,\n  },\n  encryptionKey: {\n    env: 'PARSE_SERVER_ENCRYPTION_KEY',\n    help: 'Key for encrypting your files',\n  },\n  expireInactiveSessions: {\n    env: 'PARSE_SERVER_EXPIRE_INACTIVE_SESSIONS',\n    help: 'Sets wether we should expire the inactive sessions, defaults to true',\n    action: parsers.booleanParser,\n    default: true,\n  },\n  fileKey: {\n    env: 'PARSE_SERVER_FILE_KEY',\n    help: 'Key for your files',\n  },\n  filesAdapter: {\n    env: 'PARSE_SERVER_FILES_ADAPTER',\n    help: 'Adapter module for the files sub-system',\n    action: parsers.moduleOrObjectParser,\n  },\n  fileUpload: {\n    env: 'PARSE_SERVER_FILE_UPLOAD_OPTIONS',\n    help: 'Options for file uploads',\n    action: parsers.objectParser,\n    default: {},\n  },\n  graphQLPath: {\n    env: 'PARSE_SERVER_GRAPHQL_PATH',\n    help: 'Mount path for the GraphQL endpoint, defaults to /graphql',\n    default: '/graphql',\n  },\n  graphQLSchema: {\n    env: 'PARSE_SERVER_GRAPH_QLSCHEMA',\n    help: 'Full path to your GraphQL custom schema.graphql file',\n  },\n  host: {\n    env: 'PARSE_SERVER_HOST',\n    help: 'The host to serve ParseServer on, defaults to 0.0.0.0',\n    default: '0.0.0.0',\n  },\n  idempotencyOptions: {\n    env: 'PARSE_SERVER_EXPERIMENTAL_IDEMPOTENCY_OPTIONS',\n    help:\n      'Options for request idempotency to deduplicate identical requests that may be caused by network issues. Caution, this is an experimental feature that may not be appropriate for production.',\n    action: parsers.objectParser,\n    default: {},\n  },\n  javascriptKey: {\n    env: 'PARSE_SERVER_JAVASCRIPT_KEY',\n    help: 'Key for the Javascript SDK',\n  },\n  jsonLogs: {\n    env: 'JSON_LOGS',\n    help: 'Log as structured JSON objects',\n    action: parsers.booleanParser,\n  },\n  liveQuery: {\n    env: 'PARSE_SERVER_LIVE_QUERY',\n    help: \"parse-server's LiveQuery configuration object\",\n    action: parsers.objectParser,\n  },\n  liveQueryServerOptions: {\n    env: 'PARSE_SERVER_LIVE_QUERY_SERVER_OPTIONS',\n    help: 'Live query server configuration options (will start the liveQuery server)',\n    action: parsers.objectParser,\n  },\n  loggerAdapter: {\n    env: 'PARSE_SERVER_LOGGER_ADAPTER',\n    help: 'Adapter module for the logging sub-system',\n    action: parsers.moduleOrObjectParser,\n  },\n  logLevel: {\n    env: 'PARSE_SERVER_LOG_LEVEL',\n    help: 'Sets the level for logs',\n  },\n  logsFolder: {\n    env: 'PARSE_SERVER_LOGS_FOLDER',\n    help: \"Folder for the logs (defaults to './logs'); set to null to disable file based logging\",\n    default: './logs',\n  },\n  masterKey: {\n    env: 'PARSE_SERVER_MASTER_KEY',\n    help: 'Your Parse Master Key',\n    required: true,\n  },\n  masterKeyIps: {\n    env: 'PARSE_SERVER_MASTER_KEY_IPS',\n    help: 'Restrict masterKey to be used by only these ips, defaults to [] (allow all ips)',\n    action: parsers.arrayParser,\n    default: [],\n  },\n  maxLimit: {\n    env: 'PARSE_SERVER_MAX_LIMIT',\n    help: 'Max value for limit option on queries, defaults to unlimited',\n    action: parsers.numberParser('maxLimit'),\n  },\n  maxLogFiles: {\n    env: 'PARSE_SERVER_MAX_LOG_FILES',\n    help:\n      \"Maximum number of logs to keep. If not set, no logs will be removed. This can be a number of files or number of days. If using days, add 'd' as the suffix. (default: null)\",\n    action: parsers.objectParser,\n  },\n  maxUploadSize: {\n    env: 'PARSE_SERVER_MAX_UPLOAD_SIZE',\n    help: 'Max file size for uploads, defaults to 20mb',\n    default: '20mb',\n  },\n  middleware: {\n    env: 'PARSE_SERVER_MIDDLEWARE',\n    help: 'middleware for express server, can be string or function',\n  },\n  mountGraphQL: {\n    env: 'PARSE_SERVER_MOUNT_GRAPHQL',\n    help: 'Mounts the GraphQL endpoint',\n    action: parsers.booleanParser,\n    default: false,\n  },\n  mountPath: {\n    env: 'PARSE_SERVER_MOUNT_PATH',\n    help: 'Mount path for the server, defaults to /parse',\n    default: '/parse',\n  },\n  mountPlayground: {\n    env: 'PARSE_SERVER_MOUNT_PLAYGROUND',\n    help: 'Mounts the GraphQL Playground - never use this option in production',\n    action: parsers.booleanParser,\n    default: false,\n  },\n  objectIdSize: {\n    env: 'PARSE_SERVER_OBJECT_ID_SIZE',\n    help: \"Sets the number of characters in generated object id's, default 10\",\n    action: parsers.numberParser('objectIdSize'),\n    default: 10,\n  },\n  pages: {\n    env: 'PARSE_SERVER_PAGES',\n    help:\n      'The options for pages such as password reset and email verification. Caution, this is an experimental feature that may not be appropriate for production.',\n    action: parsers.objectParser,\n    default: {},\n  },\n  passwordPolicy: {\n    env: 'PARSE_SERVER_PASSWORD_POLICY',\n    help: 'Password policy for enforcing password related rules',\n    action: parsers.objectParser,\n  },\n  playgroundPath: {\n    env: 'PARSE_SERVER_PLAYGROUND_PATH',\n    help: 'Mount path for the GraphQL Playground, defaults to /playground',\n    default: '/playground',\n  },\n  port: {\n    env: 'PORT',\n    help: 'The port to run the ParseServer, defaults to 1337.',\n    action: parsers.numberParser('port'),\n    default: 1337,\n  },\n  preserveFileName: {\n    env: 'PARSE_SERVER_PRESERVE_FILE_NAME',\n    help: 'Enable (or disable) the addition of a unique hash to the file names',\n    action: parsers.booleanParser,\n    default: false,\n  },\n  preventLoginWithUnverifiedEmail: {\n    env: 'PARSE_SERVER_PREVENT_LOGIN_WITH_UNVERIFIED_EMAIL',\n    help:\n      'Prevent user from login if email is not verified and PARSE_SERVER_VERIFY_USER_EMAILS is true, defaults to false',\n    action: parsers.booleanParser,\n    default: false,\n  },\n  protectedFields: {\n    env: 'PARSE_SERVER_PROTECTED_FIELDS',\n    help: 'Protected fields that should be treated with extra security when fetching details.',\n    action: parsers.objectParser,\n    default: {\n      _User: {\n        '*': ['email'],\n      },\n    },\n  },\n  publicServerURL: {\n    env: 'PARSE_PUBLIC_SERVER_URL',\n    help: 'Public URL to your parse server with http:// or https://.',\n  },\n  push: {\n    env: 'PARSE_SERVER_PUSH',\n    help:\n      'Configuration for push, as stringified JSON. See http://docs.parseplatform.org/parse-server/guide/#push-notifications',\n    action: parsers.objectParser,\n  },\n  readOnlyMasterKey: {\n    env: 'PARSE_SERVER_READ_ONLY_MASTER_KEY',\n    help: 'Read-only key, which has the same capabilities as MasterKey without writes',\n  },\n  restAPIKey: {\n    env: 'PARSE_SERVER_REST_API_KEY',\n    help: 'Key for REST calls',\n  },\n  revokeSessionOnPasswordReset: {\n    env: 'PARSE_SERVER_REVOKE_SESSION_ON_PASSWORD_RESET',\n    help:\n      \"When a user changes their password, either through the reset password email or while logged in, all sessions are revoked if this is true. Set to false if you don't want to revoke sessions.\",\n    action: parsers.booleanParser,\n    default: true,\n  },\n  scheduledPush: {\n    env: 'PARSE_SERVER_SCHEDULED_PUSH',\n    help: 'Configuration for push scheduling, defaults to false.',\n    action: parsers.booleanParser,\n    default: false,\n  },\n  schemaCacheTTL: {\n    env: 'PARSE_SERVER_SCHEMA_CACHE_TTL',\n    help:\n      'The TTL for caching the schema for optimizing read/write operations. You should put a long TTL when your DB is in production. default to 5000; set 0 to disable.',\n    action: parsers.numberParser('schemaCacheTTL'),\n    default: 5000,\n  },\n  serverCloseComplete: {\n    env: 'PARSE_SERVER_SERVER_CLOSE_COMPLETE',\n    help: 'Callback when server has closed',\n  },\n  serverStartComplete: {\n    env: 'PARSE_SERVER_SERVER_START_COMPLETE',\n    help: 'Callback when server has started',\n  },\n  serverURL: {\n    env: 'PARSE_SERVER_URL',\n    help: 'URL to your parse server with http:// or https://.',\n    required: true,\n  },\n  sessionLength: {\n    env: 'PARSE_SERVER_SESSION_LENGTH',\n    help: 'Session duration, in seconds, defaults to 1 year',\n    action: parsers.numberParser('sessionLength'),\n    default: 31536000,\n  },\n  silent: {\n    env: 'SILENT',\n    help: 'Disables console output',\n    action: parsers.booleanParser,\n  },\n  startLiveQueryServer: {\n    env: 'PARSE_SERVER_START_LIVE_QUERY_SERVER',\n    help: 'Starts the liveQuery server',\n    action: parsers.booleanParser,\n  },\n  userSensitiveFields: {\n    env: 'PARSE_SERVER_USER_SENSITIVE_FIELDS',\n    help:\n      'Personally identifiable information fields in the user table the should be removed for non-authorized users. Deprecated @see protectedFields',\n    action: parsers.arrayParser,\n  },\n  verbose: {\n    env: 'VERBOSE',\n    help: 'Set the logging to verbose',\n    action: parsers.booleanParser,\n  },\n  verifyUserEmails: {\n    env: 'PARSE_SERVER_VERIFY_USER_EMAILS',\n    help: 'Enable (or disable) user email validation, defaults to false',\n    action: parsers.booleanParser,\n    default: false,\n  },\n  webhookKey: {\n    env: 'PARSE_SERVER_WEBHOOK_KEY',\n    help: 'Key sent with outgoing webhook calls',\n  },\n};\nmodule.exports.PagesOptions = {\n  customUrls: {\n    env: 'PARSE_SERVER_PAGES_CUSTOM_URLS',\n    help: 'The URLs to the custom pages.',\n    action: parsers.objectParser,\n    default: {},\n  },\n  enableLocalization: {\n    env: 'PARSE_SERVER_PAGES_ENABLE_LOCALIZATION',\n    help: 'Is true if pages should be localized; this has no effect on custom page redirects.',\n    action: parsers.booleanParser,\n    default: false,\n  },\n  enableRouter: {\n    env: 'PARSE_SERVER_PAGES_ENABLE_ROUTER',\n    help:\n      'Is true if the pages router should be enabled; this is required for any of the pages options to take effect. Caution, this is an experimental feature that may not be appropriate for production.',\n    action: parsers.booleanParser,\n    default: false,\n  },\n  forceRedirect: {\n    env: 'PARSE_SERVER_PAGES_FORCE_REDIRECT',\n    help:\n      'Is true if responses should always be redirects and never content, false if the response type should depend on the request type (GET request -> content response; POST request -> redirect response).',\n    action: parsers.booleanParser,\n    default: false,\n  },\n  localizationFallbackLocale: {\n    env: 'PARSE_SERVER_PAGES_LOCALIZATION_FALLBACK_LOCALE',\n    help:\n      'The fallback locale for localization if no matching translation is provided for the given locale. This is only relevant when providing translation resources via JSON file.',\n    default: 'en',\n  },\n  localizationJsonPath: {\n    env: 'PARSE_SERVER_PAGES_LOCALIZATION_JSON_PATH',\n    help:\n      'The path to the JSON file for localization; the translations will be used to fill template placeholders according to the locale.',\n  },\n  pagesEndpoint: {\n    env: 'PARSE_SERVER_PAGES_PAGES_ENDPOINT',\n    help: \"The API endpoint for the pages. Default is 'apps'.\",\n    default: 'apps',\n  },\n  pagesPath: {\n    env: 'PARSE_SERVER_PAGES_PAGES_PATH',\n    help:\n      \"The path to the pages directory; this also defines where the static endpoint '/apps' points to. Default is the './public/' directory.\",\n    default: './public',\n  },\n  placeholders: {\n    env: 'PARSE_SERVER_PAGES_PLACEHOLDERS',\n    help:\n      'The placeholder keys and values which will be filled in pages; this can be a simple object or a callback function.',\n    action: parsers.objectParser,\n    default: {},\n  },\n};\nmodule.exports.PagesCustomUrlsOptions = {\n  emailVerificationLinkExpired: {\n    env: 'PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_LINK_EXPIRED',\n    help: 'The URL to the custom page for email verification -> link expired.',\n  },\n  emailVerificationLinkInvalid: {\n    env: 'PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_LINK_INVALID',\n    help: 'The URL to the custom page for email verification -> link invalid.',\n  },\n  emailVerificationSendFail: {\n    env: 'PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_SEND_FAIL',\n    help: 'The URL to the custom page for email verification -> link send fail.',\n  },\n  emailVerificationSendSuccess: {\n    env: 'PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_SEND_SUCCESS',\n    help: 'The URL to the custom page for email verification -> resend link -> success.',\n  },\n  emailVerificationSuccess: {\n    env: 'PARSE_SERVER_PAGES_CUSTOM_URL_EMAIL_VERIFICATION_SUCCESS',\n    help: 'The URL to the custom page for email verification -> success.',\n  },\n  passwordReset: {\n    env: 'PARSE_SERVER_PAGES_CUSTOM_URL_PASSWORD_RESET',\n    help: 'The URL to the custom page for password reset.',\n  },\n  passwordResetLinkInvalid: {\n    env: 'PARSE_SERVER_PAGES_CUSTOM_URL_PASSWORD_RESET_LINK_INVALID',\n    help: 'The URL to the custom page for password reset -> link invalid.',\n  },\n  passwordResetSuccess: {\n    env: 'PARSE_SERVER_PAGES_CUSTOM_URL_PASSWORD_RESET_SUCCESS',\n    help: 'The URL to the custom page for password reset -> success.',\n  },\n};\nmodule.exports.CustomPagesOptions = {\n  choosePassword: {\n    env: 'PARSE_SERVER_CUSTOM_PAGES_CHOOSE_PASSWORD',\n    help: 'choose password page path',\n  },\n  expiredVerificationLink: {\n    env: 'PARSE_SERVER_CUSTOM_PAGES_EXPIRED_VERIFICATION_LINK',\n    help: 'expired verification link page path',\n  },\n  invalidLink: {\n    env: 'PARSE_SERVER_CUSTOM_PAGES_INVALID_LINK',\n    help: 'invalid link page path',\n  },\n  invalidPasswordResetLink: {\n    env: 'PARSE_SERVER_CUSTOM_PAGES_INVALID_PASSWORD_RESET_LINK',\n    help: 'invalid password reset link page path',\n  },\n  invalidVerificationLink: {\n    env: 'PARSE_SERVER_CUSTOM_PAGES_INVALID_VERIFICATION_LINK',\n    help: 'invalid verification link page path',\n  },\n  linkSendFail: {\n    env: 'PARSE_SERVER_CUSTOM_PAGES_LINK_SEND_FAIL',\n    help: 'verification link send fail page path',\n  },\n  linkSendSuccess: {\n    env: 'PARSE_SERVER_CUSTOM_PAGES_LINK_SEND_SUCCESS',\n    help: 'verification link send success page path',\n  },\n  parseFrameURL: {\n    env: 'PARSE_SERVER_CUSTOM_PAGES_PARSE_FRAME_URL',\n    help: 'for masking user-facing pages',\n  },\n  passwordResetSuccess: {\n    env: 'PARSE_SERVER_CUSTOM_PAGES_PASSWORD_RESET_SUCCESS',\n    help: 'password reset success page path',\n  },\n  verifyEmailSuccess: {\n    env: 'PARSE_SERVER_CUSTOM_PAGES_VERIFY_EMAIL_SUCCESS',\n    help: 'verify email success page path',\n  },\n};\nmodule.exports.LiveQueryOptions = {\n  classNames: {\n    env: 'PARSE_SERVER_LIVEQUERY_CLASSNAMES',\n    help: \"parse-server's LiveQuery classNames\",\n    action: parsers.arrayParser,\n  },\n  pubSubAdapter: {\n    env: 'PARSE_SERVER_LIVEQUERY_PUB_SUB_ADAPTER',\n    help: 'LiveQuery pubsub adapter',\n    action: parsers.moduleOrObjectParser,\n  },\n  redisOptions: {\n    env: 'PARSE_SERVER_LIVEQUERY_REDIS_OPTIONS',\n    help: \"parse-server's LiveQuery redisOptions\",\n    action: parsers.objectParser,\n  },\n  redisURL: {\n    env: 'PARSE_SERVER_LIVEQUERY_REDIS_URL',\n    help: \"parse-server's LiveQuery redisURL\",\n  },\n  wssAdapter: {\n    env: 'PARSE_SERVER_LIVEQUERY_WSS_ADAPTER',\n    help: 'Adapter module for the WebSocketServer',\n    action: parsers.moduleOrObjectParser,\n  },\n};\nmodule.exports.LiveQueryServerOptions = {\n  appId: {\n    env: 'PARSE_LIVE_QUERY_SERVER_APP_ID',\n    help:\n      'This string should match the appId in use by your Parse Server. If you deploy the LiveQuery server alongside Parse Server, the LiveQuery server will try to use the same appId.',\n  },\n  cacheTimeout: {\n    env: 'PARSE_LIVE_QUERY_SERVER_CACHE_TIMEOUT',\n    help:\n      \"Number in milliseconds. When clients provide the sessionToken to the LiveQuery server, the LiveQuery server will try to fetch its ParseUser's objectId from parse server and store it in the cache. The value defines the duration of the cache. Check the following Security section and our protocol specification for details, defaults to 5 * 1000 ms (5 seconds).\",\n    action: parsers.numberParser('cacheTimeout'),\n  },\n  keyPairs: {\n    env: 'PARSE_LIVE_QUERY_SERVER_KEY_PAIRS',\n    help:\n      'A JSON object that serves as a whitelist of keys. It is used for validating clients when they try to connect to the LiveQuery server. Check the following Security section and our protocol specification for details.',\n    action: parsers.objectParser,\n  },\n  logLevel: {\n    env: 'PARSE_LIVE_QUERY_SERVER_LOG_LEVEL',\n    help:\n      'This string defines the log level of the LiveQuery server. We support VERBOSE, INFO, ERROR, NONE, defaults to INFO.',\n  },\n  masterKey: {\n    env: 'PARSE_LIVE_QUERY_SERVER_MASTER_KEY',\n    help:\n      'This string should match the masterKey in use by your Parse Server. If you deploy the LiveQuery server alongside Parse Server, the LiveQuery server will try to use the same masterKey.',\n  },\n  port: {\n    env: 'PARSE_LIVE_QUERY_SERVER_PORT',\n    help: 'The port to run the LiveQuery server, defaults to 1337.',\n    action: parsers.numberParser('port'),\n    default: 1337,\n  },\n  pubSubAdapter: {\n    env: 'PARSE_LIVE_QUERY_SERVER_PUB_SUB_ADAPTER',\n    help: 'LiveQuery pubsub adapter',\n    action: parsers.moduleOrObjectParser,\n  },\n  redisOptions: {\n    env: 'PARSE_LIVE_QUERY_SERVER_REDIS_OPTIONS',\n    help: \"parse-server's LiveQuery redisOptions\",\n    action: parsers.objectParser,\n  },\n  redisURL: {\n    env: 'PARSE_LIVE_QUERY_SERVER_REDIS_URL',\n    help: \"parse-server's LiveQuery redisURL\",\n  },\n  serverURL: {\n    env: 'PARSE_LIVE_QUERY_SERVER_SERVER_URL',\n    help:\n      'This string should match the serverURL in use by your Parse Server. If you deploy the LiveQuery server alongside Parse Server, the LiveQuery server will try to use the same serverURL.',\n  },\n  websocketTimeout: {\n    env: 'PARSE_LIVE_QUERY_SERVER_WEBSOCKET_TIMEOUT',\n    help:\n      'Number of milliseconds between ping/pong frames. The WebSocket server sends ping/pong frames to the clients to keep the WebSocket alive. This value defines the interval of the ping/pong frame from the server to clients, defaults to 10 * 1000 ms (10 s).',\n    action: parsers.numberParser('websocketTimeout'),\n  },\n  wssAdapter: {\n    env: 'PARSE_LIVE_QUERY_SERVER_WSS_ADAPTER',\n    help: 'Adapter module for the WebSocketServer',\n    action: parsers.moduleOrObjectParser,\n  },\n};\nmodule.exports.IdempotencyOptions = {\n  paths: {\n    env: 'PARSE_SERVER_EXPERIMENTAL_IDEMPOTENCY_PATHS',\n    help:\n      'An array of paths for which the feature should be enabled. The mount path must not be included, for example instead of `/parse/functions/myFunction` specifiy `functions/myFunction`. The entries are interpreted as regular expression, for example `functions/.*` matches all functions, `jobs/.*` matches all jobs, `classes/.*` matches all classes, `.*` matches all paths.',\n    action: parsers.arrayParser,\n    default: [],\n  },\n  ttl: {\n    env: 'PARSE_SERVER_EXPERIMENTAL_IDEMPOTENCY_TTL',\n    help:\n      'The duration in seconds after which a request record is discarded from the database, defaults to 300s.',\n    action: parsers.numberParser('ttl'),\n    default: 300,\n  },\n};\nmodule.exports.AccountLockoutOptions = {\n  duration: {\n    env: 'PARSE_SERVER_ACCOUNT_LOCKOUT_DURATION',\n    help:\n      'number of minutes that a locked-out account remains locked out before automatically becoming unlocked.',\n    action: parsers.numberParser('duration'),\n  },\n  threshold: {\n    env: 'PARSE_SERVER_ACCOUNT_LOCKOUT_THRESHOLD',\n    help: 'number of failed sign-in attempts that will cause a user account to be locked',\n    action: parsers.numberParser('threshold'),\n  },\n  unlockOnPasswordReset: {\n    env: 'PARSE_SERVER_ACCOUNT_LOCKOUT_UNLOCK_ON_PASSWORD_RESET',\n    help: 'Is true if the account lock should be removed after a successful password reset.',\n    action: parsers.booleanParser,\n    default: false,\n  },\n};\nmodule.exports.PasswordPolicyOptions = {\n  doNotAllowUsername: {\n    env: 'PARSE_SERVER_PASSWORD_POLICY_DO_NOT_ALLOW_USERNAME',\n    help: 'disallow username in passwords',\n    action: parsers.booleanParser,\n  },\n  maxPasswordAge: {\n    env: 'PARSE_SERVER_PASSWORD_POLICY_MAX_PASSWORD_AGE',\n    help: 'days for password expiry',\n    action: parsers.numberParser('maxPasswordAge'),\n  },\n  maxPasswordHistory: {\n    env: 'PARSE_SERVER_PASSWORD_POLICY_MAX_PASSWORD_HISTORY',\n    help: 'setting to prevent reuse of previous n passwords',\n    action: parsers.numberParser('maxPasswordHistory'),\n  },\n  resetTokenReuseIfValid: {\n    env: 'PARSE_SERVER_PASSWORD_POLICY_RESET_TOKEN_REUSE_IF_VALID',\n    help: \"resend token if it's still valid\",\n    action: parsers.booleanParser,\n  },\n  resetTokenValidityDuration: {\n    env: 'PARSE_SERVER_PASSWORD_POLICY_RESET_TOKEN_VALIDITY_DURATION',\n    help: 'time for token to expire',\n    action: parsers.numberParser('resetTokenValidityDuration'),\n  },\n  validatorCallback: {\n    env: 'PARSE_SERVER_PASSWORD_POLICY_VALIDATOR_CALLBACK',\n    help: 'a callback function to be invoked to validate the password',\n  },\n  validatorPattern: {\n    env: 'PARSE_SERVER_PASSWORD_POLICY_VALIDATOR_PATTERN',\n    help: 'a RegExp object or a regex string representing the pattern to enforce',\n  },\n};\nmodule.exports.FileUploadOptions = {\n  enableForAnonymousUser: {\n    env: 'PARSE_SERVER_FILE_UPLOAD_ENABLE_FOR_ANONYMOUS_USER',\n    help: 'Is true if file upload should be allowed for anonymous users.',\n    action: parsers.booleanParser,\n    default: false,\n  },\n  enableForAuthenticatedUser: {\n    env: 'PARSE_SERVER_FILE_UPLOAD_ENABLE_FOR_AUTHENTICATED_USER',\n    help: 'Is true if file upload should be allowed for authenticated users.',\n    action: parsers.booleanParser,\n    default: true,\n  },\n  enableForPublic: {\n    env: 'PARSE_SERVER_FILE_UPLOAD_ENABLE_FOR_PUBLIC',\n    help: 'Is true if file upload should be allowed for anyone, regardless of user authentication.',\n    action: parsers.booleanParser,\n    default: false,\n  },\n};\n"],"file":"Definitions.js"}