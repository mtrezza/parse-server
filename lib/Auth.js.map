{"version":3,"sources":["../src/Auth.js"],"names":["cryptoUtils","require","RestQuery","Parse","Auth","config","cacheController","undefined","isMaster","isReadOnly","user","installationId","userRoles","fetchedRoles","rolePromise","prototype","isUnauthenticated","master","readOnly","nobody","getAuthForSessionToken","sessionToken","userJSON","get","cachedUser","Object","fromJSON","Promise","resolve","results","restOptions","limit","include","query","execute","Query","Session","equalTo","find","useMasterKey","map","obj","toJSON","length","Error","INVALID_SESSION_TOKEN","now","Date","expiresAt","iso","password","put","userObject","getAuthForLegacySessionToken","then","response","className","getUserRoles","_loadRoles","getRolesForUser","restWhere","users","__type","objectId","id","each","result","push","Role","cachedRoles","role","cacheRoles","rolesMap","reduce","m","r","names","name","ids","roleNames","_getAllRolesNamesForRoleIds","Array","getRolesByIds","ins","containedIn","roles","$in","roleIDs","queriedRoles","filter","roleID","wasQueried","Set","resultMap","memo","concat","createSession","userId","createdWith","additionalSessionData","token","newToken","generateSessionExpiresAt","sessionData","restricted","_encode","assign","RestWrite","module","exports"],"mappings":"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","sourcesContent":["const cryptoUtils = require('./cryptoUtils');\nconst RestQuery = require('./RestQuery');\nconst Parse = require('parse/node');\n\n// An Auth object tells you who is requesting something and whether\n// the master key was used.\n// userObject is a Parse.User and can be null if there's no user.\nfunction Auth({\n  config,\n  cacheController = undefined,\n  isMaster = false,\n  isReadOnly = false,\n  user,\n  installationId,\n}) {\n  this.config = config;\n  this.cacheController = cacheController || (config && config.cacheController);\n  this.installationId = installationId;\n  this.isMaster = isMaster;\n  this.user = user;\n  this.isReadOnly = isReadOnly;\n\n  // Assuming a users roles won't change during a single request, we'll\n  // only load them once.\n  this.userRoles = [];\n  this.fetchedRoles = false;\n  this.rolePromise = null;\n}\n\n// Whether this auth could possibly modify the given user id.\n// It still could be forbidden via ACLs even if this returns true.\nAuth.prototype.isUnauthenticated = function () {\n  if (this.isMaster) {\n    return false;\n  }\n  if (this.user) {\n    return false;\n  }\n  return true;\n};\n\n// A helper to get a master-level Auth object\nfunction master(config) {\n  return new Auth({ config, isMaster: true });\n}\n\n// A helper to get a master-level Auth object\nfunction readOnly(config) {\n  return new Auth({ config, isMaster: true, isReadOnly: true });\n}\n\n// A helper to get a nobody-level Auth object\nfunction nobody(config) {\n  return new Auth({ config, isMaster: false });\n}\n\n// Returns a promise that resolves to an Auth object\nconst getAuthForSessionToken = async function ({\n  config,\n  cacheController,\n  sessionToken,\n  installationId,\n}) {\n  cacheController = cacheController || (config && config.cacheController);\n  if (cacheController) {\n    const userJSON = await cacheController.user.get(sessionToken);\n    if (userJSON) {\n      const cachedUser = Parse.Object.fromJSON(userJSON);\n      return Promise.resolve(\n        new Auth({\n          config,\n          cacheController,\n          isMaster: false,\n          installationId,\n          user: cachedUser,\n        })\n      );\n    }\n  }\n\n  let results;\n  if (config) {\n    const restOptions = {\n      limit: 1,\n      include: 'user',\n    };\n\n    const query = new RestQuery(config, master(config), '_Session', { sessionToken }, restOptions);\n    results = (await query.execute()).results;\n  } else {\n    results = (\n      await new Parse.Query(Parse.Session)\n        .limit(1)\n        .include('user')\n        .equalTo('sessionToken', sessionToken)\n        .find({ useMasterKey: true })\n    ).map(obj => obj.toJSON());\n  }\n\n  if (results.length !== 1 || !results[0]['user']) {\n    throw new Parse.Error(Parse.Error.INVALID_SESSION_TOKEN, 'Invalid session token');\n  }\n  const now = new Date(),\n    expiresAt = results[0].expiresAt ? new Date(results[0].expiresAt.iso) : undefined;\n  if (expiresAt < now) {\n    throw new Parse.Error(Parse.Error.INVALID_SESSION_TOKEN, 'Session token is expired.');\n  }\n  const obj = results[0]['user'];\n  delete obj.password;\n  obj['className'] = '_User';\n  obj['sessionToken'] = sessionToken;\n  if (cacheController) {\n    cacheController.user.put(sessionToken, obj);\n  }\n  const userObject = Parse.Object.fromJSON(obj);\n  return new Auth({\n    config,\n    cacheController,\n    isMaster: false,\n    installationId,\n    user: userObject,\n  });\n};\n\nvar getAuthForLegacySessionToken = function ({ config, sessionToken, installationId }) {\n  var restOptions = {\n    limit: 1,\n  };\n  var query = new RestQuery(config, master(config), '_User', { sessionToken }, restOptions);\n  return query.execute().then(response => {\n    var results = response.results;\n    if (results.length !== 1) {\n      throw new Parse.Error(Parse.Error.INVALID_SESSION_TOKEN, 'invalid legacy session token');\n    }\n    const obj = results[0];\n    obj.className = '_User';\n    const userObject = Parse.Object.fromJSON(obj);\n    return new Auth({\n      config,\n      isMaster: false,\n      installationId,\n      user: userObject,\n    });\n  });\n};\n\n// Returns a promise that resolves to an array of role names\nAuth.prototype.getUserRoles = function () {\n  if (this.isMaster || !this.user) {\n    return Promise.resolve([]);\n  }\n  if (this.fetchedRoles) {\n    return Promise.resolve(this.userRoles);\n  }\n  if (this.rolePromise) {\n    return this.rolePromise;\n  }\n  this.rolePromise = this._loadRoles();\n  return this.rolePromise;\n};\n\nAuth.prototype.getRolesForUser = async function () {\n  //Stack all Parse.Role\n  const results = [];\n  if (this.config) {\n    const restWhere = {\n      users: {\n        __type: 'Pointer',\n        className: '_User',\n        objectId: this.user.id,\n      },\n    };\n    await new RestQuery(this.config, master(this.config), '_Role', restWhere, {}).each(result =>\n      results.push(result)\n    );\n  } else {\n    await new Parse.Query(Parse.Role)\n      .equalTo('users', this.user)\n      .each(result => results.push(result.toJSON()), { useMasterKey: true });\n  }\n  return results;\n};\n\n// Iterates through the role tree and compiles a user's roles\nAuth.prototype._loadRoles = async function () {\n  if (this.cacheController) {\n    const cachedRoles = await this.cacheController.role.get(this.user.id);\n    if (cachedRoles != null) {\n      this.fetchedRoles = true;\n      this.userRoles = cachedRoles;\n      return cachedRoles;\n    }\n  }\n\n  // First get the role ids this user is directly a member of\n  const results = await this.getRolesForUser();\n  if (!results.length) {\n    this.userRoles = [];\n    this.fetchedRoles = true;\n    this.rolePromise = null;\n\n    this.cacheRoles();\n    return this.userRoles;\n  }\n\n  const rolesMap = results.reduce(\n    (m, r) => {\n      m.names.push(r.name);\n      m.ids.push(r.objectId);\n      return m;\n    },\n    { ids: [], names: [] }\n  );\n\n  // run the recursive finding\n  const roleNames = await this._getAllRolesNamesForRoleIds(rolesMap.ids, rolesMap.names);\n  this.userRoles = roleNames.map(r => {\n    return 'role:' + r;\n  });\n  this.fetchedRoles = true;\n  this.rolePromise = null;\n  this.cacheRoles();\n  return this.userRoles;\n};\n\nAuth.prototype.cacheRoles = function () {\n  if (!this.cacheController) {\n    return false;\n  }\n  this.cacheController.role.put(this.user.id, Array(...this.userRoles));\n  return true;\n};\n\nAuth.prototype.getRolesByIds = async function (ins) {\n  const results = [];\n  // Build an OR query across all parentRoles\n  if (!this.config) {\n    await new Parse.Query(Parse.Role)\n      .containedIn(\n        'roles',\n        ins.map(id => {\n          const role = new Parse.Object(Parse.Role);\n          role.id = id;\n          return role;\n        })\n      )\n      .each(result => results.push(result.toJSON()), { useMasterKey: true });\n  } else {\n    const roles = ins.map(id => {\n      return {\n        __type: 'Pointer',\n        className: '_Role',\n        objectId: id,\n      };\n    });\n    const restWhere = { roles: { $in: roles } };\n    await new RestQuery(this.config, master(this.config), '_Role', restWhere, {}).each(result =>\n      results.push(result)\n    );\n  }\n  return results;\n};\n\n// Given a list of roleIds, find all the parent roles, returns a promise with all names\nAuth.prototype._getAllRolesNamesForRoleIds = function (roleIDs, names = [], queriedRoles = {}) {\n  const ins = roleIDs.filter(roleID => {\n    const wasQueried = queriedRoles[roleID] !== true;\n    queriedRoles[roleID] = true;\n    return wasQueried;\n  });\n\n  // all roles are accounted for, return the names\n  if (ins.length == 0) {\n    return Promise.resolve([...new Set(names)]);\n  }\n\n  return this.getRolesByIds(ins)\n    .then(results => {\n      // Nothing found\n      if (!results.length) {\n        return Promise.resolve(names);\n      }\n      // Map the results with all Ids and names\n      const resultMap = results.reduce(\n        (memo, role) => {\n          memo.names.push(role.name);\n          memo.ids.push(role.objectId);\n          return memo;\n        },\n        { ids: [], names: [] }\n      );\n      // store the new found names\n      names = names.concat(resultMap.names);\n      // find the next ones, circular roles will be cut\n      return this._getAllRolesNamesForRoleIds(resultMap.ids, names, queriedRoles);\n    })\n    .then(names => {\n      return Promise.resolve([...new Set(names)]);\n    });\n};\n\nconst createSession = function (\n  config,\n  { userId, createdWith, installationId, additionalSessionData }\n) {\n  const token = 'r:' + cryptoUtils.newToken();\n  const expiresAt = config.generateSessionExpiresAt();\n  const sessionData = {\n    sessionToken: token,\n    user: {\n      __type: 'Pointer',\n      className: '_User',\n      objectId: userId,\n    },\n    createdWith,\n    restricted: false,\n    expiresAt: Parse._encode(expiresAt),\n  };\n\n  if (installationId) {\n    sessionData.installationId = installationId;\n  }\n\n  Object.assign(sessionData, additionalSessionData);\n  // We need to import RestWrite at this point for the cyclic dependency it has to it\n  const RestWrite = require('./RestWrite');\n\n  return {\n    sessionData,\n    createSession: () =>\n      new RestWrite(config, master(config), '_Session', null, sessionData).execute(),\n  };\n};\n\nmodule.exports = {\n  Auth,\n  master,\n  nobody,\n  readOnly,\n  getAuthForSessionToken,\n  getAuthForLegacySessionToken,\n  createSession,\n};\n"],"file":"Auth.js"}