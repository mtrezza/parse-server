{"version":3,"sources":["../src/RestWrite.js"],"names":["SchemaController","require","deepcopy","Auth","cryptoUtils","passwordCrypto","Parse","triggers","ClientSDK","RestWrite","config","auth","className","query","data","originalData","clientSDK","context","action","isReadOnly","Error","OPERATION_FORBIDDEN","storage","runOptions","allowCustomObjectId","Object","prototype","hasOwnProperty","call","objectId","MISSING_OBJECT_ID","INVALID_KEY_NAME","id","response","updatedAt","_encode","Date","iso","validSchemaController","execute","Promise","resolve","then","getUserAndRoleACL","validateClientClassCreation","handleInstallation","handleSession","validateAuthData","runBeforeSaveTrigger","deleteEmailResetTokenIfNeeded","validateSchema","schemaController","setRequiredFieldsIfNeeded","transformUser","expandFilesForExistingObjects","destroyDuplicatedSessions","runDatabaseOperation","createSessionTokenIfNeeded","handleFollowup","runAfterSaveTrigger","cleanUserAuthData","isMaster","acl","user","getUserRoles","roles","concat","allowClientClassCreation","systemClasses","indexOf","database","loadSchema","hasClass","validateObject","triggerExists","Types","beforeSave","applicationId","extraData","originalObject","updatedObject","buildUpdatedObject","inflate","databasePromise","update","create","result","length","OBJECT_NOT_FOUND","maybeRunTrigger","object","fieldsChangedByTrigger","_","reduce","value","key","isEqual","push","runBeforeLoginTrigger","userData","beforeLogin","filesController","expandFilesInObject","getAllClasses","allClasses","schema","find","oneClass","setRequiredFieldIfNeeded","fieldName","setDefault","undefined","__op","fields","defaultValue","required","VALIDATION_ERROR","createdAt","newObjectId","objectIdSize","keys","forEach","authData","username","isEmpty","USERNAME_MISSING","password","PASSWORD_MISSING","UNSUPPORTED_SERVICE","providers","canHandleAuthData","canHandle","provider","providerAuthData","hasToken","handleAuthData","handleAuthDataValidation","validations","map","authDataManager","getValidatorForProvider","all","findUsersWithAuthData","memo","queryKey","filter","q","findPromise","$or","filteredObjectsByACL","objects","ACL","results","r","join","userResult","mutatedAuthData","providerData","userAuthData","hasMutatedAuthData","userId","location","ACCOUNT_ALREADY_LINKED","promise","error","RestQuery","master","__type","session","cacheController","del","sessionToken","_validatePasswordPolicy","hash","hashedPassword","_hashed_password","_validateUserName","_validateEmail","randomString","responseShouldHaveUsername","$ne","limit","caseInsensitive","USERNAME_TAKEN","email","match","reject","INVALID_EMAIL_ADDRESS","EMAIL_TAKEN","userController","setEmailVerifyToken","passwordPolicy","_validatePasswordRequirements","_validatePasswordHistory","policyError","validationError","containsUsernameError","patternValidator","validatorCallback","doNotAllowUsername","maxPasswordHistory","oldPasswords","_password_history","take","newPassword","promises","compare","catch","err","preventLoginWithUnverifiedEmail","verifyUserEmails","createSessionToken","installationId","sessionData","createSession","createdWith","authProvider","addOps","_perishable_token","_perishable_token_expires_at","assign","destroy","revokeSessionOnPasswordReset","sessionQuery","bind","sendVerificationEmail","INVALID_SESSION_TOKEN","additionalSessionData","INTERNAL_SERVER_ERROR","status","deviceToken","toLowerCase","deviceType","idMatch","objectIdMatch","installationIdMatch","deviceTokenMatches","orQueries","delQuery","appIdentifier","code","objId","role","clear","isUnauthenticated","SESSION_MISSING","download","downloadName","name","INVALID_ACL","read","write","maxPasswordAge","_password_changed_at","defer","Math","max","shift","_updateResponseWithData","DUPLICATE_VALUE","userInfo","duplicated_field","hasAfterSaveHook","afterSave","hasLiveQuery","liveQueryController","_handleSaveResponse","perms","getClassLevelPermissions","onAfterSave","logger","warn","middle","mount","serverURL","sanitizedData","test","_decode","set","splittedKey","split","parentProp","parentVal","get","clientSupportsDelete","supportsForwardDelete","dataValue","module","exports"],"mappings":"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","sourcesContent":["// A RestWrite encapsulates everything we need to run an operation\n// that writes to the database.\n// This could be either a \"create\" or an \"update\".\n\nvar SchemaController = require('./Controllers/SchemaController');\nvar deepcopy = require('deepcopy');\n\nconst Auth = require('./Auth');\nvar cryptoUtils = require('./cryptoUtils');\nvar passwordCrypto = require('./password');\nvar Parse = require('parse/node');\nvar triggers = require('./triggers');\nvar ClientSDK = require('./ClientSDK');\nimport RestQuery from './RestQuery';\nimport _ from 'lodash';\nimport logger from './logger';\n\n// query and data are both provided in REST API format. So data\n// types are encoded by plain old objects.\n// If query is null, this is a \"create\" and the data in data should be\n// created.\n// Otherwise this is an \"update\" - the object matching the query\n// should get updated with data.\n// RestWrite will handle objectId, createdAt, and updatedAt for\n// everything. It also knows to use triggers and special modifications\n// for the _User class.\nfunction RestWrite(config, auth, className, query, data, originalData, clientSDK, context, action) {\n  if (auth.isReadOnly) {\n    throw new Parse.Error(\n      Parse.Error.OPERATION_FORBIDDEN,\n      'Cannot perform a write operation when using readOnlyMasterKey'\n    );\n  }\n  this.config = config;\n  this.auth = auth;\n  this.className = className;\n  this.clientSDK = clientSDK;\n  this.storage = {};\n  this.runOptions = {};\n  this.context = context || {};\n\n  if (action) {\n    this.runOptions.action = action;\n  }\n\n  if (!query) {\n    if (this.config.allowCustomObjectId) {\n      if (Object.prototype.hasOwnProperty.call(data, 'objectId') && !data.objectId) {\n        throw new Parse.Error(\n          Parse.Error.MISSING_OBJECT_ID,\n          'objectId must not be empty, null or undefined'\n        );\n      }\n    } else {\n      if (data.objectId) {\n        throw new Parse.Error(Parse.Error.INVALID_KEY_NAME, 'objectId is an invalid field name.');\n      }\n      if (data.id) {\n        throw new Parse.Error(Parse.Error.INVALID_KEY_NAME, 'id is an invalid field name.');\n      }\n    }\n  }\n\n  // When the operation is complete, this.response may have several\n  // fields.\n  // response: the actual data to be returned\n  // status: the http status code. if not present, treated like a 200\n  // location: the location header. if not present, no location header\n  this.response = null;\n\n  // Processing this operation may mutate our data, so we operate on a\n  // copy\n  this.query = deepcopy(query);\n  this.data = deepcopy(data);\n  // We never change originalData, so we do not need a deep copy\n  this.originalData = originalData;\n\n  // The timestamp we'll use for this whole operation\n  this.updatedAt = Parse._encode(new Date()).iso;\n\n  // Shared SchemaController to be reused to reduce the number of loadSchema() calls per request\n  // Once set the schemaData should be immutable\n  this.validSchemaController = null;\n}\n\n// A convenient method to perform all the steps of processing the\n// write, in order.\n// Returns a promise for a {response, status, location} object.\n// status and location are optional.\nRestWrite.prototype.execute = function () {\n  return Promise.resolve()\n    .then(() => {\n      return this.getUserAndRoleACL();\n    })\n    .then(() => {\n      return this.validateClientClassCreation();\n    })\n    .then(() => {\n      return this.handleInstallation();\n    })\n    .then(() => {\n      return this.handleSession();\n    })\n    .then(() => {\n      return this.validateAuthData();\n    })\n    .then(() => {\n      return this.runBeforeSaveTrigger();\n    })\n    .then(() => {\n      return this.deleteEmailResetTokenIfNeeded();\n    })\n    .then(() => {\n      return this.validateSchema();\n    })\n    .then(schemaController => {\n      this.validSchemaController = schemaController;\n      return this.setRequiredFieldsIfNeeded();\n    })\n    .then(() => {\n      return this.transformUser();\n    })\n    .then(() => {\n      return this.expandFilesForExistingObjects();\n    })\n    .then(() => {\n      return this.destroyDuplicatedSessions();\n    })\n    .then(() => {\n      return this.runDatabaseOperation();\n    })\n    .then(() => {\n      return this.createSessionTokenIfNeeded();\n    })\n    .then(() => {\n      return this.handleFollowup();\n    })\n    .then(() => {\n      return this.runAfterSaveTrigger();\n    })\n    .then(() => {\n      return this.cleanUserAuthData();\n    })\n    .then(() => {\n      return this.response;\n    });\n};\n\n// Uses the Auth object to get the list of roles, adds the user id\nRestWrite.prototype.getUserAndRoleACL = function () {\n  if (this.auth.isMaster) {\n    return Promise.resolve();\n  }\n\n  this.runOptions.acl = ['*'];\n\n  if (this.auth.user) {\n    return this.auth.getUserRoles().then(roles => {\n      this.runOptions.acl = this.runOptions.acl.concat(roles, [this.auth.user.id]);\n      return;\n    });\n  } else {\n    return Promise.resolve();\n  }\n};\n\n// Validates this operation against the allowClientClassCreation config.\nRestWrite.prototype.validateClientClassCreation = function () {\n  if (\n    this.config.allowClientClassCreation === false &&\n    !this.auth.isMaster &&\n    SchemaController.systemClasses.indexOf(this.className) === -1\n  ) {\n    return this.config.database\n      .loadSchema()\n      .then(schemaController => schemaController.hasClass(this.className))\n      .then(hasClass => {\n        if (hasClass !== true) {\n          throw new Parse.Error(\n            Parse.Error.OPERATION_FORBIDDEN,\n            'This user is not allowed to access ' + 'non-existent class: ' + this.className\n          );\n        }\n      });\n  } else {\n    return Promise.resolve();\n  }\n};\n\n// Validates this operation against the schema.\nRestWrite.prototype.validateSchema = function () {\n  return this.config.database.validateObject(\n    this.className,\n    this.data,\n    this.query,\n    this.runOptions\n  );\n};\n\n// Runs any beforeSave triggers against this operation.\n// Any change leads to our data being mutated.\nRestWrite.prototype.runBeforeSaveTrigger = function () {\n  if (this.response) {\n    return;\n  }\n\n  // Avoid doing any setup for triggers if there is no 'beforeSave' trigger for this class.\n  if (\n    !triggers.triggerExists(this.className, triggers.Types.beforeSave, this.config.applicationId)\n  ) {\n    return Promise.resolve();\n  }\n\n  // Cloud code gets a bit of extra data for its objects\n  var extraData = { className: this.className };\n  if (this.query && this.query.objectId) {\n    extraData.objectId = this.query.objectId;\n  }\n\n  let originalObject = null;\n  const updatedObject = this.buildUpdatedObject(extraData);\n  if (this.query && this.query.objectId) {\n    // This is an update for existing object.\n    originalObject = triggers.inflate(extraData, this.originalData);\n  }\n\n  return Promise.resolve()\n    .then(() => {\n      // Before calling the trigger, validate the permissions for the save operation\n      let databasePromise = null;\n      if (this.query) {\n        // Validate for updating\n        databasePromise = this.config.database.update(\n          this.className,\n          this.query,\n          this.data,\n          this.runOptions,\n          true,\n          true\n        );\n      } else {\n        // Validate for creating\n        databasePromise = this.config.database.create(\n          this.className,\n          this.data,\n          this.runOptions,\n          true\n        );\n      }\n      // In the case that there is no permission for the operation, it throws an error\n      return databasePromise.then(result => {\n        if (!result || result.length <= 0) {\n          throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Object not found.');\n        }\n      });\n    })\n    .then(() => {\n      return triggers.maybeRunTrigger(\n        triggers.Types.beforeSave,\n        this.auth,\n        updatedObject,\n        originalObject,\n        this.config,\n        this.context\n      );\n    })\n    .then(response => {\n      if (response && response.object) {\n        this.storage.fieldsChangedByTrigger = _.reduce(\n          response.object,\n          (result, value, key) => {\n            if (!_.isEqual(this.data[key], value)) {\n              result.push(key);\n            }\n            return result;\n          },\n          []\n        );\n        this.data = response.object;\n        // We should delete the objectId for an update write\n        if (this.query && this.query.objectId) {\n          delete this.data.objectId;\n        }\n      }\n    });\n};\n\nRestWrite.prototype.runBeforeLoginTrigger = async function (userData) {\n  // Avoid doing any setup for triggers if there is no 'beforeLogin' trigger\n  if (\n    !triggers.triggerExists(this.className, triggers.Types.beforeLogin, this.config.applicationId)\n  ) {\n    return;\n  }\n\n  // Cloud code gets a bit of extra data for its objects\n  const extraData = { className: this.className };\n\n  // Expand file objects\n  this.config.filesController.expandFilesInObject(this.config, userData);\n\n  const user = triggers.inflate(extraData, userData);\n\n  // no need to return a response\n  await triggers.maybeRunTrigger(\n    triggers.Types.beforeLogin,\n    this.auth,\n    user,\n    null,\n    this.config,\n    this.context\n  );\n};\n\nRestWrite.prototype.setRequiredFieldsIfNeeded = function () {\n  if (this.data) {\n    return this.validSchemaController.getAllClasses().then(allClasses => {\n      const schema = allClasses.find(oneClass => oneClass.className === this.className);\n      const setRequiredFieldIfNeeded = (fieldName, setDefault) => {\n        if (\n          this.data[fieldName] === undefined ||\n          this.data[fieldName] === null ||\n          this.data[fieldName] === '' ||\n          (typeof this.data[fieldName] === 'object' && this.data[fieldName].__op === 'Delete')\n        ) {\n          if (\n            setDefault &&\n            schema.fields[fieldName] &&\n            schema.fields[fieldName].defaultValue !== null &&\n            schema.fields[fieldName].defaultValue !== undefined &&\n            (this.data[fieldName] === undefined ||\n              (typeof this.data[fieldName] === 'object' && this.data[fieldName].__op === 'Delete'))\n          ) {\n            this.data[fieldName] = schema.fields[fieldName].defaultValue;\n            this.storage.fieldsChangedByTrigger = this.storage.fieldsChangedByTrigger || [];\n            if (this.storage.fieldsChangedByTrigger.indexOf(fieldName) < 0) {\n              this.storage.fieldsChangedByTrigger.push(fieldName);\n            }\n          } else if (schema.fields[fieldName] && schema.fields[fieldName].required === true) {\n            throw new Parse.Error(Parse.Error.VALIDATION_ERROR, `${fieldName} is required`);\n          }\n        }\n      };\n\n      // Add default fields\n      this.data.updatedAt = this.updatedAt;\n      if (!this.query) {\n        this.data.createdAt = this.updatedAt;\n\n        // Only assign new objectId if we are creating new object\n        if (!this.data.objectId) {\n          this.data.objectId = cryptoUtils.newObjectId(this.config.objectIdSize);\n        }\n        if (schema) {\n          Object.keys(schema.fields).forEach(fieldName => {\n            setRequiredFieldIfNeeded(fieldName, true);\n          });\n        }\n      } else if (schema) {\n        Object.keys(this.data).forEach(fieldName => {\n          setRequiredFieldIfNeeded(fieldName, false);\n        });\n      }\n    });\n  }\n  return Promise.resolve();\n};\n\n// Transforms auth data for a user object.\n// Does nothing if this isn't a user object.\n// Returns a promise for when we're done if it can't finish this tick.\nRestWrite.prototype.validateAuthData = function () {\n  if (this.className !== '_User') {\n    return;\n  }\n\n  if (!this.query && !this.data.authData) {\n    if (typeof this.data.username !== 'string' || _.isEmpty(this.data.username)) {\n      throw new Parse.Error(Parse.Error.USERNAME_MISSING, 'bad or missing username');\n    }\n    if (typeof this.data.password !== 'string' || _.isEmpty(this.data.password)) {\n      throw new Parse.Error(Parse.Error.PASSWORD_MISSING, 'password is required');\n    }\n  }\n\n  if (\n    (this.data.authData && !Object.keys(this.data.authData).length) ||\n    !Object.prototype.hasOwnProperty.call(this.data, 'authData')\n  ) {\n    // Handle saving authData to {} or if authData doesn't exist\n    return;\n  } else if (Object.prototype.hasOwnProperty.call(this.data, 'authData') && !this.data.authData) {\n    // Handle saving authData to null\n    throw new Parse.Error(\n      Parse.Error.UNSUPPORTED_SERVICE,\n      'This authentication method is unsupported.'\n    );\n  }\n\n  var authData = this.data.authData;\n  var providers = Object.keys(authData);\n  if (providers.length > 0) {\n    const canHandleAuthData = providers.reduce((canHandle, provider) => {\n      var providerAuthData = authData[provider];\n      var hasToken = providerAuthData && providerAuthData.id;\n      return canHandle && (hasToken || providerAuthData == null);\n    }, true);\n    if (canHandleAuthData) {\n      return this.handleAuthData(authData);\n    }\n  }\n  throw new Parse.Error(\n    Parse.Error.UNSUPPORTED_SERVICE,\n    'This authentication method is unsupported.'\n  );\n};\n\nRestWrite.prototype.handleAuthDataValidation = function (authData) {\n  const validations = Object.keys(authData).map(provider => {\n    if (authData[provider] === null) {\n      return Promise.resolve();\n    }\n    const validateAuthData = this.config.authDataManager.getValidatorForProvider(provider);\n    if (!validateAuthData) {\n      throw new Parse.Error(\n        Parse.Error.UNSUPPORTED_SERVICE,\n        'This authentication method is unsupported.'\n      );\n    }\n    return validateAuthData(authData[provider]);\n  });\n  return Promise.all(validations);\n};\n\nRestWrite.prototype.findUsersWithAuthData = function (authData) {\n  const providers = Object.keys(authData);\n  const query = providers\n    .reduce((memo, provider) => {\n      if (!authData[provider]) {\n        return memo;\n      }\n      const queryKey = `authData.${provider}.id`;\n      const query = {};\n      query[queryKey] = authData[provider].id;\n      memo.push(query);\n      return memo;\n    }, [])\n    .filter(q => {\n      return typeof q !== 'undefined';\n    });\n\n  let findPromise = Promise.resolve([]);\n  if (query.length > 0) {\n    findPromise = this.config.database.find(this.className, { $or: query }, {});\n  }\n\n  return findPromise;\n};\n\nRestWrite.prototype.filteredObjectsByACL = function (objects) {\n  if (this.auth.isMaster) {\n    return objects;\n  }\n  return objects.filter(object => {\n    if (!object.ACL) {\n      return true; // legacy users that have no ACL field on them\n    }\n    // Regular users that have been locked out.\n    return object.ACL && Object.keys(object.ACL).length > 0;\n  });\n};\n\nRestWrite.prototype.handleAuthData = function (authData) {\n  let results;\n  return this.findUsersWithAuthData(authData).then(async r => {\n    results = this.filteredObjectsByACL(r);\n\n    if (results.length == 1) {\n      this.storage['authProvider'] = Object.keys(authData).join(',');\n\n      const userResult = results[0];\n      const mutatedAuthData = {};\n      Object.keys(authData).forEach(provider => {\n        const providerData = authData[provider];\n        const userAuthData = userResult.authData[provider];\n        if (!_.isEqual(providerData, userAuthData)) {\n          mutatedAuthData[provider] = providerData;\n        }\n      });\n      const hasMutatedAuthData = Object.keys(mutatedAuthData).length !== 0;\n      let userId;\n      if (this.query && this.query.objectId) {\n        userId = this.query.objectId;\n      } else if (this.auth && this.auth.user && this.auth.user.id) {\n        userId = this.auth.user.id;\n      }\n      if (!userId || userId === userResult.objectId) {\n        // no user making the call\n        // OR the user making the call is the right one\n        // Login with auth data\n        delete results[0].password;\n\n        // need to set the objectId first otherwise location has trailing undefined\n        this.data.objectId = userResult.objectId;\n\n        if (!this.query || !this.query.objectId) {\n          // this a login call, no userId passed\n          this.response = {\n            response: userResult,\n            location: this.location(),\n          };\n          // Run beforeLogin hook before storing any updates\n          // to authData on the db; changes to userResult\n          // will be ignored.\n          await this.runBeforeLoginTrigger(deepcopy(userResult));\n        }\n\n        // If we didn't change the auth data, just keep going\n        if (!hasMutatedAuthData) {\n          return;\n        }\n        // We have authData that is updated on login\n        // that can happen when token are refreshed,\n        // We should update the token and let the user in\n        // We should only check the mutated keys\n        return this.handleAuthDataValidation(mutatedAuthData).then(async () => {\n          // IF we have a response, we'll skip the database operation / beforeSave / afterSave etc...\n          // we need to set it up there.\n          // We are supposed to have a response only on LOGIN with authData, so we skip those\n          // If we're not logging in, but just updating the current user, we can safely skip that part\n          if (this.response) {\n            // Assign the new authData in the response\n            Object.keys(mutatedAuthData).forEach(provider => {\n              this.response.response.authData[provider] = mutatedAuthData[provider];\n            });\n\n            // Run the DB update directly, as 'master'\n            // Just update the authData part\n            // Then we're good for the user, early exit of sorts\n            return this.config.database.update(\n              this.className,\n              { objectId: this.data.objectId },\n              { authData: mutatedAuthData },\n              {}\n            );\n          }\n        });\n      } else if (userId) {\n        // Trying to update auth data but users\n        // are different\n        if (userResult.objectId !== userId) {\n          throw new Parse.Error(Parse.Error.ACCOUNT_ALREADY_LINKED, 'this auth is already used');\n        }\n        // No auth data was mutated, just keep going\n        if (!hasMutatedAuthData) {\n          return;\n        }\n      }\n    }\n    return this.handleAuthDataValidation(authData).then(() => {\n      if (results.length > 1) {\n        // More than 1 user with the passed id's\n        throw new Parse.Error(Parse.Error.ACCOUNT_ALREADY_LINKED, 'this auth is already used');\n      }\n    });\n  });\n};\n\n// The non-third-party parts of User transformation\nRestWrite.prototype.transformUser = function () {\n  var promise = Promise.resolve();\n\n  if (this.className !== '_User') {\n    return promise;\n  }\n\n  if (!this.auth.isMaster && 'emailVerified' in this.data) {\n    const error = `Clients aren't allowed to manually update email verification.`;\n    throw new Parse.Error(Parse.Error.OPERATION_FORBIDDEN, error);\n  }\n\n  // Do not cleanup session if objectId is not set\n  if (this.query && this.objectId()) {\n    // If we're updating a _User object, we need to clear out the cache for that user. Find all their\n    // session tokens, and remove them from the cache.\n    promise = new RestQuery(this.config, Auth.master(this.config), '_Session', {\n      user: {\n        __type: 'Pointer',\n        className: '_User',\n        objectId: this.objectId(),\n      },\n    })\n      .execute()\n      .then(results => {\n        results.results.forEach(session =>\n          this.config.cacheController.user.del(session.sessionToken)\n        );\n      });\n  }\n\n  return promise\n    .then(() => {\n      // Transform the password\n      if (this.data.password === undefined) {\n        // ignore only if undefined. should proceed if empty ('')\n        return Promise.resolve();\n      }\n\n      if (this.query) {\n        this.storage['clearSessions'] = true;\n        // Generate a new session only if the user requested\n        if (!this.auth.isMaster) {\n          this.storage['generateNewSession'] = true;\n        }\n      }\n\n      return this._validatePasswordPolicy().then(() => {\n        return passwordCrypto.hash(this.data.password).then(hashedPassword => {\n          this.data._hashed_password = hashedPassword;\n          delete this.data.password;\n        });\n      });\n    })\n    .then(() => {\n      return this._validateUserName();\n    })\n    .then(() => {\n      return this._validateEmail();\n    });\n};\n\nRestWrite.prototype._validateUserName = function () {\n  // Check for username uniqueness\n  if (!this.data.username) {\n    if (!this.query) {\n      this.data.username = cryptoUtils.randomString(25);\n      this.responseShouldHaveUsername = true;\n    }\n    return Promise.resolve();\n  }\n  /*\n    Usernames should be unique when compared case insensitively\n\n    Users should be able to make case sensitive usernames and\n    login using the case they entered.  I.e. 'Snoopy' should preclude\n    'snoopy' as a valid username.\n  */\n  return this.config.database\n    .find(\n      this.className,\n      {\n        username: this.data.username,\n        objectId: { $ne: this.objectId() },\n      },\n      { limit: 1, caseInsensitive: true },\n      {},\n      this.validSchemaController\n    )\n    .then(results => {\n      if (results.length > 0) {\n        throw new Parse.Error(\n          Parse.Error.USERNAME_TAKEN,\n          'Account already exists for this username.'\n        );\n      }\n      return;\n    });\n};\n\n/*\n  As with usernames, Parse should not allow case insensitive collisions of email.\n  unlike with usernames (which can have case insensitive collisions in the case of\n  auth adapters), emails should never have a case insensitive collision.\n\n  This behavior can be enforced through a properly configured index see:\n  https://docs.mongodb.com/manual/core/index-case-insensitive/#create-a-case-insensitive-index\n  which could be implemented instead of this code based validation.\n\n  Given that this lookup should be a relatively low use case and that the case sensitive\n  unique index will be used by the db for the query, this is an adequate solution.\n*/\nRestWrite.prototype._validateEmail = function () {\n  if (!this.data.email || this.data.email.__op === 'Delete') {\n    return Promise.resolve();\n  }\n  // Validate basic email address format\n  if (!this.data.email.match(/^.+@.+$/)) {\n    return Promise.reject(\n      new Parse.Error(Parse.Error.INVALID_EMAIL_ADDRESS, 'Email address format is invalid.')\n    );\n  }\n  // Case insensitive match, see note above function.\n  return this.config.database\n    .find(\n      this.className,\n      {\n        email: this.data.email,\n        objectId: { $ne: this.objectId() },\n      },\n      { limit: 1, caseInsensitive: true },\n      {},\n      this.validSchemaController\n    )\n    .then(results => {\n      if (results.length > 0) {\n        throw new Parse.Error(\n          Parse.Error.EMAIL_TAKEN,\n          'Account already exists for this email address.'\n        );\n      }\n      if (\n        !this.data.authData ||\n        !Object.keys(this.data.authData).length ||\n        (Object.keys(this.data.authData).length === 1 &&\n          Object.keys(this.data.authData)[0] === 'anonymous')\n      ) {\n        // We updated the email, send a new validation\n        this.storage['sendVerificationEmail'] = true;\n        this.config.userController.setEmailVerifyToken(this.data);\n      }\n    });\n};\n\nRestWrite.prototype._validatePasswordPolicy = function () {\n  if (!this.config.passwordPolicy) return Promise.resolve();\n  return this._validatePasswordRequirements().then(() => {\n    return this._validatePasswordHistory();\n  });\n};\n\nRestWrite.prototype._validatePasswordRequirements = function () {\n  // check if the password conforms to the defined password policy if configured\n  // If we specified a custom error in our configuration use it.\n  // Example: \"Passwords must include a Capital Letter, Lowercase Letter, and a number.\"\n  //\n  // This is especially useful on the generic \"password reset\" page,\n  // as it allows the programmer to communicate specific requirements instead of:\n  // a. making the user guess whats wrong\n  // b. making a custom password reset page that shows the requirements\n  const policyError = this.config.passwordPolicy.validationError\n    ? this.config.passwordPolicy.validationError\n    : 'Password does not meet the Password Policy requirements.';\n  const containsUsernameError = 'Password cannot contain your username.';\n\n  // check whether the password meets the password strength requirements\n  if (\n    (this.config.passwordPolicy.patternValidator &&\n      !this.config.passwordPolicy.patternValidator(this.data.password)) ||\n    (this.config.passwordPolicy.validatorCallback &&\n      !this.config.passwordPolicy.validatorCallback(this.data.password))\n  ) {\n    return Promise.reject(new Parse.Error(Parse.Error.VALIDATION_ERROR, policyError));\n  }\n\n  // check whether password contain username\n  if (this.config.passwordPolicy.doNotAllowUsername === true) {\n    if (this.data.username) {\n      // username is not passed during password reset\n      if (this.data.password.indexOf(this.data.username) >= 0)\n        return Promise.reject(new Parse.Error(Parse.Error.VALIDATION_ERROR, containsUsernameError));\n    } else {\n      // retrieve the User object using objectId during password reset\n      return this.config.database.find('_User', { objectId: this.objectId() }).then(results => {\n        if (results.length != 1) {\n          throw undefined;\n        }\n        if (this.data.password.indexOf(results[0].username) >= 0)\n          return Promise.reject(\n            new Parse.Error(Parse.Error.VALIDATION_ERROR, containsUsernameError)\n          );\n        return Promise.resolve();\n      });\n    }\n  }\n  return Promise.resolve();\n};\n\nRestWrite.prototype._validatePasswordHistory = function () {\n  // check whether password is repeating from specified history\n  if (this.query && this.config.passwordPolicy.maxPasswordHistory) {\n    return this.config.database\n      .find(\n        '_User',\n        { objectId: this.objectId() },\n        { keys: ['_password_history', '_hashed_password'] }\n      )\n      .then(results => {\n        if (results.length != 1) {\n          throw undefined;\n        }\n        const user = results[0];\n        let oldPasswords = [];\n        if (user._password_history)\n          oldPasswords = _.take(\n            user._password_history,\n            this.config.passwordPolicy.maxPasswordHistory - 1\n          );\n        oldPasswords.push(user.password);\n        const newPassword = this.data.password;\n        // compare the new password hash with all old password hashes\n        const promises = oldPasswords.map(function (hash) {\n          return passwordCrypto.compare(newPassword, hash).then(result => {\n            if (result)\n              // reject if there is a match\n              return Promise.reject('REPEAT_PASSWORD');\n            return Promise.resolve();\n          });\n        });\n        // wait for all comparisons to complete\n        return Promise.all(promises)\n          .then(() => {\n            return Promise.resolve();\n          })\n          .catch(err => {\n            if (err === 'REPEAT_PASSWORD')\n              // a match was found\n              return Promise.reject(\n                new Parse.Error(\n                  Parse.Error.VALIDATION_ERROR,\n                  `New password should not be the same as last ${this.config.passwordPolicy.maxPasswordHistory} passwords.`\n                )\n              );\n            throw err;\n          });\n      });\n  }\n  return Promise.resolve();\n};\n\nRestWrite.prototype.createSessionTokenIfNeeded = function () {\n  if (this.className !== '_User') {\n    return;\n  }\n  // Don't generate session for updating user (this.query is set) unless authData exists\n  if (this.query && !this.data.authData) {\n    return;\n  }\n  // Don't generate new sessionToken if linking via sessionToken\n  if (this.auth.user && this.data.authData) {\n    return;\n  }\n  if (\n    !this.storage['authProvider'] && // signup call, with\n    this.config.preventLoginWithUnverifiedEmail && // no login without verification\n    this.config.verifyUserEmails\n  ) {\n    // verification is on\n    return; // do not create the session token in that case!\n  }\n  return this.createSessionToken();\n};\n\nRestWrite.prototype.createSessionToken = async function () {\n  // cloud installationId from Cloud Code,\n  // never create session tokens from there.\n  if (this.auth.installationId && this.auth.installationId === 'cloud') {\n    return;\n  }\n\n  const { sessionData, createSession } = Auth.createSession(this.config, {\n    userId: this.objectId(),\n    createdWith: {\n      action: this.storage['authProvider'] ? 'login' : 'signup',\n      authProvider: this.storage['authProvider'] || 'password',\n    },\n    installationId: this.auth.installationId,\n  });\n\n  if (this.response && this.response.response) {\n    this.response.response.sessionToken = sessionData.sessionToken;\n  }\n\n  return createSession();\n};\n\n// Delete email reset tokens if user is changing password or email.\nRestWrite.prototype.deleteEmailResetTokenIfNeeded = function () {\n  if (this.className !== '_User' || this.query === null) {\n    // null query means create\n    return;\n  }\n\n  if ('password' in this.data || 'email' in this.data) {\n    const addOps = {\n      _perishable_token: { __op: 'Delete' },\n      _perishable_token_expires_at: { __op: 'Delete' },\n    };\n    this.data = Object.assign(this.data, addOps);\n  }\n};\n\nRestWrite.prototype.destroyDuplicatedSessions = function () {\n  // Only for _Session, and at creation time\n  if (this.className != '_Session' || this.query) {\n    return;\n  }\n  // Destroy the sessions in 'Background'\n  const { user, installationId, sessionToken } = this.data;\n  if (!user || !installationId) {\n    return;\n  }\n  if (!user.objectId) {\n    return;\n  }\n  this.config.database.destroy(\n    '_Session',\n    {\n      user,\n      installationId,\n      sessionToken: { $ne: sessionToken },\n    },\n    {},\n    this.validSchemaController\n  );\n};\n\n// Handles any followup logic\nRestWrite.prototype.handleFollowup = function () {\n  if (this.storage && this.storage['clearSessions'] && this.config.revokeSessionOnPasswordReset) {\n    var sessionQuery = {\n      user: {\n        __type: 'Pointer',\n        className: '_User',\n        objectId: this.objectId(),\n      },\n    };\n    delete this.storage['clearSessions'];\n    return this.config.database\n      .destroy('_Session', sessionQuery)\n      .then(this.handleFollowup.bind(this));\n  }\n\n  if (this.storage && this.storage['generateNewSession']) {\n    delete this.storage['generateNewSession'];\n    return this.createSessionToken().then(this.handleFollowup.bind(this));\n  }\n\n  if (this.storage && this.storage['sendVerificationEmail']) {\n    delete this.storage['sendVerificationEmail'];\n    // Fire and forget!\n    this.config.userController.sendVerificationEmail(this.data);\n    return this.handleFollowup.bind(this);\n  }\n};\n\n// Handles the _Session class specialness.\n// Does nothing if this isn't an _Session object.\nRestWrite.prototype.handleSession = function () {\n  if (this.response || this.className !== '_Session') {\n    return;\n  }\n\n  if (!this.auth.user && !this.auth.isMaster) {\n    throw new Parse.Error(Parse.Error.INVALID_SESSION_TOKEN, 'Session token required.');\n  }\n\n  // TODO: Verify proper error to throw\n  if (this.data.ACL) {\n    throw new Parse.Error(Parse.Error.INVALID_KEY_NAME, 'Cannot set ' + 'ACL on a Session.');\n  }\n\n  if (this.query) {\n    if (this.data.user && !this.auth.isMaster && this.data.user.objectId != this.auth.user.id) {\n      throw new Parse.Error(Parse.Error.INVALID_KEY_NAME);\n    } else if (this.data.installationId) {\n      throw new Parse.Error(Parse.Error.INVALID_KEY_NAME);\n    } else if (this.data.sessionToken) {\n      throw new Parse.Error(Parse.Error.INVALID_KEY_NAME);\n    }\n  }\n\n  if (!this.query && !this.auth.isMaster) {\n    const additionalSessionData = {};\n    for (var key in this.data) {\n      if (key === 'objectId' || key === 'user') {\n        continue;\n      }\n      additionalSessionData[key] = this.data[key];\n    }\n\n    const { sessionData, createSession } = Auth.createSession(this.config, {\n      userId: this.auth.user.id,\n      createdWith: {\n        action: 'create',\n      },\n      additionalSessionData,\n    });\n\n    return createSession().then(results => {\n      if (!results.response) {\n        throw new Parse.Error(Parse.Error.INTERNAL_SERVER_ERROR, 'Error creating session.');\n      }\n      sessionData['objectId'] = results.response['objectId'];\n      this.response = {\n        status: 201,\n        location: results.location,\n        response: sessionData,\n      };\n    });\n  }\n};\n\n// Handles the _Installation class specialness.\n// Does nothing if this isn't an installation object.\n// If an installation is found, this can mutate this.query and turn a create\n// into an update.\n// Returns a promise for when we're done if it can't finish this tick.\nRestWrite.prototype.handleInstallation = function () {\n  if (this.response || this.className !== '_Installation') {\n    return;\n  }\n\n  if (\n    !this.query &&\n    !this.data.deviceToken &&\n    !this.data.installationId &&\n    !this.auth.installationId\n  ) {\n    throw new Parse.Error(\n      135,\n      'at least one ID field (deviceToken, installationId) ' + 'must be specified in this operation'\n    );\n  }\n\n  // If the device token is 64 characters long, we assume it is for iOS\n  // and lowercase it.\n  if (this.data.deviceToken && this.data.deviceToken.length == 64) {\n    this.data.deviceToken = this.data.deviceToken.toLowerCase();\n  }\n\n  // We lowercase the installationId if present\n  if (this.data.installationId) {\n    this.data.installationId = this.data.installationId.toLowerCase();\n  }\n\n  let installationId = this.data.installationId;\n\n  // If data.installationId is not set and we're not master, we can lookup in auth\n  if (!installationId && !this.auth.isMaster) {\n    installationId = this.auth.installationId;\n  }\n\n  if (installationId) {\n    installationId = installationId.toLowerCase();\n  }\n\n  // Updating _Installation but not updating anything critical\n  if (this.query && !this.data.deviceToken && !installationId && !this.data.deviceType) {\n    return;\n  }\n\n  var promise = Promise.resolve();\n\n  var idMatch; // Will be a match on either objectId or installationId\n  var objectIdMatch;\n  var installationIdMatch;\n  var deviceTokenMatches = [];\n\n  // Instead of issuing 3 reads, let's do it with one OR.\n  const orQueries = [];\n  if (this.query && this.query.objectId) {\n    orQueries.push({\n      objectId: this.query.objectId,\n    });\n  }\n  if (installationId) {\n    orQueries.push({\n      installationId: installationId,\n    });\n  }\n  if (this.data.deviceToken) {\n    orQueries.push({ deviceToken: this.data.deviceToken });\n  }\n\n  if (orQueries.length == 0) {\n    return;\n  }\n\n  promise = promise\n    .then(() => {\n      return this.config.database.find(\n        '_Installation',\n        {\n          $or: orQueries,\n        },\n        {}\n      );\n    })\n    .then(results => {\n      results.forEach(result => {\n        if (this.query && this.query.objectId && result.objectId == this.query.objectId) {\n          objectIdMatch = result;\n        }\n        if (result.installationId == installationId) {\n          installationIdMatch = result;\n        }\n        if (result.deviceToken == this.data.deviceToken) {\n          deviceTokenMatches.push(result);\n        }\n      });\n\n      // Sanity checks when running a query\n      if (this.query && this.query.objectId) {\n        if (!objectIdMatch) {\n          throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Object not found for update.');\n        }\n        if (\n          this.data.installationId &&\n          objectIdMatch.installationId &&\n          this.data.installationId !== objectIdMatch.installationId\n        ) {\n          throw new Parse.Error(136, 'installationId may not be changed in this ' + 'operation');\n        }\n        if (\n          this.data.deviceToken &&\n          objectIdMatch.deviceToken &&\n          this.data.deviceToken !== objectIdMatch.deviceToken &&\n          !this.data.installationId &&\n          !objectIdMatch.installationId\n        ) {\n          throw new Parse.Error(136, 'deviceToken may not be changed in this ' + 'operation');\n        }\n        if (\n          this.data.deviceType &&\n          this.data.deviceType &&\n          this.data.deviceType !== objectIdMatch.deviceType\n        ) {\n          throw new Parse.Error(136, 'deviceType may not be changed in this ' + 'operation');\n        }\n      }\n\n      if (this.query && this.query.objectId && objectIdMatch) {\n        idMatch = objectIdMatch;\n      }\n\n      if (installationId && installationIdMatch) {\n        idMatch = installationIdMatch;\n      }\n      // need to specify deviceType only if it's new\n      if (!this.query && !this.data.deviceType && !idMatch) {\n        throw new Parse.Error(135, 'deviceType must be specified in this operation');\n      }\n    })\n    .then(() => {\n      if (!idMatch) {\n        if (!deviceTokenMatches.length) {\n          return;\n        } else if (\n          deviceTokenMatches.length == 1 &&\n          (!deviceTokenMatches[0]['installationId'] || !installationId)\n        ) {\n          // Single match on device token but none on installationId, and either\n          // the passed object or the match is missing an installationId, so we\n          // can just return the match.\n          return deviceTokenMatches[0]['objectId'];\n        } else if (!this.data.installationId) {\n          throw new Parse.Error(\n            132,\n            'Must specify installationId when deviceToken ' +\n              'matches multiple Installation objects'\n          );\n        } else {\n          // Multiple device token matches and we specified an installation ID,\n          // or a single match where both the passed and matching objects have\n          // an installation ID. Try cleaning out old installations that match\n          // the deviceToken, and return nil to signal that a new object should\n          // be created.\n          var delQuery = {\n            deviceToken: this.data.deviceToken,\n            installationId: {\n              $ne: installationId,\n            },\n          };\n          if (this.data.appIdentifier) {\n            delQuery['appIdentifier'] = this.data.appIdentifier;\n          }\n          this.config.database.destroy('_Installation', delQuery).catch(err => {\n            if (err.code == Parse.Error.OBJECT_NOT_FOUND) {\n              // no deletions were made. Can be ignored.\n              return;\n            }\n            // rethrow the error\n            throw err;\n          });\n          return;\n        }\n      } else {\n        if (deviceTokenMatches.length == 1 && !deviceTokenMatches[0]['installationId']) {\n          // Exactly one device token match and it doesn't have an installation\n          // ID. This is the one case where we want to merge with the existing\n          // object.\n          const delQuery = { objectId: idMatch.objectId };\n          return this.config.database\n            .destroy('_Installation', delQuery)\n            .then(() => {\n              return deviceTokenMatches[0]['objectId'];\n            })\n            .catch(err => {\n              if (err.code == Parse.Error.OBJECT_NOT_FOUND) {\n                // no deletions were made. Can be ignored\n                return;\n              }\n              // rethrow the error\n              throw err;\n            });\n        } else {\n          if (this.data.deviceToken && idMatch.deviceToken != this.data.deviceToken) {\n            // We're setting the device token on an existing installation, so\n            // we should try cleaning out old installations that match this\n            // device token.\n            const delQuery = {\n              deviceToken: this.data.deviceToken,\n            };\n            // We have a unique install Id, use that to preserve\n            // the interesting installation\n            if (this.data.installationId) {\n              delQuery['installationId'] = {\n                $ne: this.data.installationId,\n              };\n            } else if (\n              idMatch.objectId &&\n              this.data.objectId &&\n              idMatch.objectId == this.data.objectId\n            ) {\n              // we passed an objectId, preserve that instalation\n              delQuery['objectId'] = {\n                $ne: idMatch.objectId,\n              };\n            } else {\n              // What to do here? can't really clean up everything...\n              return idMatch.objectId;\n            }\n            if (this.data.appIdentifier) {\n              delQuery['appIdentifier'] = this.data.appIdentifier;\n            }\n            this.config.database.destroy('_Installation', delQuery).catch(err => {\n              if (err.code == Parse.Error.OBJECT_NOT_FOUND) {\n                // no deletions were made. Can be ignored.\n                return;\n              }\n              // rethrow the error\n              throw err;\n            });\n          }\n          // In non-merge scenarios, just return the installation match id\n          return idMatch.objectId;\n        }\n      }\n    })\n    .then(objId => {\n      if (objId) {\n        this.query = { objectId: objId };\n        delete this.data.objectId;\n        delete this.data.createdAt;\n      }\n      // TODO: Validate ops (add/remove on channels, $inc on badge, etc.)\n    });\n  return promise;\n};\n\n// If we short-circuted the object response - then we need to make sure we expand all the files,\n// since this might not have a query, meaning it won't return the full result back.\n// TODO: (nlutsenko) This should die when we move to per-class based controllers on _Session/_User\nRestWrite.prototype.expandFilesForExistingObjects = function () {\n  // Check whether we have a short-circuited response - only then run expansion.\n  if (this.response && this.response.response) {\n    this.config.filesController.expandFilesInObject(this.config, this.response.response);\n  }\n};\n\nRestWrite.prototype.runDatabaseOperation = function () {\n  if (this.response) {\n    return;\n  }\n\n  if (this.className === '_Role') {\n    this.config.cacheController.role.clear();\n  }\n\n  if (this.className === '_User' && this.query && this.auth.isUnauthenticated()) {\n    throw new Parse.Error(\n      Parse.Error.SESSION_MISSING,\n      `Cannot modify user ${this.query.objectId}.`\n    );\n  }\n\n  if (this.className === '_Product' && this.data.download) {\n    this.data.downloadName = this.data.download.name;\n  }\n\n  // TODO: Add better detection for ACL, ensuring a user can't be locked from\n  //       their own user record.\n  if (this.data.ACL && this.data.ACL['*unresolved']) {\n    throw new Parse.Error(Parse.Error.INVALID_ACL, 'Invalid ACL.');\n  }\n\n  if (this.query) {\n    // Force the user to not lockout\n    // Matched with parse.com\n    if (this.className === '_User' && this.data.ACL && this.auth.isMaster !== true) {\n      this.data.ACL[this.query.objectId] = { read: true, write: true };\n    }\n    // update password timestamp if user password is being changed\n    if (\n      this.className === '_User' &&\n      this.data._hashed_password &&\n      this.config.passwordPolicy &&\n      this.config.passwordPolicy.maxPasswordAge\n    ) {\n      this.data._password_changed_at = Parse._encode(new Date());\n    }\n    // Ignore createdAt when update\n    delete this.data.createdAt;\n\n    let defer = Promise.resolve();\n    // if password history is enabled then save the current password to history\n    if (\n      this.className === '_User' &&\n      this.data._hashed_password &&\n      this.config.passwordPolicy &&\n      this.config.passwordPolicy.maxPasswordHistory\n    ) {\n      defer = this.config.database\n        .find(\n          '_User',\n          { objectId: this.objectId() },\n          { keys: ['_password_history', '_hashed_password'] }\n        )\n        .then(results => {\n          if (results.length != 1) {\n            throw undefined;\n          }\n          const user = results[0];\n          let oldPasswords = [];\n          if (user._password_history) {\n            oldPasswords = _.take(\n              user._password_history,\n              this.config.passwordPolicy.maxPasswordHistory\n            );\n          }\n          //n-1 passwords go into history including last password\n          while (\n            oldPasswords.length > Math.max(0, this.config.passwordPolicy.maxPasswordHistory - 2)\n          ) {\n            oldPasswords.shift();\n          }\n          oldPasswords.push(user.password);\n          this.data._password_history = oldPasswords;\n        });\n    }\n\n    return defer.then(() => {\n      // Run an update\n      return this.config.database\n        .update(\n          this.className,\n          this.query,\n          this.data,\n          this.runOptions,\n          false,\n          false,\n          this.validSchemaController\n        )\n        .then(response => {\n          response.updatedAt = this.updatedAt;\n          this._updateResponseWithData(response, this.data);\n          this.response = { response };\n        });\n    });\n  } else {\n    // Set the default ACL and password timestamp for the new _User\n    if (this.className === '_User') {\n      var ACL = this.data.ACL;\n      // default public r/w ACL\n      if (!ACL) {\n        ACL = {};\n        ACL['*'] = { read: true, write: false };\n      }\n      // make sure the user is not locked down\n      ACL[this.data.objectId] = { read: true, write: true };\n      this.data.ACL = ACL;\n      // password timestamp to be used when password expiry policy is enforced\n      if (this.config.passwordPolicy && this.config.passwordPolicy.maxPasswordAge) {\n        this.data._password_changed_at = Parse._encode(new Date());\n      }\n    }\n\n    // Run a create\n    return this.config.database\n      .create(this.className, this.data, this.runOptions, false, this.validSchemaController)\n      .catch(error => {\n        if (this.className !== '_User' || error.code !== Parse.Error.DUPLICATE_VALUE) {\n          throw error;\n        }\n\n        // Quick check, if we were able to infer the duplicated field name\n        if (error && error.userInfo && error.userInfo.duplicated_field === 'username') {\n          throw new Parse.Error(\n            Parse.Error.USERNAME_TAKEN,\n            'Account already exists for this username.'\n          );\n        }\n\n        if (error && error.userInfo && error.userInfo.duplicated_field === 'email') {\n          throw new Parse.Error(\n            Parse.Error.EMAIL_TAKEN,\n            'Account already exists for this email address.'\n          );\n        }\n\n        // If this was a failed user creation due to username or email already taken, we need to\n        // check whether it was username or email and return the appropriate error.\n        // Fallback to the original method\n        // TODO: See if we can later do this without additional queries by using named indexes.\n        return this.config.database\n          .find(\n            this.className,\n            {\n              username: this.data.username,\n              objectId: { $ne: this.objectId() },\n            },\n            { limit: 1 }\n          )\n          .then(results => {\n            if (results.length > 0) {\n              throw new Parse.Error(\n                Parse.Error.USERNAME_TAKEN,\n                'Account already exists for this username.'\n              );\n            }\n            return this.config.database.find(\n              this.className,\n              { email: this.data.email, objectId: { $ne: this.objectId() } },\n              { limit: 1 }\n            );\n          })\n          .then(results => {\n            if (results.length > 0) {\n              throw new Parse.Error(\n                Parse.Error.EMAIL_TAKEN,\n                'Account already exists for this email address.'\n              );\n            }\n            throw new Parse.Error(\n              Parse.Error.DUPLICATE_VALUE,\n              'A duplicate value for a field with unique values was provided'\n            );\n          });\n      })\n      .then(response => {\n        response.objectId = this.data.objectId;\n        response.createdAt = this.data.createdAt;\n\n        if (this.responseShouldHaveUsername) {\n          response.username = this.data.username;\n        }\n        this._updateResponseWithData(response, this.data);\n        this.response = {\n          status: 201,\n          response,\n          location: this.location(),\n        };\n      });\n  }\n};\n\n// Returns nothing - doesn't wait for the trigger.\nRestWrite.prototype.runAfterSaveTrigger = function () {\n  if (!this.response || !this.response.response) {\n    return;\n  }\n\n  // Avoid doing any setup for triggers if there is no 'afterSave' trigger for this class.\n  const hasAfterSaveHook = triggers.triggerExists(\n    this.className,\n    triggers.Types.afterSave,\n    this.config.applicationId\n  );\n  const hasLiveQuery = this.config.liveQueryController.hasLiveQuery(this.className);\n  if (!hasAfterSaveHook && !hasLiveQuery) {\n    return Promise.resolve();\n  }\n\n  var extraData = { className: this.className };\n  if (this.query && this.query.objectId) {\n    extraData.objectId = this.query.objectId;\n  }\n\n  // Build the original object, we only do this for a update write.\n  let originalObject;\n  if (this.query && this.query.objectId) {\n    originalObject = triggers.inflate(extraData, this.originalData);\n  }\n\n  // Build the inflated object, different from beforeSave, originalData is not empty\n  // since developers can change data in the beforeSave.\n  const updatedObject = this.buildUpdatedObject(extraData);\n  updatedObject._handleSaveResponse(this.response.response, this.response.status || 200);\n\n  this.config.database.loadSchema().then(schemaController => {\n    // Notifiy LiveQueryServer if possible\n    const perms = schemaController.getClassLevelPermissions(updatedObject.className);\n    this.config.liveQueryController.onAfterSave(\n      updatedObject.className,\n      updatedObject,\n      originalObject,\n      perms\n    );\n  });\n\n  // Run afterSave trigger\n  return triggers\n    .maybeRunTrigger(\n      triggers.Types.afterSave,\n      this.auth,\n      updatedObject,\n      originalObject,\n      this.config,\n      this.context\n    )\n    .then(result => {\n      if (result && typeof result === 'object') {\n        this.response.response = result;\n      }\n    })\n    .catch(function (err) {\n      logger.warn('afterSave caught an error', err);\n    });\n};\n\n// A helper to figure out what location this operation happens at.\nRestWrite.prototype.location = function () {\n  var middle = this.className === '_User' ? '/users/' : '/classes/' + this.className + '/';\n  const mount = this.config.mount || this.config.serverURL;\n  return mount + middle + this.data.objectId;\n};\n\n// A helper to get the object id for this operation.\n// Because it could be either on the query or on the data\nRestWrite.prototype.objectId = function () {\n  return this.data.objectId || this.query.objectId;\n};\n\n// Returns a copy of the data and delete bad keys (_auth_data, _hashed_password...)\nRestWrite.prototype.sanitizedData = function () {\n  const data = Object.keys(this.data).reduce((data, key) => {\n    // Regexp comes from Parse.Object.prototype.validate\n    if (!/^[A-Za-z][0-9A-Za-z_]*$/.test(key)) {\n      delete data[key];\n    }\n    return data;\n  }, deepcopy(this.data));\n  return Parse._decode(undefined, data);\n};\n\n// Returns an updated copy of the object\nRestWrite.prototype.buildUpdatedObject = function (extraData) {\n  const updatedObject = triggers.inflate(extraData, this.originalData);\n  Object.keys(this.data).reduce(function (data, key) {\n    if (key.indexOf('.') > 0) {\n      if (typeof data[key].__op === 'string') {\n        updatedObject.set(key, data[key]);\n      } else {\n        // subdocument key with dot notation { 'x.y': v } => { 'x': { 'y' : v } })\n        const splittedKey = key.split('.');\n        const parentProp = splittedKey[0];\n        let parentVal = updatedObject.get(parentProp);\n        if (typeof parentVal !== 'object') {\n          parentVal = {};\n        }\n        parentVal[splittedKey[1]] = data[key];\n        updatedObject.set(parentProp, parentVal);\n      }\n      delete data[key];\n    }\n    return data;\n  }, deepcopy(this.data));\n\n  updatedObject.set(this.sanitizedData());\n  return updatedObject;\n};\n\nRestWrite.prototype.cleanUserAuthData = function () {\n  if (this.response && this.response.response && this.className === '_User') {\n    const user = this.response.response;\n    if (user.authData) {\n      Object.keys(user.authData).forEach(provider => {\n        if (user.authData[provider] === null) {\n          delete user.authData[provider];\n        }\n      });\n      if (Object.keys(user.authData).length == 0) {\n        delete user.authData;\n      }\n    }\n  }\n};\n\nRestWrite.prototype._updateResponseWithData = function (response, data) {\n  if (_.isEmpty(this.storage.fieldsChangedByTrigger)) {\n    return response;\n  }\n  const clientSupportsDelete = ClientSDK.supportsForwardDelete(this.clientSDK);\n  this.storage.fieldsChangedByTrigger.forEach(fieldName => {\n    const dataValue = data[fieldName];\n\n    if (!Object.prototype.hasOwnProperty.call(response, fieldName)) {\n      response[fieldName] = dataValue;\n    }\n\n    // Strips operations from responses\n    if (response[fieldName] && response[fieldName].__op) {\n      delete response[fieldName];\n      if (clientSupportsDelete && dataValue.__op == 'Delete') {\n        response[fieldName] = dataValue;\n      }\n    }\n  });\n  return response;\n};\n\nexport default RestWrite;\nmodule.exports = RestWrite;\n"],"file":"RestWrite.js"}