{"version":3,"sources":["../../../src/cli/utils/commander.js"],"names":["_definitions","_reverseDefinitions","_defaults","Command","prototype","loadDefinitions","definitions","Object","keys","reduce","program","opt","additionalOptions","required","option","help","action","object","key","value","env","defs","default","on","console","log","forEach","parseEnvironment","options","originalKey","parseConfigFile","args","length","jsonPath","path","resolve","jsonConfig","require","apps","setValuesIfNeeded","hasOwnProperty","call","_parse","parse","envOptions","fromFile","getOptions"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport { Command } from 'commander';\nimport path from 'path';\nlet _definitions;\nlet _reverseDefinitions;\nlet _defaults;\n\nCommand.prototype.loadDefinitions = function (definitions) {\n  _definitions = definitions;\n\n  Object.keys(definitions).reduce((program, opt) => {\n    if (typeof definitions[opt] == 'object') {\n      const additionalOptions = definitions[opt];\n      if (additionalOptions.required === true) {\n        return program.option(\n          `--${opt} <${opt}>`,\n          additionalOptions.help,\n          additionalOptions.action\n        );\n      } else {\n        return program.option(\n          `--${opt} [${opt}]`,\n          additionalOptions.help,\n          additionalOptions.action\n        );\n      }\n    }\n    return program.option(`--${opt} [${opt}]`);\n  }, this);\n\n  _reverseDefinitions = Object.keys(definitions).reduce((object, key) => {\n    let value = definitions[key];\n    if (typeof value == 'object') {\n      value = value.env;\n    }\n    if (value) {\n      object[value] = key;\n    }\n    return object;\n  }, {});\n\n  _defaults = Object.keys(definitions).reduce((defs, opt) => {\n    if (_definitions[opt].default) {\n      defs[opt] = _definitions[opt].default;\n    }\n    return defs;\n  }, {});\n\n  /* istanbul ignore next */\n  this.on('--help', function () {\n    console.log('  Configure From Environment:');\n    console.log('');\n    Object.keys(_reverseDefinitions).forEach(key => {\n      console.log(`    $ ${key}='${_reverseDefinitions[key]}'`);\n    });\n    console.log('');\n  });\n};\n\nfunction parseEnvironment(env = {}) {\n  return Object.keys(_reverseDefinitions).reduce((options, key) => {\n    if (env[key]) {\n      const originalKey = _reverseDefinitions[key];\n      let action = option => option;\n      if (typeof _definitions[originalKey] === 'object') {\n        action = _definitions[originalKey].action || action;\n      }\n      options[_reverseDefinitions[key]] = action(env[key]);\n    }\n    return options;\n  }, {});\n}\n\nfunction parseConfigFile(program) {\n  let options = {};\n  if (program.args.length > 0) {\n    let jsonPath = program.args[0];\n    jsonPath = path.resolve(jsonPath);\n    const jsonConfig = require(jsonPath);\n    if (jsonConfig.apps) {\n      if (jsonConfig.apps.length > 1) {\n        throw 'Multiple apps are not supported';\n      }\n      options = jsonConfig.apps[0];\n    } else {\n      options = jsonConfig;\n    }\n    Object.keys(options).forEach(key => {\n      const value = options[key];\n      if (!_definitions[key]) {\n        throw `error: unknown option ${key}`;\n      }\n      const action = _definitions[key].action;\n      if (action) {\n        options[key] = action(value);\n      }\n    });\n    console.log(`Configuration loaded from ${jsonPath}`);\n  }\n  return options;\n}\n\nCommand.prototype.setValuesIfNeeded = function (options) {\n  Object.keys(options).forEach(key => {\n    if (!Object.prototype.hasOwnProperty.call(this, key)) {\n      this[key] = options[key];\n    }\n  });\n};\n\nCommand.prototype._parse = Command.prototype.parse;\n\nCommand.prototype.parse = function (args, env) {\n  this._parse(args);\n  // Parse the environment first\n  const envOptions = parseEnvironment(env);\n  const fromFile = parseConfigFile(this);\n  // Load the env if not passed from command line\n  this.setValuesIfNeeded(envOptions);\n  // Load from file to override\n  this.setValuesIfNeeded(fromFile);\n  // Last set the defaults\n  this.setValuesIfNeeded(_defaults);\n};\n\nCommand.prototype.getOptions = function () {\n  return Object.keys(_definitions).reduce((options, key) => {\n    if (typeof this[key] !== 'undefined') {\n      options[key] = this[key];\n    }\n    return options;\n  }, {});\n};\n\nexport default new Command();\n/* eslint-enable no-console */\n"],"file":"commander.js"}