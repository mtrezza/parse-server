{"version":3,"sources":["../../../src/cli/utils/runner.js"],"names":["logStartupOptions","options","key","value","verbose","JSON","stringify","e","constructor","name","console","log","definitions","help","usage","start","program","loadDefinitions","on","parse","process","argv","env","getOptions"],"mappings":";;;;;;;AAAA;;;;AAEA,SAASA,iBAAT,CAA2BC,OAA3B,EAAoC;AAClC,OAAK,MAAMC,GAAX,IAAkBD,OAAlB,EAA2B;AACzB,QAAIE,KAAK,GAAGF,OAAO,CAACC,GAAD,CAAnB;;AACA,QAAIA,GAAG,IAAI,WAAX,EAAwB;AACtBC,MAAAA,KAAK,GAAG,gBAAR;AACD;;AACD,QAAID,GAAG,IAAI,MAAP,IAAiBD,OAAO,CAACG,OAAR,IAAmB,IAAxC,EAA8C;AAC5CD,MAAAA,KAAK,GAAG,gBAAR;AACD;;AACD,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAI;AACFA,QAAAA,KAAK,GAAGE,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAR;AACD,OAFD,CAEE,OAAOI,CAAP,EAAU;AACV,YAAIJ,KAAK,IAAIA,KAAK,CAACK,WAAf,IAA8BL,KAAK,CAACK,WAAN,CAAkBC,IAApD,EAA0D;AACxDN,UAAAA,KAAK,GAAGA,KAAK,CAACK,WAAN,CAAkBC,IAA1B;AACD;AACF;AACF;AACD;;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAET,GAAI,KAAIC,KAAM,EAA7B;AACA;AACD;AACF;;AAEc,kBAAU;AAAES,EAAAA,WAAF;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA,KAArB;AAA4BC,EAAAA;AAA5B,CAAV,EAA+C;AAC5DC,qBAAQC,eAAR,CAAwBL,WAAxB;;AACA,MAAIE,KAAJ,EAAW;AACTE,uBAAQF,KAAR,CAAcA,KAAd;AACD;;AACD,MAAID,IAAJ,EAAU;AACRG,uBAAQE,EAAR,CAAW,QAAX,EAAqBL,IAArB;AACD;;AACDG,qBAAQG,KAAR,CAAcC,OAAO,CAACC,IAAtB,EAA4BD,OAAO,CAACE,GAApC;;AAEA,QAAMrB,OAAO,GAAGe,mBAAQO,UAAR,EAAhB;;AACAR,EAAAA,KAAK,CAACC,kBAAD,EAAUf,OAAV,EAAmB,YAAY;AAClCD,IAAAA,iBAAiB,CAACC,OAAD,CAAjB;AACD,GAFI,CAAL;AAGD","sourcesContent":["import program from './commander';\n\nfunction logStartupOptions(options) {\n  for (const key in options) {\n    let value = options[key];\n    if (key == 'masterKey') {\n      value = '***REDACTED***';\n    }\n    if (key == 'push' && options.verbose != true) {\n      value = '***REDACTED***';\n    }\n    if (typeof value === 'object') {\n      try {\n        value = JSON.stringify(value);\n      } catch (e) {\n        if (value && value.constructor && value.constructor.name) {\n          value = value.constructor.name;\n        }\n      }\n    }\n    /* eslint-disable no-console */\n    console.log(`${key}: ${value}`);\n    /* eslint-enable no-console */\n  }\n}\n\nexport default function ({ definitions, help, usage, start }) {\n  program.loadDefinitions(definitions);\n  if (usage) {\n    program.usage(usage);\n  }\n  if (help) {\n    program.on('--help', help);\n  }\n  program.parse(process.argv, process.env);\n\n  const options = program.getOptions();\n  start(program, options, function () {\n    logStartupOptions(options);\n  });\n}\n"],"file":"runner.js"}