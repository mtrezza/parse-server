{"version":3,"sources":["../../src/LiveQuery/equalObjects.js"],"names":["toString","Object","prototype","equalObjects","a","b","call","Array","isArray","length","i","keys","key","module","exports"],"mappings":";;AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,SAAP,CAAiBF,QAAhC;AAEA;AACA;AACA;AACA;;AACA,SAASG,YAAT,CAAsBC,CAAtB,EAAyBC,CAAzB,EAA4B;AAC1B,MAAI,OAAOD,CAAP,KAAa,OAAOC,CAAxB,EAA2B;AACzB,WAAO,KAAP;AACD;;AACD,MAAI,OAAOD,CAAP,KAAa,QAAjB,EAA2B;AACzB,WAAOA,CAAC,KAAKC,CAAb;AACD;;AACD,MAAID,CAAC,KAAKC,CAAV,EAAa;AACX,WAAO,IAAP;AACD;;AACD,MAAIL,QAAQ,CAACM,IAAT,CAAcF,CAAd,MAAqB,eAAzB,EAA0C;AACxC,QAAIJ,QAAQ,CAACM,IAAT,CAAcD,CAAd,MAAqB,eAAzB,EAA0C;AACxC,aAAO,CAACD,CAAD,KAAO,CAACC,CAAf;AACD;;AACD,WAAO,KAAP;AACD;;AACD,MAAIE,KAAK,CAACC,OAAN,CAAcJ,CAAd,CAAJ,EAAsB;AACpB,QAAIG,KAAK,CAACC,OAAN,CAAcH,CAAd,CAAJ,EAAsB;AACpB,UAAID,CAAC,CAACK,MAAF,KAAaJ,CAAC,CAACI,MAAnB,EAA2B;AACzB,eAAO,KAAP;AACD;;AACD,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,CAAC,CAACK,MAAtB,EAA8BC,CAAC,EAA/B,EAAmC;AACjC,YAAI,CAACP,YAAY,CAACC,CAAC,CAACM,CAAD,CAAF,EAAOL,CAAC,CAACK,CAAD,CAAR,CAAjB,EAA+B;AAC7B,iBAAO,KAAP;AACD;AACF;;AACD,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD;;AACD,MAAIT,MAAM,CAACU,IAAP,CAAYP,CAAZ,EAAeK,MAAf,KAA0BR,MAAM,CAACU,IAAP,CAAYN,CAAZ,EAAeI,MAA7C,EAAqD;AACnD,WAAO,KAAP;AACD;;AACD,OAAK,IAAIG,GAAT,IAAgBR,CAAhB,EAAmB;AACjB,QAAI,CAACD,YAAY,CAACC,CAAC,CAACQ,GAAD,CAAF,EAASP,CAAC,CAACO,GAAD,CAAV,CAAjB,EAAmC;AACjC,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBX,YAAjB","sourcesContent":["var toString = Object.prototype.toString;\n\n/**\n * Determines whether two objects represent the same primitive, special Parse\n * type, or full Parse Object.\n */\nfunction equalObjects(a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a !== 'object') {\n    return a === b;\n  }\n  if (a === b) {\n    return true;\n  }\n  if (toString.call(a) === '[object Date]') {\n    if (toString.call(b) === '[object Date]') {\n      return +a === +b;\n    }\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (Array.isArray(b)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n      for (var i = 0; i < a.length; i++) {\n        if (!equalObjects(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (var key in a) {\n    if (!equalObjects(a[key], b[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = equalObjects;\n"],"file":"equalObjects.js"}