{"version":3,"sources":["../../src/LiveQuery/ParsePubSub.js"],"names":["ParsePubSub","useRedis","config","redisURL","createPublisher","RedisPubSub","adapter","pubSubAdapter","EventEmitterPubSub","createSubscriber"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEA,MAAMA,WAAW,GAAG,EAApB;;;AAEA,SAASC,QAAT,CAAkBC,MAAlB,EAAwC;AACtC,QAAMC,QAAQ,GAAGD,MAAM,CAACC,QAAxB;AACA,SAAO,OAAOA,QAAP,KAAoB,WAApB,IAAmCA,QAAQ,KAAK,EAAvD;AACD;;AAEDH,WAAW,CAACI,eAAZ,GAA8B,UAAUF,MAAV,EAA4B;AACxD,MAAID,QAAQ,CAACC,MAAD,CAAZ,EAAsB;AACpB,WAAOG,yBAAYD,eAAZ,CAA4BF,MAA5B,CAAP;AACD,GAFD,MAEO;AACL,UAAMI,OAAO,GAAG,gCAAYJ,MAAM,CAACK,aAAnB,EAAkCC,sCAAlC,EAAsDN,MAAtD,CAAhB;;AACA,QAAI,OAAOI,OAAO,CAACF,eAAf,KAAmC,UAAvC,EAAmD;AACjD,YAAM,6CAAN;AACD;;AACD,WAAOE,OAAO,CAACF,eAAR,CAAwBF,MAAxB,CAAP;AACD;AACF,CAVD;;AAYAF,WAAW,CAACS,gBAAZ,GAA+B,UAAUP,MAAV,EAA6B;AAC1D,MAAID,QAAQ,CAACC,MAAD,CAAZ,EAAsB;AACpB,WAAOG,yBAAYI,gBAAZ,CAA6BP,MAA7B,CAAP;AACD,GAFD,MAEO;AACL,UAAMI,OAAO,GAAG,gCAAYJ,MAAM,CAACK,aAAnB,EAAkCC,sCAAlC,EAAsDN,MAAtD,CAAhB;;AACA,QAAI,OAAOI,OAAO,CAACG,gBAAf,KAAoC,UAAxC,EAAoD;AAClD,YAAM,8CAAN;AACD;;AACD,WAAOH,OAAO,CAACG,gBAAR,CAAyBP,MAAzB,CAAP;AACD;AACF,CAVD","sourcesContent":["import { loadAdapter } from '../Adapters/AdapterLoader';\nimport { EventEmitterPubSub } from '../Adapters/PubSub/EventEmitterPubSub';\n\nimport { RedisPubSub } from '../Adapters/PubSub/RedisPubSub';\n\nconst ParsePubSub = {};\n\nfunction useRedis(config: any): boolean {\n  const redisURL = config.redisURL;\n  return typeof redisURL !== 'undefined' && redisURL !== '';\n}\n\nParsePubSub.createPublisher = function (config: any): any {\n  if (useRedis(config)) {\n    return RedisPubSub.createPublisher(config);\n  } else {\n    const adapter = loadAdapter(config.pubSubAdapter, EventEmitterPubSub, config);\n    if (typeof adapter.createPublisher !== 'function') {\n      throw 'pubSubAdapter should have createPublisher()';\n    }\n    return adapter.createPublisher(config);\n  }\n};\n\nParsePubSub.createSubscriber = function (config: any): void {\n  if (useRedis(config)) {\n    return RedisPubSub.createSubscriber(config);\n  } else {\n    const adapter = loadAdapter(config.pubSubAdapter, EventEmitterPubSub, config);\n    if (typeof adapter.createSubscriber !== 'function') {\n      throw 'pubSubAdapter should have createSubscriber()';\n    }\n    return adapter.createSubscriber(config);\n  }\n};\n\nexport { ParsePubSub };\n"],"file":"ParsePubSub.js"}