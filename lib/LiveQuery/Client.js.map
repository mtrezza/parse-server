{"version":3,"sources":["../../src/LiveQuery/Client.js"],"names":["dafaultFields","Client","constructor","id","parseWebSocket","hasMasterKey","sessionToken","installationId","roles","subscriptionInfos","Map","pushConnect","_pushEvent","pushSubscribe","pushUnsubscribe","pushCreate","pushEnter","pushUpdate","pushDelete","pushLeave","pushResponse","message","logger","verbose","send","pushError","code","error","reconnect","requestId","JSON","stringify","op","addSubscriptionInfo","subscriptionInfo","set","getSubscriptionInfo","get","deleteSubscriptionInfo","delete","type","subscriptionId","parseObjectJSON","parseOriginalObjectJSON","response","clientId","fields","has","_toJSONWithFields","limitedParseObject","field"],"mappings":"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","sourcesContent":["import logger from '../logger';\n\nimport type { FlattenedObjectData } from './Subscription';\nexport type Message = { [attr: string]: any };\n\nconst dafaultFields = ['className', 'objectId', 'updatedAt', 'createdAt', 'ACL'];\n\nclass Client {\n  id: number;\n  parseWebSocket: any;\n  hasMasterKey: boolean;\n  sessionToken: string;\n  installationId: string;\n  userId: string;\n  roles: Array<string>;\n  subscriptionInfos: Object;\n  pushConnect: Function;\n  pushSubscribe: Function;\n  pushUnsubscribe: Function;\n  pushCreate: Function;\n  pushEnter: Function;\n  pushUpdate: Function;\n  pushDelete: Function;\n  pushLeave: Function;\n\n  constructor(\n    id: number,\n    parseWebSocket: any,\n    hasMasterKey: boolean = false,\n    sessionToken: string,\n    installationId: string\n  ) {\n    this.id = id;\n    this.parseWebSocket = parseWebSocket;\n    this.hasMasterKey = hasMasterKey;\n    this.sessionToken = sessionToken;\n    this.installationId = installationId;\n    this.roles = [];\n    this.subscriptionInfos = new Map();\n    this.pushConnect = this._pushEvent('connected');\n    this.pushSubscribe = this._pushEvent('subscribed');\n    this.pushUnsubscribe = this._pushEvent('unsubscribed');\n    this.pushCreate = this._pushEvent('create');\n    this.pushEnter = this._pushEvent('enter');\n    this.pushUpdate = this._pushEvent('update');\n    this.pushDelete = this._pushEvent('delete');\n    this.pushLeave = this._pushEvent('leave');\n  }\n\n  static pushResponse(parseWebSocket: any, message: Message): void {\n    logger.verbose('Push Response : %j', message);\n    parseWebSocket.send(message);\n  }\n\n  static pushError(\n    parseWebSocket: any,\n    code: number,\n    error: string,\n    reconnect: boolean = true,\n    requestId: number | void = null\n  ): void {\n    Client.pushResponse(\n      parseWebSocket,\n      JSON.stringify({\n        op: 'error',\n        error,\n        code,\n        reconnect,\n        requestId,\n      })\n    );\n  }\n\n  addSubscriptionInfo(requestId: number, subscriptionInfo: any): void {\n    this.subscriptionInfos.set(requestId, subscriptionInfo);\n  }\n\n  getSubscriptionInfo(requestId: number): any {\n    return this.subscriptionInfos.get(requestId);\n  }\n\n  deleteSubscriptionInfo(requestId: number): void {\n    return this.subscriptionInfos.delete(requestId);\n  }\n\n  _pushEvent(type: string): Function {\n    return function (\n      subscriptionId: number,\n      parseObjectJSON: any,\n      parseOriginalObjectJSON: any\n    ): void {\n      const response: Message = {\n        op: type,\n        clientId: this.id,\n        installationId: this.installationId,\n      };\n      if (typeof subscriptionId !== 'undefined') {\n        response['requestId'] = subscriptionId;\n      }\n      if (typeof parseObjectJSON !== 'undefined') {\n        let fields;\n        if (this.subscriptionInfos.has(subscriptionId)) {\n          fields = this.subscriptionInfos.get(subscriptionId).fields;\n        }\n        response['object'] = this._toJSONWithFields(parseObjectJSON, fields);\n        if (parseOriginalObjectJSON) {\n          response['original'] = this._toJSONWithFields(parseOriginalObjectJSON, fields);\n        }\n      }\n      Client.pushResponse(this.parseWebSocket, JSON.stringify(response));\n    };\n  }\n\n  _toJSONWithFields(parseObjectJSON: any, fields: any): FlattenedObjectData {\n    if (!fields) {\n      return parseObjectJSON;\n    }\n    const limitedParseObject = {};\n    for (const field of dafaultFields) {\n      limitedParseObject[field] = parseObjectJSON[field];\n    }\n    for (const field of fields) {\n      if (field in parseObjectJSON) {\n        limitedParseObject[field] = parseObjectJSON[field];\n      }\n    }\n    return limitedParseObject;\n  }\n}\n\nexport { Client };\n"],"file":"Client.js"}