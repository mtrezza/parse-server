{"version":3,"sources":["../../src/Controllers/FilesController.js"],"names":["Parse","require","legacyFilesRegex","RegExp","FilesController","AdaptableController","getFileData","config","filename","adapter","createFile","data","contentType","options","extname","path","hasExtension","length","mime","getExtension","getType","preserveFileName","location","getFileLocation","then","Promise","resolve","url","name","deleteFile","getMetadata","expandFilesInObject","object","Array","map","obj","key","fileObject","fileKey","undefined","indexOf","encodeURIComponent","test","expectedAdapterType","FilesAdapter","handleFileStream","req","res","validateFilename","error","Error","INVALID_FILE_NAME"],"mappings":"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","sourcesContent":["// FilesController.js\nimport { randomHexString } from '../cryptoUtils';\nimport AdaptableController from './AdaptableController';\nimport { validateFilename, FilesAdapter } from '../Adapters/Files/FilesAdapter';\nimport path from 'path';\nimport mime from 'mime';\nconst Parse = require('parse').Parse;\n\nconst legacyFilesRegex = new RegExp(\n  '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}-.*'\n);\n\nexport class FilesController extends AdaptableController {\n  getFileData(config, filename) {\n    return this.adapter.getFileData(filename);\n  }\n\n  createFile(config, filename, data, contentType, options) {\n    const extname = path.extname(filename);\n\n    const hasExtension = extname.length > 0;\n\n    if (!hasExtension && contentType && mime.getExtension(contentType)) {\n      filename = filename + '.' + mime.getExtension(contentType);\n    } else if (hasExtension && !contentType) {\n      contentType = mime.getType(filename);\n    }\n\n    if (!this.options.preserveFileName) {\n      filename = randomHexString(32) + '_' + filename;\n    }\n\n    const location = this.adapter.getFileLocation(config, filename);\n    return this.adapter.createFile(filename, data, contentType, options).then(() => {\n      return Promise.resolve({\n        url: location,\n        name: filename,\n      });\n    });\n  }\n\n  deleteFile(config, filename) {\n    return this.adapter.deleteFile(filename);\n  }\n\n  getMetadata(filename) {\n    if (typeof this.adapter.getMetadata === 'function') {\n      return this.adapter.getMetadata(filename);\n    }\n    return Promise.resolve({});\n  }\n\n  /**\n   * Find file references in REST-format object and adds the url key\n   * with the current mount point and app id.\n   * Object may be a single object or list of REST-format objects.\n   */\n  expandFilesInObject(config, object) {\n    if (object instanceof Array) {\n      object.map(obj => this.expandFilesInObject(config, obj));\n      return;\n    }\n    if (typeof object !== 'object') {\n      return;\n    }\n    for (const key in object) {\n      const fileObject = object[key];\n      if (fileObject && fileObject['__type'] === 'File') {\n        if (fileObject['url']) {\n          continue;\n        }\n        const filename = fileObject['name'];\n        // all filenames starting with \"tfss-\" should be from files.parsetfss.com\n        // all filenames starting with a \"-\" seperated UUID should be from files.parse.com\n        // all other filenames have been migrated or created from Parse Server\n        if (config.fileKey === undefined) {\n          fileObject['url'] = this.adapter.getFileLocation(config, filename);\n        } else {\n          if (filename.indexOf('tfss-') === 0) {\n            fileObject['url'] =\n              'http://files.parsetfss.com/' + config.fileKey + '/' + encodeURIComponent(filename);\n          } else if (legacyFilesRegex.test(filename)) {\n            fileObject['url'] =\n              'http://files.parse.com/' + config.fileKey + '/' + encodeURIComponent(filename);\n          } else {\n            fileObject['url'] = this.adapter.getFileLocation(config, filename);\n          }\n        }\n      }\n    }\n  }\n\n  expectedAdapterType() {\n    return FilesAdapter;\n  }\n\n  handleFileStream(config, filename, req, res, contentType) {\n    return this.adapter.handleFileStream(filename, req, res, contentType);\n  }\n\n  validateFilename(filename) {\n    if (typeof this.adapter.validateFilename === 'function') {\n      const error = this.adapter.validateFilename(filename);\n      if (typeof error !== 'string') {\n        return error;\n      }\n      return new Parse.Error(Parse.Error.INVALID_FILE_NAME, error);\n    }\n    return validateFilename(filename);\n  }\n}\n\nexport default FilesController;\n"],"file":"FilesController.js"}