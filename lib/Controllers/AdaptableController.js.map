{"version":3,"sources":["../../src/Controllers/AdaptableController.js"],"names":["_adapter","Symbol","AdaptableController","constructor","adapter","appId","options","validateAdapter","config","Config","get","expectedAdapterType","Error","self","ExpectedType","name","Type","mismatches","Object","getOwnPropertyNames","prototype","reduce","obj","key","adapterType","expectedType","expected","actual","keys","length"],"mappings":";;;;;;;AAYA;;;;AAZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,IAAIA,QAAQ,GAAGC,MAAM,EAArB;;AAGO,MAAMC,mBAAN,CAA0B;AAC/BC,EAAAA,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AACnC,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKD,OAAL,GAAeA,OAAf;AACD;;AAED,MAAIA,OAAJ,CAAYA,OAAZ,EAAqB;AACnB,SAAKG,eAAL,CAAqBH,OAArB;AACA,SAAKJ,QAAL,IAAiBI,OAAjB;AACD;;AAED,MAAIA,OAAJ,GAAc;AACZ,WAAO,KAAKJ,QAAL,CAAP;AACD;;AAED,MAAIQ,MAAJ,GAAa;AACX,WAAOC,gBAAOC,GAAP,CAAW,KAAKL,KAAhB,CAAP;AACD;;AAEDM,EAAAA,mBAAmB,GAAG;AACpB,UAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AACD;;AAEDL,EAAAA,eAAe,CAACH,OAAD,EAAU;AACvBF,IAAAA,mBAAmB,CAACK,eAApB,CAAoCH,OAApC,EAA6C,IAA7C;AACD;;AAED,SAAOG,eAAP,CAAuBH,OAAvB,EAAgCS,IAAhC,EAAsCC,YAAtC,EAAoD;AAClD,QAAI,CAACV,OAAL,EAAc;AACZ,YAAM,IAAIQ,KAAJ,CAAU,KAAKT,WAAL,CAAiBY,IAAjB,GAAwB,sBAAlC,CAAN;AACD;;AAED,UAAMC,IAAI,GAAGF,YAAY,IAAID,IAAI,CAACF,mBAAL,EAA7B,CALkD,CAMlD;;AACA,QAAI,CAACK,IAAL,EAAW;AACT;AACD,KATiD,CAWlD;;;AACA,UAAMC,UAAU,GAAGC,MAAM,CAACC,mBAAP,CAA2BH,IAAI,CAACI,SAAhC,EAA2CC,MAA3C,CAAkD,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjF,YAAMC,WAAW,GAAG,OAAOpB,OAAO,CAACmB,GAAD,CAAlC;AACA,YAAME,YAAY,GAAG,OAAOT,IAAI,CAACI,SAAL,CAAeG,GAAf,CAA5B;;AACA,UAAIC,WAAW,KAAKC,YAApB,EAAkC;AAChCH,QAAAA,GAAG,CAACC,GAAD,CAAH,GAAW;AACTG,UAAAA,QAAQ,EAAED,YADD;AAETE,UAAAA,MAAM,EAAEH;AAFC,SAAX;AAID;;AACD,aAAOF,GAAP;AACD,KAVkB,EAUhB,EAVgB,CAAnB;;AAYA,QAAIJ,MAAM,CAACU,IAAP,CAAYX,UAAZ,EAAwBY,MAAxB,GAAiC,CAArC,EAAwC;AACtC,YAAM,IAAIjB,KAAJ,CAAU,kDAAV,EAA8DR,OAA9D,EAAuEa,UAAvE,CAAN;AACD;AACF;;AAvD8B;;;eA0DlBf,mB","sourcesContent":["/*\nAdaptableController.js\n\nAdaptableController is the base class for all controllers\nthat support adapter,\nThe super class takes care of creating the right instance for the adapter\nbased on the parameters passed\n\n */\n\n// _adapter is private, use Symbol\nvar _adapter = Symbol();\nimport Config from '../Config';\n\nexport class AdaptableController {\n  constructor(adapter, appId, options) {\n    this.options = options;\n    this.appId = appId;\n    this.adapter = adapter;\n  }\n\n  set adapter(adapter) {\n    this.validateAdapter(adapter);\n    this[_adapter] = adapter;\n  }\n\n  get adapter() {\n    return this[_adapter];\n  }\n\n  get config() {\n    return Config.get(this.appId);\n  }\n\n  expectedAdapterType() {\n    throw new Error('Subclasses should implement expectedAdapterType()');\n  }\n\n  validateAdapter(adapter) {\n    AdaptableController.validateAdapter(adapter, this);\n  }\n\n  static validateAdapter(adapter, self, ExpectedType) {\n    if (!adapter) {\n      throw new Error(this.constructor.name + ' requires an adapter');\n    }\n\n    const Type = ExpectedType || self.expectedAdapterType();\n    // Allow skipping for testing\n    if (!Type) {\n      return;\n    }\n\n    // Makes sure the prototype matches\n    const mismatches = Object.getOwnPropertyNames(Type.prototype).reduce((obj, key) => {\n      const adapterType = typeof adapter[key];\n      const expectedType = typeof Type.prototype[key];\n      if (adapterType !== expectedType) {\n        obj[key] = {\n          expected: expectedType,\n          actual: adapterType,\n        };\n      }\n      return obj;\n    }, {});\n\n    if (Object.keys(mismatches).length > 0) {\n      throw new Error(\"Adapter prototype don't match expected prototype\", adapter, mismatches);\n    }\n  }\n}\n\nexport default AdaptableController;\n"],"file":"AdaptableController.js"}