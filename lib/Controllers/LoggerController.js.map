{"version":3,"sources":["../../src/Controllers/LoggerController.js"],"names":["MILLISECONDS_IN_A_DAY","LOG_STRING_TRUNCATE_LENGTH","truncationMarker","LogLevel","INFO","ERROR","LogOrder","DESCENDING","ASCENDING","logLevels","LoggerController","AdaptableController","constructor","adapter","appId","options","logLevel","level","verbose","index","indexOf","forEach","levelIndex","maskSensitiveUrl","urlString","urlObj","url","parse","query","sanitizedQuery","key","slice","pathname","maskSensitive","argArray","map","e","replace","Array","isArray","item","body","Object","keys","params","log","args","concat","arg","apply","info","arguments","error","warn","debug","silly","logRequest","method","headers","stringifiedBody","JSON","stringify","logResponse","result","stringifiedResponse","validDateTime","date","Date","isNaN","getTime","truncateLogMessage","string","length","truncated","substring","parseOptions","from","now","until","size","Number","order","getLogs","Parse","Error","PUSH_MISCONFIGURED","expectedAdapterType","LoggerAdapter"],"mappings":"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","sourcesContent":["import { Parse } from 'parse/node';\nimport AdaptableController from './AdaptableController';\nimport { LoggerAdapter } from '../Adapters/Logger/LoggerAdapter';\nimport url from 'url';\n\nconst MILLISECONDS_IN_A_DAY = 24 * 60 * 60 * 1000;\nconst LOG_STRING_TRUNCATE_LENGTH = 1000;\nconst truncationMarker = '... (truncated)';\n\nexport const LogLevel = {\n  INFO: 'info',\n  ERROR: 'error',\n};\n\nexport const LogOrder = {\n  DESCENDING: 'desc',\n  ASCENDING: 'asc',\n};\n\nconst logLevels = ['error', 'warn', 'info', 'debug', 'verbose', 'silly'];\n\nexport class LoggerController extends AdaptableController {\n  constructor(adapter, appId, options = { logLevel: 'info' }) {\n    super(adapter, appId, options);\n    let level = 'info';\n    if (options.verbose) {\n      level = 'verbose';\n    }\n    if (options.logLevel) {\n      level = options.logLevel;\n    }\n    const index = logLevels.indexOf(level); // info by default\n    logLevels.forEach((level, levelIndex) => {\n      if (levelIndex > index) {\n        // silence the levels that are > maxIndex\n        this[level] = () => {};\n      }\n    });\n  }\n\n  maskSensitiveUrl(urlString) {\n    const urlObj = url.parse(urlString, true);\n    const query = urlObj.query;\n    let sanitizedQuery = '?';\n\n    for (const key in query) {\n      if (key !== 'password') {\n        // normal value\n        sanitizedQuery += key + '=' + query[key] + '&';\n      } else {\n        // password value, redact it\n        sanitizedQuery += key + '=' + '********' + '&';\n      }\n    }\n\n    // trim last character, ? or &\n    sanitizedQuery = sanitizedQuery.slice(0, -1);\n\n    // return original path name with sanitized params attached\n    return urlObj.pathname + sanitizedQuery;\n  }\n\n  maskSensitive(argArray) {\n    return argArray.map(e => {\n      if (!e) {\n        return e;\n      }\n\n      if (typeof e === 'string') {\n        return e.replace(/(password\".?:.?\")[^\"]*\"/g, '$1********\"');\n      }\n      // else it is an object...\n\n      // check the url\n      if (e.url) {\n        // for strings\n        if (typeof e.url === 'string') {\n          e.url = this.maskSensitiveUrl(e.url);\n        } else if (Array.isArray(e.url)) {\n          // for strings in array\n          e.url = e.url.map(item => {\n            if (typeof item === 'string') {\n              return this.maskSensitiveUrl(item);\n            }\n\n            return item;\n          });\n        }\n      }\n\n      if (e.body) {\n        for (const key of Object.keys(e.body)) {\n          if (key === 'password') {\n            e.body[key] = '********';\n            break;\n          }\n        }\n      }\n\n      if (e.params) {\n        for (const key of Object.keys(e.params)) {\n          if (key === 'password') {\n            e.params[key] = '********';\n            break;\n          }\n        }\n      }\n\n      return e;\n    });\n  }\n\n  log(level, args) {\n    // make the passed in arguments object an array with the spread operator\n    args = this.maskSensitive([...args]);\n    args = [].concat(\n      level,\n      args.map(arg => {\n        if (typeof arg === 'function') {\n          return arg();\n        }\n        return arg;\n      })\n    );\n    this.adapter.log.apply(this.adapter, args);\n  }\n\n  info() {\n    return this.log('info', arguments);\n  }\n\n  error() {\n    return this.log('error', arguments);\n  }\n\n  warn() {\n    return this.log('warn', arguments);\n  }\n\n  verbose() {\n    return this.log('verbose', arguments);\n  }\n\n  debug() {\n    return this.log('debug', arguments);\n  }\n\n  silly() {\n    return this.log('silly', arguments);\n  }\n\n  logRequest({ method, url, headers, body }) {\n    this.verbose(\n      () => {\n        const stringifiedBody = JSON.stringify(body, null, 2);\n        return `REQUEST for [${method}] ${url}: ${stringifiedBody}`;\n      },\n      {\n        method,\n        url,\n        headers,\n        body,\n      }\n    );\n  }\n\n  logResponse({ method, url, result }) {\n    this.verbose(\n      () => {\n        const stringifiedResponse = JSON.stringify(result, null, 2);\n        return `RESPONSE from [${method}] ${url}: ${stringifiedResponse}`;\n      },\n      { result: result }\n    );\n  }\n  // check that date input is valid\n  static validDateTime(date) {\n    if (!date) {\n      return null;\n    }\n    date = new Date(date);\n\n    if (!isNaN(date.getTime())) {\n      return date;\n    }\n\n    return null;\n  }\n\n  truncateLogMessage(string) {\n    if (string && string.length > LOG_STRING_TRUNCATE_LENGTH) {\n      const truncated = string.substring(0, LOG_STRING_TRUNCATE_LENGTH) + truncationMarker;\n      return truncated;\n    }\n\n    return string;\n  }\n\n  static parseOptions(options = {}) {\n    const from =\n      LoggerController.validDateTime(options.from) ||\n      new Date(Date.now() - 7 * MILLISECONDS_IN_A_DAY);\n    const until = LoggerController.validDateTime(options.until) || new Date();\n    const size = Number(options.size) || 10;\n    const order = options.order || LogOrder.DESCENDING;\n    const level = options.level || LogLevel.INFO;\n\n    return {\n      from,\n      until,\n      size,\n      order,\n      level,\n    };\n  }\n\n  // Returns a promise for a {response} object.\n  // query params:\n  // level (optional) Level of logging you want to query for (info || error)\n  // from (optional) Start time for the search. Defaults to 1 week ago.\n  // until (optional) End time for the search. Defaults to current time.\n  // order (optional) Direction of results returned, either “asc” or “desc”. Defaults to “desc”.\n  // size (optional) Number of rows returned by search. Defaults to 10\n  getLogs(options = {}) {\n    if (!this.adapter) {\n      throw new Parse.Error(Parse.Error.PUSH_MISCONFIGURED, 'Logger adapter is not available');\n    }\n    if (typeof this.adapter.query !== 'function') {\n      throw new Parse.Error(\n        Parse.Error.PUSH_MISCONFIGURED,\n        'Querying logs is not supported with this adapter'\n      );\n    }\n    options = LoggerController.parseOptions(options);\n    return this.adapter.query(options);\n  }\n\n  expectedAdapterType() {\n    return LoggerAdapter;\n  }\n}\n\nexport default LoggerController;\n"],"file":"LoggerController.js"}