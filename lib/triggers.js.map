{"version":3,"sources":["../src/triggers.js"],"names":["Types","beforeLogin","afterLogin","afterLogout","beforeSave","afterSave","beforeDelete","afterDelete","beforeFind","afterFind","beforeSaveFile","afterSaveFile","beforeDeleteFile","afterDeleteFile","beforeConnect","beforeSubscribe","afterEvent","FileClassName","ConnectClassName","baseStore","Validators","Object","keys","reduce","base","key","Functions","Jobs","LiveQuery","Triggers","freeze","validateClassNameForTriggers","className","type","_triggerStore","Category","getStore","category","name","applicationId","path","split","splice","Parse","store","component","undefined","add","handler","lastComponent","logger","warn","remove","get","addFunction","functionName","validationHandler","addJob","jobName","addTrigger","addFileTrigger","addConnectTrigger","addLiveQueryEventHandler","push","removeFunction","removeTrigger","_unregisterAll","forEach","appId","getTrigger","triggerType","getFileTrigger","triggerExists","getFunction","getFunctionNames","functionNames","extractFunctionNames","namespace","value","getJob","getJobs","manager","getValidator","getRequestObject","auth","parseObject","originalParseObject","config","context","request","triggerName","object","master","log","loggerController","headers","ip","original","assign","isMaster","user","installationId","getRequestQueryObject","query","count","isGet","getResponseObject","resolve","reject","success","response","objects","map","toJSON","equals","_getSaveJSON","error","e","resolveError","code","Error","SCRIPT_FAILED","message","userIdForLog","id","logTriggerAfterHook","input","cleanInput","truncateLogMessage","JSON","stringify","info","logTriggerSuccessBeforeHook","result","cleanResult","logTriggerErrorBeforeHook","maybeRunAfterFindTrigger","Promise","trigger","fromJSON","then","maybeRunValidator","skipWithMasterKey","results","maybeRunQueryTrigger","restWhere","restOptions","json","where","parseQuery","Query","withJSON","requestObject","queryResult","jsonQuery","limit","skip","include","excludeKeys","explain","order","hint","readPreference","includeReadPreference","subqueryReadPreference","err","defaultOpts","stack","theValidator","builtInTriggerValidator","catch","VALIDATION_ERROR","options","validateMasterKey","reqUser","existed","requireUser","requireMaster","params","requiredParam","validateOptions","opt","val","opts","Array","isArray","includes","join","getType","fn","match","toString","toLowerCase","fields","default","set","constant","required","userKeys","requireUserKeys","maybeRunTrigger","promise","inflate","data","restObject","copy","runLiveQueryEventHandlers","getRequestFileObject","fileObject","maybeRunFileTrigger","fileTrigger","file","fileSize","maybeRunConnectTrigger","userForSessionToken","sessionToken","maybeRunSubscribeTrigger","maybeRunAfterEventTrigger","q","equalTo","session","first","useMasterKey"],"mappings":"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","sourcesContent":["// triggers.js\nimport Parse from 'parse/node';\nimport { logger } from './logger';\n\nexport const Types = {\n  beforeLogin: 'beforeLogin',\n  afterLogin: 'afterLogin',\n  afterLogout: 'afterLogout',\n  beforeSave: 'beforeSave',\n  afterSave: 'afterSave',\n  beforeDelete: 'beforeDelete',\n  afterDelete: 'afterDelete',\n  beforeFind: 'beforeFind',\n  afterFind: 'afterFind',\n  beforeSaveFile: 'beforeSaveFile',\n  afterSaveFile: 'afterSaveFile',\n  beforeDeleteFile: 'beforeDeleteFile',\n  afterDeleteFile: 'afterDeleteFile',\n  beforeConnect: 'beforeConnect',\n  beforeSubscribe: 'beforeSubscribe',\n  afterEvent: 'afterEvent',\n};\n\nconst FileClassName = '@File';\nconst ConnectClassName = '@Connect';\n\nconst baseStore = function () {\n  const Validators = Object.keys(Types).reduce(function (base, key) {\n    base[key] = {};\n    return base;\n  }, {});\n  const Functions = {};\n  const Jobs = {};\n  const LiveQuery = [];\n  const Triggers = Object.keys(Types).reduce(function (base, key) {\n    base[key] = {};\n    return base;\n  }, {});\n\n  return Object.freeze({\n    Functions,\n    Jobs,\n    Validators,\n    Triggers,\n    LiveQuery,\n  });\n};\n\nfunction validateClassNameForTriggers(className, type) {\n  if (type == Types.beforeSave && className === '_PushStatus') {\n    // _PushStatus uses undocumented nested key increment ops\n    // allowing beforeSave would mess up the objects big time\n    // TODO: Allow proper documented way of using nested increment ops\n    throw 'Only afterSave is allowed on _PushStatus';\n  }\n  if ((type === Types.beforeLogin || type === Types.afterLogin) && className !== '_User') {\n    // TODO: check if upstream code will handle `Error` instance rather\n    // than this anti-pattern of throwing strings\n    throw 'Only the _User class is allowed for the beforeLogin and afterLogin triggers';\n  }\n  if (type === Types.afterLogout && className !== '_Session') {\n    // TODO: check if upstream code will handle `Error` instance rather\n    // than this anti-pattern of throwing strings\n    throw 'Only the _Session class is allowed for the afterLogout trigger.';\n  }\n  if (className === '_Session' && type !== Types.afterLogout) {\n    // TODO: check if upstream code will handle `Error` instance rather\n    // than this anti-pattern of throwing strings\n    throw 'Only the afterLogout trigger is allowed for the _Session class.';\n  }\n  return className;\n}\n\nconst _triggerStore = {};\n\nconst Category = {\n  Functions: 'Functions',\n  Validators: 'Validators',\n  Jobs: 'Jobs',\n  Triggers: 'Triggers',\n};\n\nfunction getStore(category, name, applicationId) {\n  const path = name.split('.');\n  path.splice(-1); // remove last component\n  applicationId = applicationId || Parse.applicationId;\n  _triggerStore[applicationId] = _triggerStore[applicationId] || baseStore();\n  let store = _triggerStore[applicationId][category];\n  for (const component of path) {\n    store = store[component];\n    if (!store) {\n      return undefined;\n    }\n  }\n  return store;\n}\n\nfunction add(category, name, handler, applicationId) {\n  const lastComponent = name.split('.').splice(-1);\n  const store = getStore(category, name, applicationId);\n  if (store[lastComponent]) {\n    logger.warn(\n      `Warning: Duplicate cloud functions exist for ${lastComponent}. Only the last one will be used and the others will be ignored.`\n    );\n  }\n  store[lastComponent] = handler;\n}\n\nfunction remove(category, name, applicationId) {\n  const lastComponent = name.split('.').splice(-1);\n  const store = getStore(category, name, applicationId);\n  delete store[lastComponent];\n}\n\nfunction get(category, name, applicationId) {\n  const lastComponent = name.split('.').splice(-1);\n  const store = getStore(category, name, applicationId);\n  return store[lastComponent];\n}\n\nexport function addFunction(functionName, handler, validationHandler, applicationId) {\n  add(Category.Functions, functionName, handler, applicationId);\n  add(Category.Validators, functionName, validationHandler, applicationId);\n}\n\nexport function addJob(jobName, handler, applicationId) {\n  add(Category.Jobs, jobName, handler, applicationId);\n}\n\nexport function addTrigger(type, className, handler, applicationId, validationHandler) {\n  validateClassNameForTriggers(className, type);\n  add(Category.Triggers, `${type}.${className}`, handler, applicationId);\n  add(Category.Validators, `${type}.${className}`, validationHandler, applicationId);\n}\n\nexport function addFileTrigger(type, handler, applicationId, validationHandler) {\n  add(Category.Triggers, `${type}.${FileClassName}`, handler, applicationId);\n  add(Category.Validators, `${type}.${FileClassName}`, validationHandler, applicationId);\n}\n\nexport function addConnectTrigger(type, handler, applicationId, validationHandler) {\n  add(Category.Triggers, `${type}.${ConnectClassName}`, handler, applicationId);\n  add(Category.Validators, `${type}.${ConnectClassName}`, validationHandler, applicationId);\n}\n\nexport function addLiveQueryEventHandler(handler, applicationId) {\n  applicationId = applicationId || Parse.applicationId;\n  _triggerStore[applicationId] = _triggerStore[applicationId] || baseStore();\n  _triggerStore[applicationId].LiveQuery.push(handler);\n}\n\nexport function removeFunction(functionName, applicationId) {\n  remove(Category.Functions, functionName, applicationId);\n}\n\nexport function removeTrigger(type, className, applicationId) {\n  remove(Category.Triggers, `${type}.${className}`, applicationId);\n}\n\nexport function _unregisterAll() {\n  Object.keys(_triggerStore).forEach(appId => delete _triggerStore[appId]);\n}\n\nexport function getTrigger(className, triggerType, applicationId) {\n  if (!applicationId) {\n    throw 'Missing ApplicationID';\n  }\n  return get(Category.Triggers, `${triggerType}.${className}`, applicationId);\n}\n\nexport function getFileTrigger(type, applicationId) {\n  return getTrigger(FileClassName, type, applicationId);\n}\n\nexport function triggerExists(className: string, type: string, applicationId: string): boolean {\n  return getTrigger(className, type, applicationId) != undefined;\n}\n\nexport function getFunction(functionName, applicationId) {\n  return get(Category.Functions, functionName, applicationId);\n}\n\nexport function getFunctionNames(applicationId) {\n  const store =\n    (_triggerStore[applicationId] && _triggerStore[applicationId][Category.Functions]) || {};\n  const functionNames = [];\n  const extractFunctionNames = (namespace, store) => {\n    Object.keys(store).forEach(name => {\n      const value = store[name];\n      if (namespace) {\n        name = `${namespace}.${name}`;\n      }\n      if (typeof value === 'function') {\n        functionNames.push(name);\n      } else {\n        extractFunctionNames(name, value);\n      }\n    });\n  };\n  extractFunctionNames(null, store);\n  return functionNames;\n}\n\nexport function getJob(jobName, applicationId) {\n  return get(Category.Jobs, jobName, applicationId);\n}\n\nexport function getJobs(applicationId) {\n  var manager = _triggerStore[applicationId];\n  if (manager && manager.Jobs) {\n    return manager.Jobs;\n  }\n  return undefined;\n}\n\nexport function getValidator(functionName, applicationId) {\n  return get(Category.Validators, functionName, applicationId);\n}\n\nexport function getRequestObject(\n  triggerType,\n  auth,\n  parseObject,\n  originalParseObject,\n  config,\n  context\n) {\n  const request = {\n    triggerName: triggerType,\n    object: parseObject,\n    master: false,\n    log: config.loggerController,\n    headers: config.headers,\n    ip: config.ip,\n  };\n\n  if (originalParseObject) {\n    request.original = originalParseObject;\n  }\n  if (\n    triggerType === Types.beforeSave ||\n    triggerType === Types.afterSave ||\n    triggerType === Types.beforeDelete ||\n    triggerType === Types.afterDelete ||\n    triggerType === Types.afterFind\n  ) {\n    // Set a copy of the context on the request object.\n    request.context = Object.assign({}, context);\n  }\n\n  if (!auth) {\n    return request;\n  }\n  if (auth.isMaster) {\n    request['master'] = true;\n  }\n  if (auth.user) {\n    request['user'] = auth.user;\n  }\n  if (auth.installationId) {\n    request['installationId'] = auth.installationId;\n  }\n  return request;\n}\n\nexport function getRequestQueryObject(triggerType, auth, query, count, config, context, isGet) {\n  isGet = !!isGet;\n\n  var request = {\n    triggerName: triggerType,\n    query,\n    master: false,\n    count,\n    log: config.loggerController,\n    isGet,\n    headers: config.headers,\n    ip: config.ip,\n    context: context || {},\n  };\n\n  if (!auth) {\n    return request;\n  }\n  if (auth.isMaster) {\n    request['master'] = true;\n  }\n  if (auth.user) {\n    request['user'] = auth.user;\n  }\n  if (auth.installationId) {\n    request['installationId'] = auth.installationId;\n  }\n  return request;\n}\n\n// Creates the response object, and uses the request object to pass data\n// The API will call this with REST API formatted objects, this will\n// transform them to Parse.Object instances expected by Cloud Code.\n// Any changes made to the object in a beforeSave will be included.\nexport function getResponseObject(request, resolve, reject) {\n  return {\n    success: function (response) {\n      if (request.triggerName === Types.afterFind) {\n        if (!response) {\n          response = request.objects;\n        }\n        response = response.map(object => {\n          return object.toJSON();\n        });\n        return resolve(response);\n      }\n      // Use the JSON response\n      if (\n        response &&\n        typeof response === 'object' &&\n        !request.object.equals(response) &&\n        request.triggerName === Types.beforeSave\n      ) {\n        return resolve(response);\n      }\n      if (response && typeof response === 'object' && request.triggerName === Types.afterSave) {\n        return resolve(response);\n      }\n      if (request.triggerName === Types.afterSave) {\n        return resolve();\n      }\n      response = {};\n      if (request.triggerName === Types.beforeSave) {\n        response['object'] = request.object._getSaveJSON();\n      }\n      return resolve(response);\n    },\n    error: function (error) {\n      const e = resolveError(error, {\n        code: Parse.Error.SCRIPT_FAILED,\n        message: 'Script failed. Unknown error.',\n      });\n      reject(e);\n    },\n  };\n}\n\nfunction userIdForLog(auth) {\n  return auth && auth.user ? auth.user.id : undefined;\n}\n\nfunction logTriggerAfterHook(triggerType, className, input, auth) {\n  const cleanInput = logger.truncateLogMessage(JSON.stringify(input));\n  logger.info(\n    `${triggerType} triggered for ${className} for user ${userIdForLog(\n      auth\n    )}:\\n  Input: ${cleanInput}`,\n    {\n      className,\n      triggerType,\n      user: userIdForLog(auth),\n    }\n  );\n}\n\nfunction logTriggerSuccessBeforeHook(triggerType, className, input, result, auth) {\n  const cleanInput = logger.truncateLogMessage(JSON.stringify(input));\n  const cleanResult = logger.truncateLogMessage(JSON.stringify(result));\n  logger.info(\n    `${triggerType} triggered for ${className} for user ${userIdForLog(\n      auth\n    )}:\\n  Input: ${cleanInput}\\n  Result: ${cleanResult}`,\n    {\n      className,\n      triggerType,\n      user: userIdForLog(auth),\n    }\n  );\n}\n\nfunction logTriggerErrorBeforeHook(triggerType, className, input, auth, error) {\n  const cleanInput = logger.truncateLogMessage(JSON.stringify(input));\n  logger.error(\n    `${triggerType} failed for ${className} for user ${userIdForLog(\n      auth\n    )}:\\n  Input: ${cleanInput}\\n  Error: ${JSON.stringify(error)}`,\n    {\n      className,\n      triggerType,\n      error,\n      user: userIdForLog(auth),\n    }\n  );\n}\n\nexport function maybeRunAfterFindTrigger(\n  triggerType,\n  auth,\n  className,\n  objects,\n  config,\n  query,\n  context\n) {\n  return new Promise((resolve, reject) => {\n    const trigger = getTrigger(className, triggerType, config.applicationId);\n    if (!trigger) {\n      return resolve();\n    }\n    const request = getRequestObject(triggerType, auth, null, null, config, context);\n    if (query) {\n      request.query = query;\n    }\n    const { success, error } = getResponseObject(\n      request,\n      object => {\n        resolve(object);\n      },\n      error => {\n        reject(error);\n      }\n    );\n    logTriggerSuccessBeforeHook(triggerType, className, 'AfterFind', JSON.stringify(objects), auth);\n    request.objects = objects.map(object => {\n      //setting the class name to transform into parse object\n      object.className = className;\n      return Parse.Object.fromJSON(object);\n    });\n    return Promise.resolve()\n      .then(() => {\n        return maybeRunValidator(request, `${triggerType}.${className}`);\n      })\n      .then(() => {\n        if (request.skipWithMasterKey) {\n          return request.objects;\n        }\n        const response = trigger(request);\n        if (response && typeof response.then === 'function') {\n          return response.then(results => {\n            if (!results) {\n              throw new Parse.Error(\n                Parse.Error.SCRIPT_FAILED,\n                'AfterFind expect results to be returned in the promise'\n              );\n            }\n            return results;\n          });\n        }\n        return response;\n      })\n      .then(success, error);\n  }).then(results => {\n    logTriggerAfterHook(triggerType, className, JSON.stringify(results), auth);\n    return results;\n  });\n}\n\nexport function maybeRunQueryTrigger(\n  triggerType,\n  className,\n  restWhere,\n  restOptions,\n  config,\n  auth,\n  context,\n  isGet\n) {\n  const trigger = getTrigger(className, triggerType, config.applicationId);\n  if (!trigger) {\n    return Promise.resolve({\n      restWhere,\n      restOptions,\n    });\n  }\n  const json = Object.assign({}, restOptions);\n  json.where = restWhere;\n\n  const parseQuery = new Parse.Query(className);\n  parseQuery.withJSON(json);\n\n  let count = false;\n  if (restOptions) {\n    count = !!restOptions.count;\n  }\n  const requestObject = getRequestQueryObject(\n    triggerType,\n    auth,\n    parseQuery,\n    count,\n    config,\n    context,\n    isGet\n  );\n  return Promise.resolve()\n    .then(() => {\n      return maybeRunValidator(requestObject, `${triggerType}.${className}`);\n    })\n    .then(() => {\n      if (requestObject.skipWithMasterKey) {\n        return requestObject.query;\n      }\n      return trigger(requestObject);\n    })\n    .then(\n      result => {\n        let queryResult = parseQuery;\n        if (result && result instanceof Parse.Query) {\n          queryResult = result;\n        }\n        const jsonQuery = queryResult.toJSON();\n        if (jsonQuery.where) {\n          restWhere = jsonQuery.where;\n        }\n        if (jsonQuery.limit) {\n          restOptions = restOptions || {};\n          restOptions.limit = jsonQuery.limit;\n        }\n        if (jsonQuery.skip) {\n          restOptions = restOptions || {};\n          restOptions.skip = jsonQuery.skip;\n        }\n        if (jsonQuery.include) {\n          restOptions = restOptions || {};\n          restOptions.include = jsonQuery.include;\n        }\n        if (jsonQuery.excludeKeys) {\n          restOptions = restOptions || {};\n          restOptions.excludeKeys = jsonQuery.excludeKeys;\n        }\n        if (jsonQuery.explain) {\n          restOptions = restOptions || {};\n          restOptions.explain = jsonQuery.explain;\n        }\n        if (jsonQuery.keys) {\n          restOptions = restOptions || {};\n          restOptions.keys = jsonQuery.keys;\n        }\n        if (jsonQuery.order) {\n          restOptions = restOptions || {};\n          restOptions.order = jsonQuery.order;\n        }\n        if (jsonQuery.hint) {\n          restOptions = restOptions || {};\n          restOptions.hint = jsonQuery.hint;\n        }\n        if (requestObject.readPreference) {\n          restOptions = restOptions || {};\n          restOptions.readPreference = requestObject.readPreference;\n        }\n        if (requestObject.includeReadPreference) {\n          restOptions = restOptions || {};\n          restOptions.includeReadPreference = requestObject.includeReadPreference;\n        }\n        if (requestObject.subqueryReadPreference) {\n          restOptions = restOptions || {};\n          restOptions.subqueryReadPreference = requestObject.subqueryReadPreference;\n        }\n        return {\n          restWhere,\n          restOptions,\n        };\n      },\n      err => {\n        const error = resolveError(err, {\n          code: Parse.Error.SCRIPT_FAILED,\n          message: 'Script failed. Unknown error.',\n        });\n        throw error;\n      }\n    );\n}\n\nexport function resolveError(message, defaultOpts) {\n  if (!defaultOpts) {\n    defaultOpts = {};\n  }\n  if (!message) {\n    return new Parse.Error(\n      defaultOpts.code || Parse.Error.SCRIPT_FAILED,\n      defaultOpts.message || 'Script failed.'\n    );\n  }\n  if (message instanceof Parse.Error) {\n    return message;\n  }\n\n  const code = defaultOpts.code || Parse.Error.SCRIPT_FAILED;\n  // If it's an error, mark it as a script failed\n  if (typeof message === 'string') {\n    return new Parse.Error(code, message);\n  }\n  const error = new Parse.Error(code, message.message || message);\n  if (message instanceof Error) {\n    error.stack = message.stack;\n  }\n  return error;\n}\nexport function maybeRunValidator(request, functionName) {\n  const theValidator = getValidator(functionName, Parse.applicationId);\n  if (!theValidator) {\n    return;\n  }\n  if (typeof theValidator === 'object' && theValidator.skipWithMasterKey && request.master) {\n    request.skipWithMasterKey = true;\n  }\n  return new Promise((resolve, reject) => {\n    return Promise.resolve()\n      .then(() => {\n        return typeof theValidator === 'object'\n          ? builtInTriggerValidator(theValidator, request)\n          : theValidator(request);\n      })\n      .then(() => {\n        resolve();\n      })\n      .catch(e => {\n        const error = resolveError(e, {\n          code: Parse.Error.VALIDATION_ERROR,\n          message: 'Validation failed.',\n        });\n        reject(error);\n      });\n  });\n}\nfunction builtInTriggerValidator(options, request) {\n  if (request.master && !options.validateMasterKey) {\n    return;\n  }\n  let reqUser = request.user;\n  if (\n    !reqUser &&\n    request.object &&\n    request.object.className === '_User' &&\n    !request.object.existed()\n  ) {\n    reqUser = request.object;\n  }\n  if (options.requireUser && !reqUser) {\n    throw 'Validation failed. Please login to continue.';\n  }\n  if (options.requireMaster && !request.master) {\n    throw 'Validation failed. Master key is required to complete this request.';\n  }\n  let params = request.params || {};\n  if (request.object) {\n    params = request.object.toJSON();\n  }\n  const requiredParam = key => {\n    const value = params[key];\n    if (value == null) {\n      throw `Validation failed. Please specify data for ${key}.`;\n    }\n  };\n\n  const validateOptions = (opt, key, val) => {\n    let opts = opt.options;\n    if (typeof opts === 'function') {\n      try {\n        const result = opts(val);\n        if (!result && result != null) {\n          throw opt.error || `Validation failed. Invalid value for ${key}.`;\n        }\n      } catch (e) {\n        if (!e) {\n          throw opt.error || `Validation failed. Invalid value for ${key}.`;\n        }\n\n        throw opt.error || e.message || e;\n      }\n      return;\n    }\n    if (!Array.isArray(opts)) {\n      opts = [opt.options];\n    }\n\n    if (!opts.includes(val)) {\n      throw (\n        opt.error || `Validation failed. Invalid option for ${key}. Expected: ${opts.join(', ')}`\n      );\n    }\n  };\n\n  const getType = fn => {\n    const match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n    return (match ? match[1] : '').toLowerCase();\n  };\n  if (Array.isArray(options.fields)) {\n    for (const key of options.fields) {\n      requiredParam(key);\n    }\n  } else {\n    for (const key in options.fields) {\n      const opt = options.fields[key];\n      let val = params[key];\n      if (typeof opt === 'string') {\n        requiredParam(opt);\n      }\n      if (typeof opt === 'object') {\n        if (opt.default != null && val == null) {\n          val = opt.default;\n          params[key] = val;\n          if (request.object) {\n            request.object.set(key, val);\n          }\n        }\n        if (opt.constant && request.object) {\n          if (request.original) {\n            request.object.set(key, request.original.get(key));\n          } else if (opt.default != null) {\n            request.object.set(key, opt.default);\n          }\n        }\n        if (opt.required) {\n          requiredParam(key);\n        }\n        if (opt.type) {\n          const type = getType(opt.type);\n          if (type == 'array' && !Array.isArray(val)) {\n            throw `Validation failed. Invalid type for ${key}. Expected: array`;\n          } else if (typeof val !== type) {\n            throw `Validation failed. Invalid type for ${key}. Expected: ${type}`;\n          }\n        }\n        if (opt.options) {\n          validateOptions(opt, key, val);\n        }\n      }\n    }\n  }\n  const userKeys = options.requireUserKeys || [];\n  if (Array.isArray(userKeys)) {\n    for (const key of userKeys) {\n      if (!reqUser) {\n        throw 'Please login to make this request.';\n      }\n\n      if (reqUser.get(key) == null) {\n        throw `Validation failed. Please set data for ${key} on your account.`;\n      }\n    }\n  } else if (typeof userKeys === 'object') {\n    for (const key in options.requireUserKeys) {\n      const opt = options.requireUserKeys[key];\n      if (opt.options) {\n        validateOptions(opt, key, reqUser.get(key));\n      }\n    }\n  }\n}\n\n// To be used as part of the promise chain when saving/deleting an object\n// Will resolve successfully if no trigger is configured\n// Resolves to an object, empty or containing an object key. A beforeSave\n// trigger will set the object key to the rest format object to save.\n// originalParseObject is optional, we only need that for before/afterSave functions\nexport function maybeRunTrigger(\n  triggerType,\n  auth,\n  parseObject,\n  originalParseObject,\n  config,\n  context\n) {\n  if (!parseObject) {\n    return Promise.resolve({});\n  }\n  return new Promise(function (resolve, reject) {\n    var trigger = getTrigger(parseObject.className, triggerType, config.applicationId);\n    if (!trigger) return resolve();\n    var request = getRequestObject(\n      triggerType,\n      auth,\n      parseObject,\n      originalParseObject,\n      config,\n      context\n    );\n    var { success, error } = getResponseObject(\n      request,\n      object => {\n        logTriggerSuccessBeforeHook(\n          triggerType,\n          parseObject.className,\n          parseObject.toJSON(),\n          object,\n          auth\n        );\n        if (\n          triggerType === Types.beforeSave ||\n          triggerType === Types.afterSave ||\n          triggerType === Types.beforeDelete ||\n          triggerType === Types.afterDelete\n        ) {\n          Object.assign(context, request.context);\n        }\n        resolve(object);\n      },\n      error => {\n        logTriggerErrorBeforeHook(\n          triggerType,\n          parseObject.className,\n          parseObject.toJSON(),\n          auth,\n          error\n        );\n        reject(error);\n      }\n    );\n\n    // AfterSave and afterDelete triggers can return a promise, which if they\n    // do, needs to be resolved before this promise is resolved,\n    // so trigger execution is synced with RestWrite.execute() call.\n    // If triggers do not return a promise, they can run async code parallel\n    // to the RestWrite.execute() call.\n    return Promise.resolve()\n      .then(() => {\n        return maybeRunValidator(request, `${triggerType}.${parseObject.className}`);\n      })\n      .then(() => {\n        if (request.skipWithMasterKey) {\n          return Promise.resolve();\n        }\n        const promise = trigger(request);\n        if (\n          triggerType === Types.afterSave ||\n          triggerType === Types.afterDelete ||\n          triggerType === Types.afterLogin\n        ) {\n          logTriggerAfterHook(triggerType, parseObject.className, parseObject.toJSON(), auth);\n        }\n        // beforeSave is expected to return null (nothing)\n        if (triggerType === Types.beforeSave) {\n          if (promise && typeof promise.then === 'function') {\n            return promise.then(response => {\n              // response.object may come from express routing before hook\n              if (response && response.object) {\n                return response;\n              }\n              return null;\n            });\n          }\n          return null;\n        }\n\n        return promise;\n      })\n      .then(success, error);\n  });\n}\n\n// Converts a REST-format object to a Parse.Object\n// data is either className or an object\nexport function inflate(data, restObject) {\n  var copy = typeof data == 'object' ? data : { className: data };\n  for (var key in restObject) {\n    copy[key] = restObject[key];\n  }\n  return Parse.Object.fromJSON(copy);\n}\n\nexport function runLiveQueryEventHandlers(data, applicationId = Parse.applicationId) {\n  if (!_triggerStore || !_triggerStore[applicationId] || !_triggerStore[applicationId].LiveQuery) {\n    return;\n  }\n  _triggerStore[applicationId].LiveQuery.forEach(handler => handler(data));\n}\n\nexport function getRequestFileObject(triggerType, auth, fileObject, config) {\n  const request = {\n    ...fileObject,\n    triggerName: triggerType,\n    master: false,\n    log: config.loggerController,\n    headers: config.headers,\n    ip: config.ip,\n  };\n\n  if (!auth) {\n    return request;\n  }\n  if (auth.isMaster) {\n    request['master'] = true;\n  }\n  if (auth.user) {\n    request['user'] = auth.user;\n  }\n  if (auth.installationId) {\n    request['installationId'] = auth.installationId;\n  }\n  return request;\n}\n\nexport async function maybeRunFileTrigger(triggerType, fileObject, config, auth) {\n  const fileTrigger = getFileTrigger(triggerType, config.applicationId);\n  if (typeof fileTrigger === 'function') {\n    try {\n      const request = getRequestFileObject(triggerType, auth, fileObject, config);\n      await maybeRunValidator(request, `${triggerType}.${FileClassName}`);\n      if (request.skipWithMasterKey) {\n        return fileObject;\n      }\n      const result = await fileTrigger(request);\n      logTriggerSuccessBeforeHook(\n        triggerType,\n        'Parse.File',\n        { ...fileObject.file.toJSON(), fileSize: fileObject.fileSize },\n        result,\n        auth\n      );\n      return result || fileObject;\n    } catch (error) {\n      logTriggerErrorBeforeHook(\n        triggerType,\n        'Parse.File',\n        { ...fileObject.file.toJSON(), fileSize: fileObject.fileSize },\n        auth,\n        error\n      );\n      throw error;\n    }\n  }\n  return fileObject;\n}\n\nexport async function maybeRunConnectTrigger(triggerType, request) {\n  const trigger = getTrigger(ConnectClassName, triggerType, Parse.applicationId);\n  if (!trigger) {\n    return;\n  }\n  request.user = await userForSessionToken(request.sessionToken);\n  await maybeRunValidator(request, `${triggerType}.${ConnectClassName}`);\n  if (request.skipWithMasterKey) {\n    return;\n  }\n  return trigger(request);\n}\n\nexport async function maybeRunSubscribeTrigger(triggerType, className, request) {\n  const trigger = getTrigger(className, triggerType, Parse.applicationId);\n  if (!trigger) {\n    return;\n  }\n  const parseQuery = new Parse.Query(className);\n  parseQuery.withJSON(request.query);\n  request.query = parseQuery;\n  request.user = await userForSessionToken(request.sessionToken);\n  await maybeRunValidator(request, `${triggerType}.${className}`);\n  if (request.skipWithMasterKey) {\n    return;\n  }\n  await trigger(request);\n  const query = request.query.toJSON();\n  if (query.keys) {\n    query.fields = query.keys.split(',');\n  }\n  request.query = query;\n}\n\nexport async function maybeRunAfterEventTrigger(triggerType, className, request) {\n  const trigger = getTrigger(className, triggerType, Parse.applicationId);\n  if (!trigger) {\n    return;\n  }\n  if (request.object) {\n    request.object = Parse.Object.fromJSON(request.object);\n  }\n  if (request.original) {\n    request.original = Parse.Object.fromJSON(request.original);\n  }\n  request.user = await userForSessionToken(request.sessionToken);\n  await maybeRunValidator(request, `${triggerType}.${className}`);\n  if (request.skipWithMasterKey) {\n    return;\n  }\n  return trigger(request);\n}\n\nasync function userForSessionToken(sessionToken) {\n  if (!sessionToken) {\n    return;\n  }\n  const q = new Parse.Query('_Session');\n  q.equalTo('sessionToken', sessionToken);\n  q.include('user');\n  const session = await q.first({ useMasterKey: true });\n  if (!session) {\n    return;\n  }\n  return session.get('user');\n}\n"],"file":"triggers.js"}