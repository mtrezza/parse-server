{"version":3,"sources":["../src/password.js"],"names":["bcrypt","require","_bcrypt","hash","compare","verify","e","password","hashedPassword","Promise","resolve","module","exports"],"mappings":";;AAAA;AACA;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AAEA,IAAI;AACF,QAAMC,OAAO,GAAGD,OAAO,CAAC,iBAAD,CAAvB;;AACAD,EAAAA,MAAM,GAAG;AACPG,IAAAA,IAAI,EAAED,OAAO,CAACC,IADP;AAEPC,IAAAA,OAAO,EAAEF,OAAO,CAACG;AAFV,GAAT;AAID,CAND,CAME,OAAOC,CAAP,EAAU;AACV;AACD,C,CAED;;;AACA,SAASH,IAAT,CAAcI,QAAd,EAAwB;AACtB,SAAOP,MAAM,CAACG,IAAP,CAAYI,QAAZ,EAAsB,EAAtB,CAAP;AACD,C,CAED;AACA;;;AACA,SAASH,OAAT,CAAiBG,QAAjB,EAA2BC,cAA3B,EAA2C;AACzC;AACA,MAAI,CAACD,QAAD,IAAa,CAACC,cAAlB,EAAkC;AAChC,WAAOC,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;AACD;;AACD,SAAOV,MAAM,CAACI,OAAP,CAAeG,QAAf,EAAyBC,cAAzB,CAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AACfT,EAAAA,IAAI,EAAEA,IADS;AAEfC,EAAAA,OAAO,EAAEA;AAFM,CAAjB","sourcesContent":["// Tools for encrypting and decrypting passwords.\n// Basically promise-friendly wrappers for bcrypt.\nvar bcrypt = require('bcryptjs');\n\ntry {\n  const _bcrypt = require('@node-rs/bcrypt');\n  bcrypt = {\n    hash: _bcrypt.hash,\n    compare: _bcrypt.verify,\n  };\n} catch (e) {\n  /* */\n}\n\n// Returns a promise for a hashed password string.\nfunction hash(password) {\n  return bcrypt.hash(password, 10);\n}\n\n// Returns a promise for whether this password compares to equal this\n// hashed password.\nfunction compare(password, hashedPassword) {\n  // Cannot bcrypt compare when one is undefined\n  if (!password || !hashedPassword) {\n    return Promise.resolve(false);\n  }\n  return bcrypt.compare(password, hashedPassword);\n}\n\nmodule.exports = {\n  hash: hash,\n  compare: compare,\n};\n"],"file":"password.js"}