{"version":3,"sources":["../src/defaults.js"],"names":["ParseServerOptions","require","logsFolder","folder","process","env","TESTING","PARSE_SERVER_LOGS_FOLDER","verbose","level","VERBOSE","undefined","DefinitionDefaults","Object","keys","reduce","memo","key","def","prototype","hasOwnProperty","call","default","computedDefaults","jsonLogs","JSON_LOGS","assign","DefaultMongoURI","databaseURI"],"mappings":";;;;;;;AAAA;;AACA,MAAM;AAAEA,EAAAA;AAAF,IAAyBC,OAAO,CAAC,uBAAD,CAAtC;;AACA,MAAMC,UAAU,GAAG,CAAC,MAAM;AACxB,MAAIC,MAAM,GAAG,SAAb;;AACA,MAAI,OAAOC,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACC,GAAR,CAAYC,OAAZ,KAAwB,GAA9D,EAAmE;AACjEH,IAAAA,MAAM,GAAG,cAAT;AACD;;AACD,MAAIC,OAAO,CAACC,GAAR,CAAYE,wBAAhB,EAA0C;AACxCJ,IAAAA,MAAM,GAAG,yBAAWC,OAAO,CAACC,GAAR,CAAYE,wBAAvB,CAAT;AACD;;AACD,SAAOJ,MAAP;AACD,CATkB,GAAnB;;AAWA,MAAM;AAAEK,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAqB,CAAC,MAAM;AAChC,QAAMD,OAAO,GAAGJ,OAAO,CAACC,GAAR,CAAYK,OAAZ,GAAsB,IAAtB,GAA6B,KAA7C;AACA,SAAO;AAAEF,IAAAA,OAAF;AAAWC,IAAAA,KAAK,EAAED,OAAO,GAAG,SAAH,GAAeG;AAAxC,GAAP;AACD,CAH0B,GAA3B;;AAKA,MAAMC,kBAAkB,GAAGC,MAAM,CAACC,IAAP,CAAYd,kBAAZ,EAAgCe,MAAhC,CAAuC,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC/E,QAAMC,GAAG,GAAGlB,kBAAkB,CAACiB,GAAD,CAA9B;;AACA,MAAIJ,MAAM,CAACM,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCH,GAArC,EAA0C,SAA1C,CAAJ,EAA0D;AACxDF,IAAAA,IAAI,CAACC,GAAD,CAAJ,GAAYC,GAAG,CAACI,OAAhB;AACD;;AACD,SAAON,IAAP;AACD,CAN0B,EAMxB,EANwB,CAA3B;AAQA,MAAMO,gBAAgB,GAAG;AACvBC,EAAAA,QAAQ,EAAEpB,OAAO,CAACC,GAAR,CAAYoB,SAAZ,IAAyB,KADZ;AAEvBvB,EAAAA,UAFuB;AAGvBM,EAAAA,OAHuB;AAIvBC,EAAAA;AAJuB,CAAzB;;eAOeI,MAAM,CAACa,MAAP,CAAc,EAAd,EAAkBd,kBAAlB,EAAsCW,gBAAtC,C;;;AACR,MAAMI,eAAe,GAAGf,kBAAkB,CAACgB,WAA3C","sourcesContent":["import { nullParser } from './Options/parsers';\nconst { ParseServerOptions } = require('./Options/Definitions');\nconst logsFolder = (() => {\n  let folder = './logs/';\n  if (typeof process !== 'undefined' && process.env.TESTING === '1') {\n    folder = './test_logs/';\n  }\n  if (process.env.PARSE_SERVER_LOGS_FOLDER) {\n    folder = nullParser(process.env.PARSE_SERVER_LOGS_FOLDER);\n  }\n  return folder;\n})();\n\nconst { verbose, level } = (() => {\n  const verbose = process.env.VERBOSE ? true : false;\n  return { verbose, level: verbose ? 'verbose' : undefined };\n})();\n\nconst DefinitionDefaults = Object.keys(ParseServerOptions).reduce((memo, key) => {\n  const def = ParseServerOptions[key];\n  if (Object.prototype.hasOwnProperty.call(def, 'default')) {\n    memo[key] = def.default;\n  }\n  return memo;\n}, {});\n\nconst computedDefaults = {\n  jsonLogs: process.env.JSON_LOGS || false,\n  logsFolder,\n  verbose,\n  level,\n};\n\nexport default Object.assign({}, DefinitionDefaults, computedDefaults);\nexport const DefaultMongoURI = DefinitionDefaults.databaseURI;\n"],"file":"defaults.js"}