{"version":3,"sources":["../../../src/GraphQL/loaders/defaultGraphQLQueries.js"],"names":["load","parseGraphQLSchema","addGraphQLQuery","description","type","GraphQLNonNull","GraphQLBoolean","resolve","usersQueries","schemaQueries"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;AAEA,MAAMA,IAAI,GAAGC,kBAAkB,IAAI;AACjCA,EAAAA,kBAAkB,CAACC,eAAnB,CACE,QADF,EAEE;AACEC,IAAAA,WAAW,EAAE,wEADf;AAEEC,IAAAA,IAAI,EAAE,IAAIC,uBAAJ,CAAmBC,uBAAnB,CAFR;AAGEC,IAAAA,OAAO,EAAE,MAAM;AAHjB,GAFF,EAOE,IAPF,EAQE,IARF;AAWAC,EAAAA,YAAY,CAACR,IAAb,CAAkBC,kBAAlB;AACAQ,EAAAA,aAAa,CAACT,IAAd,CAAmBC,kBAAnB;AACD,CAdD","sourcesContent":["import { GraphQLNonNull, GraphQLBoolean } from 'graphql';\nimport * as usersQueries from './usersQueries';\nimport * as schemaQueries from './schemaQueries';\n\nconst load = parseGraphQLSchema => {\n  parseGraphQLSchema.addGraphQLQuery(\n    'health',\n    {\n      description: 'The health query can be used to check if the server is up and running.',\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: () => true,\n    },\n    true,\n    true\n  );\n\n  usersQueries.load(parseGraphQLSchema);\n  schemaQueries.load(parseGraphQLSchema);\n};\n\nexport { load };\n"],"file":"defaultGraphQLQueries.js"}