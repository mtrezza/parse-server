{"version":3,"sources":["../../../src/GraphQL/helpers/objectsQueries.js"],"names":["needToGetAllKeys","fields","keys","parseClasses","split","some","keyName","key","type","subClass","find","className","parseClassName","targetClass","getObject","objectId","include","readPreference","includeReadPreference","config","auth","info","options","e","console","log","response","rest","get","clientSDK","context","results","length","Parse","Error","OBJECT_NOT_FOUND","object","sessionToken","findObjects","where","order","skipInput","first","after","last","before","includeAll","subqueryReadPreference","selectedFields","skipAndLimitCalculation","calculateSkipAndLimit","maxLimit","skip","limit","needToPreCount","preCount","undefined","preCountOptions","count","Object","field","startsWith","includes","findResult","edges","pageInfo","map","result","index","cursor","node","hasPreviousPage","startCursor","endCursor","hasNextPage","INVALID_QUERY"],"mappings":"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","sourcesContent":["import Parse from 'parse/node';\nimport { offsetToCursor, cursorToOffset } from 'graphql-relay';\nimport rest from '../../rest';\nimport { transformQueryInputToParse } from '../transformers/query';\n\n// Eslint/Prettier conflict\n/* eslint-disable*/\nconst needToGetAllKeys = (fields, keys, parseClasses) =>\n  keys\n    ? keys.split(',').some(keyName => {\n        const key = keyName.split('.');\n        if (fields[key[0]]) {\n          if (fields[key[0]].type === 'Relation') return false;\n          if (fields[key[0]].type === 'Pointer') {\n            const subClass = parseClasses.find(\n              ({ className: parseClassName }) => fields[key[0]].targetClass === parseClassName\n            );\n            if (subClass && subClass.fields[key[1]]) {\n              // Current sub key is not custom\n              return false;\n            }\n          } else if (\n            !key[1] ||\n            fields[key[0]].type === 'Array' ||\n            fields[key[0]].type === 'Object'\n          ) {\n            // current key is not custom\n            return false;\n          }\n        }\n        // Key not found into Parse Schema so it's custom\n        return true;\n      })\n    : true;\n/* eslint-enable*/\n\nconst getObject = async (\n  className,\n  objectId,\n  keys,\n  include,\n  readPreference,\n  includeReadPreference,\n  config,\n  auth,\n  info,\n  parseClasses\n) => {\n  const options = {};\n  try {\n    if (\n      !needToGetAllKeys(\n        parseClasses.find(({ className: parseClassName }) => className === parseClassName).fields,\n        keys,\n        parseClasses\n      )\n    ) {\n      options.keys = keys;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  if (include) {\n    options.include = include;\n    if (includeReadPreference) {\n      options.includeReadPreference = includeReadPreference;\n    }\n  }\n  if (readPreference) {\n    options.readPreference = readPreference;\n  }\n\n  const response = await rest.get(\n    config,\n    auth,\n    className,\n    objectId,\n    options,\n    info.clientSDK,\n    info.context\n  );\n\n  if (!response.results || response.results.length == 0) {\n    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Object not found.');\n  }\n\n  const object = response.results[0];\n  if (className === '_User') {\n    delete object.sessionToken;\n  }\n  return object;\n};\n\nconst findObjects = async (\n  className,\n  where,\n  order,\n  skipInput,\n  first,\n  after,\n  last,\n  before,\n  keys,\n  include,\n  includeAll,\n  readPreference,\n  includeReadPreference,\n  subqueryReadPreference,\n  config,\n  auth,\n  info,\n  selectedFields,\n  parseClasses\n) => {\n  if (!where) {\n    where = {};\n  }\n  transformQueryInputToParse(where, className, parseClasses);\n  const skipAndLimitCalculation = calculateSkipAndLimit(\n    skipInput,\n    first,\n    after,\n    last,\n    before,\n    config.maxLimit\n  );\n  let { skip } = skipAndLimitCalculation;\n  const { limit, needToPreCount } = skipAndLimitCalculation;\n  let preCount = undefined;\n  if (needToPreCount) {\n    const preCountOptions = {\n      limit: 0,\n      count: true,\n    };\n    if (readPreference) {\n      preCountOptions.readPreference = readPreference;\n    }\n    if (Object.keys(where).length > 0 && subqueryReadPreference) {\n      preCountOptions.subqueryReadPreference = subqueryReadPreference;\n    }\n    preCount = (\n      await rest.find(config, auth, className, where, preCountOptions, info.clientSDK, info.context)\n    ).count;\n    if ((skip || 0) + limit < preCount) {\n      skip = preCount - limit;\n    }\n  }\n\n  const options = {};\n\n  if (selectedFields.find(field => field.startsWith('edges.') || field.startsWith('pageInfo.'))) {\n    if (limit || limit === 0) {\n      options.limit = limit;\n    } else {\n      options.limit = 100;\n    }\n    if (options.limit !== 0) {\n      if (order) {\n        options.order = order;\n      }\n      if (skip) {\n        options.skip = skip;\n      }\n      if (config.maxLimit && options.limit > config.maxLimit) {\n        // Silently replace the limit on the query with the max configured\n        options.limit = config.maxLimit;\n      }\n      if (\n        !needToGetAllKeys(\n          parseClasses.find(({ className: parseClassName }) => className === parseClassName).fields,\n          keys,\n          parseClasses\n        )\n      ) {\n        options.keys = keys;\n      }\n      if (includeAll === true) {\n        options.includeAll = includeAll;\n      }\n      if (!options.includeAll && include) {\n        options.include = include;\n      }\n      if ((options.includeAll || options.include) && includeReadPreference) {\n        options.includeReadPreference = includeReadPreference;\n      }\n    }\n  } else {\n    options.limit = 0;\n  }\n\n  if (\n    (selectedFields.includes('count') ||\n      selectedFields.includes('pageInfo.hasPreviousPage') ||\n      selectedFields.includes('pageInfo.hasNextPage')) &&\n    !needToPreCount\n  ) {\n    options.count = true;\n  }\n\n  if (readPreference) {\n    options.readPreference = readPreference;\n  }\n  if (Object.keys(where).length > 0 && subqueryReadPreference) {\n    options.subqueryReadPreference = subqueryReadPreference;\n  }\n\n  let results, count;\n  if (options.count || !options.limit || (options.limit && options.limit > 0)) {\n    const findResult = await rest.find(\n      config,\n      auth,\n      className,\n      where,\n      options,\n      info.clientSDK,\n      info.context\n    );\n    results = findResult.results;\n    count = findResult.count;\n  }\n\n  let edges = null;\n  let pageInfo = null;\n  if (results) {\n    edges = results.map((result, index) => ({\n      cursor: offsetToCursor((skip || 0) + index),\n      node: result,\n    }));\n\n    pageInfo = {\n      hasPreviousPage:\n        ((preCount && preCount > 0) || (count && count > 0)) && skip !== undefined && skip > 0,\n      startCursor: offsetToCursor(skip || 0),\n      endCursor: offsetToCursor((skip || 0) + (results.length || 1) - 1),\n      hasNextPage: (preCount || count) > (skip || 0) + results.length,\n    };\n  }\n\n  return {\n    edges,\n    pageInfo,\n    count: preCount || count,\n  };\n};\n\nconst calculateSkipAndLimit = (skipInput, first, after, last, before, maxLimit) => {\n  let skip = undefined;\n  let limit = undefined;\n  let needToPreCount = false;\n\n  // Validates the skip input\n  if (skipInput || skipInput === 0) {\n    if (skipInput < 0) {\n      throw new Parse.Error(Parse.Error.INVALID_QUERY, 'Skip should be a positive number');\n    }\n    skip = skipInput;\n  }\n\n  // Validates the after param\n  if (after) {\n    after = cursorToOffset(after);\n    if ((!after && after !== 0) || after < 0) {\n      throw new Parse.Error(Parse.Error.INVALID_QUERY, 'After is not a valid cursor');\n    }\n\n    // If skip and after are passed, a new skip is calculated by adding them\n    skip = (skip || 0) + (after + 1);\n  }\n\n  // Validates the first param\n  if (first || first === 0) {\n    if (first < 0) {\n      throw new Parse.Error(Parse.Error.INVALID_QUERY, 'First should be a positive number');\n    }\n\n    // The first param is translated to the limit param of the Parse legacy API\n    limit = first;\n  }\n\n  // Validates the before param\n  if (before || before === 0) {\n    // This method converts the cursor to the index of the object\n    before = cursorToOffset(before);\n    if ((!before && before !== 0) || before < 0) {\n      throw new Parse.Error(Parse.Error.INVALID_QUERY, 'Before is not a valid cursor');\n    }\n\n    if ((skip || 0) >= before) {\n      // If the before index is less then the skip, no objects will be returned\n      limit = 0;\n    } else if ((!limit && limit !== 0) || (skip || 0) + limit > before) {\n      // If there is no limit set, the limit is calculated. Or, if the limit (plus skip) is bigger than the before index, the new limit is set.\n      limit = before - (skip || 0);\n    }\n  }\n\n  // Validates the last param\n  if (last || last === 0) {\n    if (last < 0) {\n      throw new Parse.Error(Parse.Error.INVALID_QUERY, 'Last should be a positive number');\n    }\n\n    if (last > maxLimit) {\n      // Last can't be bigger than Parse server maxLimit config.\n      last = maxLimit;\n    }\n\n    if (limit || limit === 0) {\n      // If there is a previous limit set, it may be adjusted\n      if (last < limit) {\n        // if last is less than the current limit\n        skip = (skip || 0) + (limit - last); // The skip is adjusted\n        limit = last; // the limit is adjusted\n      }\n    } else if (last === 0) {\n      // No objects will be returned\n      limit = 0;\n    } else {\n      // No previous limit set, the limit will be equal to last and pre count is needed.\n      limit = last;\n      needToPreCount = true;\n    }\n  }\n  return {\n    skip,\n    limit,\n    needToPreCount,\n  };\n};\n\nexport { getObject, findObjects, calculateSkipAndLimit, needToGetAllKeys };\n"],"file":"objectsQueries.js"}