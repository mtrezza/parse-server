{"version":3,"sources":["../../src/Routers/InstallationsRouter.js"],"names":["InstallationsRouter","ClassesRouter","className","handleFind","req","body","Object","assign","JSONFromQuery","query","options","optionsFromBody","rest","find","config","auth","where","info","clientSDK","context","then","response","mountRoutes","route","handleGet","promiseEnsureIdempotency","handleCreate","handleUpdate","handleDelete"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;;;AAJA;AAMO,MAAMA,mBAAN,SAAkCC,sBAAlC,CAAgD;AACrDC,EAAAA,SAAS,GAAG;AACV,WAAO,eAAP;AACD;;AAEDC,EAAAA,UAAU,CAACC,GAAD,EAAM;AACd,UAAMC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAcH,GAAG,CAACC,IAAlB,EAAwBJ,uBAAcO,aAAd,CAA4BJ,GAAG,CAACK,KAAhC,CAAxB,CAAb;;AACA,UAAMC,OAAO,GAAGT,uBAAcU,eAAd,CAA8BN,IAA9B,CAAhB;;AACA,WAAOO,cACJC,IADI,CAEHT,GAAG,CAACU,MAFD,EAGHV,GAAG,CAACW,IAHD,EAIH,eAJG,EAKHV,IAAI,CAACW,KALF,EAMHN,OANG,EAOHN,GAAG,CAACa,IAAJ,CAASC,SAPN,EAQHd,GAAG,CAACa,IAAJ,CAASE,OARN,EAUJC,IAVI,CAUCC,QAAQ,IAAI;AAChB,aAAO;AAAEA,QAAAA,QAAQ,EAAEA;AAAZ,OAAP;AACD,KAZI,CAAP;AAaD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,SAAKC,KAAL,CAAW,KAAX,EAAkB,gBAAlB,EAAoCnB,GAAG,IAAI;AACzC,aAAO,KAAKD,UAAL,CAAgBC,GAAhB,CAAP;AACD,KAFD;AAGA,SAAKmB,KAAL,CAAW,KAAX,EAAkB,0BAAlB,EAA8CnB,GAAG,IAAI;AACnD,aAAO,KAAKoB,SAAL,CAAepB,GAAf,CAAP;AACD,KAFD;AAGA,SAAKmB,KAAL,CAAW,MAAX,EAAmB,gBAAnB,EAAqCE,qCAArC,EAA+DrB,GAAG,IAAI;AACpE,aAAO,KAAKsB,YAAL,CAAkBtB,GAAlB,CAAP;AACD,KAFD;AAGA,SAAKmB,KAAL,CAAW,KAAX,EAAkB,0BAAlB,EAA8CE,qCAA9C,EAAwErB,GAAG,IAAI;AAC7E,aAAO,KAAKuB,YAAL,CAAkBvB,GAAlB,CAAP;AACD,KAFD;AAGA,SAAKmB,KAAL,CAAW,QAAX,EAAqB,0BAArB,EAAiDnB,GAAG,IAAI;AACtD,aAAO,KAAKwB,YAAL,CAAkBxB,GAAlB,CAAP;AACD,KAFD;AAGD;;AAvCoD;;;eA0CxCJ,mB","sourcesContent":["// InstallationsRouter.js\n\nimport ClassesRouter from './ClassesRouter';\nimport rest from '../rest';\nimport { promiseEnsureIdempotency } from '../middlewares';\n\nexport class InstallationsRouter extends ClassesRouter {\n  className() {\n    return '_Installation';\n  }\n\n  handleFind(req) {\n    const body = Object.assign(req.body, ClassesRouter.JSONFromQuery(req.query));\n    const options = ClassesRouter.optionsFromBody(body);\n    return rest\n      .find(\n        req.config,\n        req.auth,\n        '_Installation',\n        body.where,\n        options,\n        req.info.clientSDK,\n        req.info.context\n      )\n      .then(response => {\n        return { response: response };\n      });\n  }\n\n  mountRoutes() {\n    this.route('GET', '/installations', req => {\n      return this.handleFind(req);\n    });\n    this.route('GET', '/installations/:objectId', req => {\n      return this.handleGet(req);\n    });\n    this.route('POST', '/installations', promiseEnsureIdempotency, req => {\n      return this.handleCreate(req);\n    });\n    this.route('PUT', '/installations/:objectId', promiseEnsureIdempotency, req => {\n      return this.handleUpdate(req);\n    });\n    this.route('DELETE', '/installations/:objectId', req => {\n      return this.handleDelete(req);\n    });\n  }\n}\n\nexport default InstallationsRouter;\n"],"file":"InstallationsRouter.js"}