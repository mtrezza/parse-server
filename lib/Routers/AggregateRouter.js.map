{"version":3,"sources":["../../src/Routers/AggregateRouter.js"],"names":["BASE_KEYS","PIPELINE_KEYS","ALLOWED_KEYS","AggregateRouter","ClassesRouter","handleFind","req","body","Object","assign","JSONFromQuery","query","options","distinct","String","hint","explain","readPreference","pipeline","getPipeline","where","JSON","parse","rest","find","config","auth","className","info","clientSDK","context","then","response","result","results","UsersRouter","removeHiddenProperties","Array","isArray","keys","map","key","stage","length","Error","join","transformStage","stageName","indexOf","Parse","INVALID_QUERY","prototype","hasOwnProperty","call","_id","objectId","mountRoutes","route","middleware","promiseEnforceMasterKeyAccess"],"mappings":"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","sourcesContent":["import ClassesRouter from './ClassesRouter';\nimport rest from '../rest';\nimport * as middleware from '../middlewares';\nimport Parse from 'parse/node';\nimport UsersRouter from './UsersRouter';\n\nconst BASE_KEYS = ['where', 'distinct', 'pipeline', 'hint', 'explain'];\n\nconst PIPELINE_KEYS = [\n  'addFields',\n  'bucket',\n  'bucketAuto',\n  'collStats',\n  'count',\n  'currentOp',\n  'facet',\n  'geoNear',\n  'graphLookup',\n  'group',\n  'indexStats',\n  'limit',\n  'listLocalSessions',\n  'listSessions',\n  'lookup',\n  'match',\n  'out',\n  'project',\n  'redact',\n  'replaceRoot',\n  'sample',\n  'skip',\n  'sort',\n  'sortByCount',\n  'unwind',\n];\n\nconst ALLOWED_KEYS = [...BASE_KEYS, ...PIPELINE_KEYS];\n\nexport class AggregateRouter extends ClassesRouter {\n  handleFind(req) {\n    const body = Object.assign(req.body, ClassesRouter.JSONFromQuery(req.query));\n    const options = {};\n    if (body.distinct) {\n      options.distinct = String(body.distinct);\n    }\n    if (body.hint) {\n      options.hint = body.hint;\n      delete body.hint;\n    }\n    if (body.explain) {\n      options.explain = body.explain;\n      delete body.explain;\n    }\n    if (body.readPreference) {\n      options.readPreference = body.readPreference;\n      delete body.readPreference;\n    }\n    options.pipeline = AggregateRouter.getPipeline(body);\n    if (typeof body.where === 'string') {\n      body.where = JSON.parse(body.where);\n    }\n    return rest\n      .find(\n        req.config,\n        req.auth,\n        this.className(req),\n        body.where,\n        options,\n        req.info.clientSDK,\n        req.info.context\n      )\n      .then(response => {\n        for (const result of response.results) {\n          if (typeof result === 'object') {\n            UsersRouter.removeHiddenProperties(result);\n          }\n        }\n        return { response };\n      });\n  }\n\n  /* Builds a pipeline from the body. Originally the body could be passed as a single object,\n   * and now we support many options\n   *\n   * Array\n   *\n   * body: [{\n   *   group: { objectId: '$name' },\n   * }]\n   *\n   * Object\n   *\n   * body: {\n   *   group: { objectId: '$name' },\n   * }\n   *\n   *\n   * Pipeline Operator with an Array or an Object\n   *\n   * body: {\n   *   pipeline: {\n   *     group: { objectId: '$name' },\n   *   }\n   * }\n   *\n   */\n  static getPipeline(body) {\n    let pipeline = body.pipeline || body;\n    if (!Array.isArray(pipeline)) {\n      pipeline = Object.keys(pipeline).map(key => {\n        return { [key]: pipeline[key] };\n      });\n    }\n\n    return pipeline.map(stage => {\n      const keys = Object.keys(stage);\n      if (keys.length != 1) {\n        throw new Error(`Pipeline stages should only have one key found ${keys.join(', ')}`);\n      }\n      return AggregateRouter.transformStage(keys[0], stage);\n    });\n  }\n\n  static transformStage(stageName, stage) {\n    if (ALLOWED_KEYS.indexOf(stageName) === -1) {\n      throw new Parse.Error(Parse.Error.INVALID_QUERY, `Invalid parameter for query: ${stageName}`);\n    }\n    if (stageName === 'group') {\n      if (Object.prototype.hasOwnProperty.call(stage[stageName], '_id')) {\n        throw new Parse.Error(\n          Parse.Error.INVALID_QUERY,\n          `Invalid parameter for query: group. Please use objectId instead of _id`\n        );\n      }\n      if (!Object.prototype.hasOwnProperty.call(stage[stageName], 'objectId')) {\n        throw new Parse.Error(\n          Parse.Error.INVALID_QUERY,\n          `Invalid parameter for query: group. objectId is required`\n        );\n      }\n      stage[stageName]._id = stage[stageName].objectId;\n      delete stage[stageName].objectId;\n    }\n    return { [`$${stageName}`]: stage[stageName] };\n  }\n\n  mountRoutes() {\n    this.route('GET', '/aggregate/:className', middleware.promiseEnforceMasterKeyAccess, req => {\n      return this.handleFind(req);\n    });\n  }\n}\n\nexport default AggregateRouter;\n"],"file":"AggregateRouter.js"}