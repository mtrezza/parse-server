{"version":3,"sources":["../../src/Routers/FunctionsRouter.js"],"names":["Parse","require","triggers","parseObject","obj","Array","isArray","map","item","__type","Object","assign","Date","iso","File","fromJSON","parseParams","params","_","mapValues","FunctionsRouter","PromiseRouter","mountRoutes","route","promiseEnsureIdempotency","handleCloudFunction","promiseEnforceMasterKeyAccess","req","handleCloudJob","jobName","body","applicationId","config","jobHandler","jobFunction","getJob","Error","SCRIPT_FAILED","query","request","log","loggerController","headers","ip","message","setMessage","bind","setRunning","then","jobStatus","jobId","objectId","process","nextTick","Promise","resolve","result","setSucceeded","error","setFailed","response","createResponseObject","reject","success","_encode","resolveError","functionName","theFunction","getFunction","master","auth","isMaster","user","installationId","info","context","userString","id","undefined","cleanInput","logger","truncateLogMessage","JSON","stringify","cleanResult","e","maybeRunValidator"],"mappings":"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","sourcesContent":["// FunctionsRouter.js\n\nvar Parse = require('parse/node').Parse,\n  triggers = require('../triggers');\n\nimport PromiseRouter from '../PromiseRouter';\nimport { promiseEnforceMasterKeyAccess, promiseEnsureIdempotency } from '../middlewares';\nimport { jobStatusHandler } from '../StatusHandler';\nimport _ from 'lodash';\nimport { logger } from '../logger';\n\nfunction parseObject(obj) {\n  if (Array.isArray(obj)) {\n    return obj.map(item => {\n      return parseObject(item);\n    });\n  } else if (obj && obj.__type == 'Date') {\n    return Object.assign(new Date(obj.iso), obj);\n  } else if (obj && obj.__type == 'File') {\n    return Parse.File.fromJSON(obj);\n  } else if (obj && typeof obj === 'object') {\n    return parseParams(obj);\n  } else {\n    return obj;\n  }\n}\n\nfunction parseParams(params) {\n  return _.mapValues(params, parseObject);\n}\n\nexport class FunctionsRouter extends PromiseRouter {\n  mountRoutes() {\n    this.route(\n      'POST',\n      '/functions/:functionName',\n      promiseEnsureIdempotency,\n      FunctionsRouter.handleCloudFunction\n    );\n    this.route(\n      'POST',\n      '/jobs/:jobName',\n      promiseEnsureIdempotency,\n      promiseEnforceMasterKeyAccess,\n      function (req) {\n        return FunctionsRouter.handleCloudJob(req);\n      }\n    );\n    this.route('POST', '/jobs', promiseEnforceMasterKeyAccess, function (req) {\n      return FunctionsRouter.handleCloudJob(req);\n    });\n  }\n\n  static handleCloudJob(req) {\n    const jobName = req.params.jobName || req.body.jobName;\n    const applicationId = req.config.applicationId;\n    const jobHandler = jobStatusHandler(req.config);\n    const jobFunction = triggers.getJob(jobName, applicationId);\n    if (!jobFunction) {\n      throw new Parse.Error(Parse.Error.SCRIPT_FAILED, 'Invalid job.');\n    }\n    let params = Object.assign({}, req.body, req.query);\n    params = parseParams(params);\n    const request = {\n      params: params,\n      log: req.config.loggerController,\n      headers: req.config.headers,\n      ip: req.config.ip,\n      jobName,\n      message: jobHandler.setMessage.bind(jobHandler),\n    };\n\n    return jobHandler.setRunning(jobName, params).then(jobStatus => {\n      request.jobId = jobStatus.objectId;\n      // run the function async\n      process.nextTick(() => {\n        Promise.resolve()\n          .then(() => {\n            return jobFunction(request);\n          })\n          .then(\n            result => {\n              jobHandler.setSucceeded(result);\n            },\n            error => {\n              jobHandler.setFailed(error);\n            }\n          );\n      });\n      return {\n        headers: {\n          'X-Parse-Job-Status-Id': jobStatus.objectId,\n        },\n        response: {},\n      };\n    });\n  }\n\n  static createResponseObject(resolve, reject) {\n    return {\n      success: function (result) {\n        resolve({\n          response: {\n            result: Parse._encode(result),\n          },\n        });\n      },\n      error: function (message) {\n        const error = triggers.resolveError(message);\n        reject(error);\n      },\n    };\n  }\n  static handleCloudFunction(req) {\n    const functionName = req.params.functionName;\n    const applicationId = req.config.applicationId;\n    const theFunction = triggers.getFunction(functionName, applicationId);\n\n    if (!theFunction) {\n      throw new Parse.Error(Parse.Error.SCRIPT_FAILED, `Invalid function: \"${functionName}\"`);\n    }\n    let params = Object.assign({}, req.body, req.query);\n    params = parseParams(params);\n    const request = {\n      params: params,\n      master: req.auth && req.auth.isMaster,\n      user: req.auth && req.auth.user,\n      installationId: req.info.installationId,\n      log: req.config.loggerController,\n      headers: req.config.headers,\n      ip: req.config.ip,\n      functionName,\n      context: req.info.context,\n    };\n\n    return new Promise(function (resolve, reject) {\n      const userString = req.auth && req.auth.user ? req.auth.user.id : undefined;\n      const cleanInput = logger.truncateLogMessage(JSON.stringify(params));\n      const { success, error } = FunctionsRouter.createResponseObject(\n        result => {\n          try {\n            const cleanResult = logger.truncateLogMessage(JSON.stringify(result.response.result));\n            logger.info(\n              `Ran cloud function ${functionName} for user ${userString} with:\\n  Input: ${cleanInput}\\n  Result: ${cleanResult}`,\n              {\n                functionName,\n                params,\n                user: userString,\n              }\n            );\n            resolve(result);\n          } catch (e) {\n            reject(e);\n          }\n        },\n        error => {\n          try {\n            logger.error(\n              `Failed running cloud function ${functionName} for user ${userString} with:\\n  Input: ${cleanInput}\\n  Error: ` +\n                JSON.stringify(error),\n              {\n                functionName,\n                error,\n                params,\n                user: userString,\n              }\n            );\n            reject(error);\n          } catch (e) {\n            reject(e);\n          }\n        }\n      );\n      return Promise.resolve()\n        .then(() => {\n          return triggers.maybeRunValidator(request, functionName);\n        })\n        .then(() => {\n          return theFunction(request);\n        })\n        .then(success, error);\n    });\n  }\n}\n"],"file":"FunctionsRouter.js"}