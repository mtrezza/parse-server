{"version":3,"sources":["../../src/Routers/ClassesRouter.js"],"names":["ALLOWED_GET_QUERY_KEYS","ClassesRouter","PromiseRouter","className","req","params","handleFind","body","Object","assign","JSONFromQuery","query","options","optionsFromBody","config","maxLimit","limit","Number","redirectClassNameForKey","String","where","JSON","parse","rest","find","auth","info","clientSDK","context","then","response","handleGet","key","keys","indexOf","Parse","Error","INVALID_QUERY","include","excludeKeys","readPreference","includeReadPreference","subqueryReadPreference","get","objectId","results","length","OBJECT_NOT_FOUND","sessionToken","user","id","handleCreate","create","handleUpdate","update","handleDelete","del","json","value","_","entries","e","allowConstraints","skip","order","count","includeAll","hint","explain","mountRoutes","route","promiseEnsureIdempotency"],"mappings":"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","sourcesContent":["import PromiseRouter from '../PromiseRouter';\nimport rest from '../rest';\nimport _ from 'lodash';\nimport Parse from 'parse/node';\nimport { promiseEnsureIdempotency } from '../middlewares';\n\nconst ALLOWED_GET_QUERY_KEYS = [\n  'keys',\n  'include',\n  'excludeKeys',\n  'readPreference',\n  'includeReadPreference',\n  'subqueryReadPreference',\n];\n\nexport class ClassesRouter extends PromiseRouter {\n  className(req) {\n    return req.params.className;\n  }\n\n  handleFind(req) {\n    const body = Object.assign(req.body, ClassesRouter.JSONFromQuery(req.query));\n    const options = ClassesRouter.optionsFromBody(body);\n    if (req.config.maxLimit && body.limit > req.config.maxLimit) {\n      // Silently replace the limit on the query with the max configured\n      options.limit = Number(req.config.maxLimit);\n    }\n    if (body.redirectClassNameForKey) {\n      options.redirectClassNameForKey = String(body.redirectClassNameForKey);\n    }\n    if (typeof body.where === 'string') {\n      body.where = JSON.parse(body.where);\n    }\n    return rest\n      .find(\n        req.config,\n        req.auth,\n        this.className(req),\n        body.where,\n        options,\n        req.info.clientSDK,\n        req.info.context\n      )\n      .then(response => {\n        return { response: response };\n      });\n  }\n\n  // Returns a promise for a {response} object.\n  handleGet(req) {\n    const body = Object.assign(req.body, ClassesRouter.JSONFromQuery(req.query));\n    const options = {};\n\n    for (const key of Object.keys(body)) {\n      if (ALLOWED_GET_QUERY_KEYS.indexOf(key) === -1) {\n        throw new Parse.Error(Parse.Error.INVALID_QUERY, 'Improper encode of parameter');\n      }\n    }\n\n    if (typeof body.keys === 'string') {\n      options.keys = body.keys;\n    }\n    if (body.include) {\n      options.include = String(body.include);\n    }\n    if (typeof body.excludeKeys == 'string') {\n      options.excludeKeys = body.excludeKeys;\n    }\n    if (typeof body.readPreference === 'string') {\n      options.readPreference = body.readPreference;\n    }\n    if (typeof body.includeReadPreference === 'string') {\n      options.includeReadPreference = body.includeReadPreference;\n    }\n    if (typeof body.subqueryReadPreference === 'string') {\n      options.subqueryReadPreference = body.subqueryReadPreference;\n    }\n\n    return rest\n      .get(\n        req.config,\n        req.auth,\n        this.className(req),\n        req.params.objectId,\n        options,\n        req.info.clientSDK\n      )\n      .then(response => {\n        if (!response.results || response.results.length == 0) {\n          throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Object not found.');\n        }\n\n        if (this.className(req) === '_User') {\n          delete response.results[0].sessionToken;\n\n          const user = response.results[0];\n\n          if (req.auth.user && user.objectId == req.auth.user.id) {\n            // Force the session token\n            response.results[0].sessionToken = req.info.sessionToken;\n          }\n        }\n        return { response: response.results[0] };\n      });\n  }\n\n  handleCreate(req) {\n    return rest.create(\n      req.config,\n      req.auth,\n      this.className(req),\n      req.body,\n      req.info.clientSDK,\n      req.info.context\n    );\n  }\n\n  handleUpdate(req) {\n    const where = { objectId: req.params.objectId };\n    return rest.update(\n      req.config,\n      req.auth,\n      this.className(req),\n      where,\n      req.body,\n      req.info.clientSDK,\n      req.info.context\n    );\n  }\n\n  handleDelete(req) {\n    return rest\n      .del(req.config, req.auth, this.className(req), req.params.objectId, req.info.context)\n      .then(() => {\n        return { response: {} };\n      });\n  }\n\n  static JSONFromQuery(query) {\n    const json = {};\n    for (const [key, value] of _.entries(query)) {\n      try {\n        json[key] = JSON.parse(value);\n      } catch (e) {\n        json[key] = value;\n      }\n    }\n    return json;\n  }\n\n  static optionsFromBody(body) {\n    const allowConstraints = [\n      'skip',\n      'limit',\n      'order',\n      'count',\n      'keys',\n      'excludeKeys',\n      'include',\n      'includeAll',\n      'redirectClassNameForKey',\n      'where',\n      'readPreference',\n      'includeReadPreference',\n      'subqueryReadPreference',\n      'hint',\n      'explain',\n    ];\n\n    for (const key of Object.keys(body)) {\n      if (allowConstraints.indexOf(key) === -1) {\n        throw new Parse.Error(Parse.Error.INVALID_QUERY, `Invalid parameter for query: ${key}`);\n      }\n    }\n    const options = {};\n    if (body.skip) {\n      options.skip = Number(body.skip);\n    }\n    if (body.limit || body.limit === 0) {\n      options.limit = Number(body.limit);\n    } else {\n      options.limit = Number(100);\n    }\n    if (body.order) {\n      options.order = String(body.order);\n    }\n    if (body.count) {\n      options.count = true;\n    }\n    if (typeof body.keys == 'string') {\n      options.keys = body.keys;\n    }\n    if (typeof body.excludeKeys == 'string') {\n      options.excludeKeys = body.excludeKeys;\n    }\n    if (body.include) {\n      options.include = String(body.include);\n    }\n    if (body.includeAll) {\n      options.includeAll = true;\n    }\n    if (typeof body.readPreference === 'string') {\n      options.readPreference = body.readPreference;\n    }\n    if (typeof body.includeReadPreference === 'string') {\n      options.includeReadPreference = body.includeReadPreference;\n    }\n    if (typeof body.subqueryReadPreference === 'string') {\n      options.subqueryReadPreference = body.subqueryReadPreference;\n    }\n    if (body.hint && (typeof body.hint === 'string' || typeof body.hint === 'object')) {\n      options.hint = body.hint;\n    }\n    if (body.explain) {\n      options.explain = body.explain;\n    }\n    return options;\n  }\n\n  mountRoutes() {\n    this.route('GET', '/classes/:className', req => {\n      return this.handleFind(req);\n    });\n    this.route('GET', '/classes/:className/:objectId', req => {\n      return this.handleGet(req);\n    });\n    this.route('POST', '/classes/:className', promiseEnsureIdempotency, req => {\n      return this.handleCreate(req);\n    });\n    this.route('PUT', '/classes/:className/:objectId', promiseEnsureIdempotency, req => {\n      return this.handleUpdate(req);\n    });\n    this.route('DELETE', '/classes/:className/:objectId', req => {\n      return this.handleDelete(req);\n    });\n  }\n}\n\nexport default ClassesRouter;\n"],"file":"ClassesRouter.js"}